import{S as a,i as s,s as t,J as e,p as o,q as n,r,K as c,u as l,v as i,w as p,L as h,b as f,t as u,c as v,f as d,g as E,h as g,d as k,j as m,k as S,a as P,l as w}from"./client.adf0f3e4.js";import"./Sidebar.e5e4e031.js";import{B as A}from"./blog.cc4ea91b.js";function N(a){let s,t,e,o,n,r,c,l,i,p,h,A,N,y,b,x,O,C,j,D,T,I,M,q,W,B,L,R,_,G,F,$,H,J,z,K,Y,V,U,Q,X,Z,aa,sa,ta,ea,oa,na,ra,ca,la,ia,pa,ha,fa,ua,va,da,Ea,ga,ka,ma,Sa,Pa,wa,Aa,Na,ya,ba,xa,Oa,Ca,ja,Da,Ta,Ia,Ma,qa,Wa,Ba,La,Ra,_a,Ga,Fa,$a,Ha,Ja,za,Ka,Ya,Va,Ua,Qa,Xa,Za,as,ss,ts,es,os,ns,rs,cs,ls,is,ps,hs,fs,us,vs,ds,Es,gs,ks,ms,Ss,Ps,ws,As,Ns,ys,bs,xs,Os,Cs,js,Ds,Ts,Is,Ms,qs,Ws,Bs,Ls,Rs,_s,Gs,Fs,$s,Hs,Js,zs,Ks,Ys,Vs,Us,Qs,Xs,Zs,at,st,tt,et,ot,nt,rt,ct,lt,it,pt,ht,ft,ut,vt,dt,Et,gt,kt,mt,St,Pt,wt,At,Nt,yt,bt,xt,Ot,Ct,jt,Dt,Tt,It,Mt,qt,Wt,Bt,Lt,Rt,_t,Gt,Ft,$t,Ht,Jt,zt,Kt,Yt,Vt,Ut,Qt,Xt,Zt,ae,se,te,ee,oe,ne,re,ce,le,ie,pe,he,fe,ue,ve,de,Ee,ge,ke,me,Se,Pe,we,Ae,Ne,ye,be,xe,Oe,Ce,je,De,Te,Ie,Me,qe,We,Be,Le,Re,_e,Ge,Fe,$e,He,Je,ze,Ke,Ye,Ve,Ue,Qe,Xe,Ze,ao,so,to,eo,oo,no,ro,co,lo,io,po,ho,fo,uo,vo,Eo,go,ko,mo,So,Po,wo,Ao,No,yo,bo,xo,Oo,Co,jo,Do,To,Io,Mo,qo,Wo,Bo,Lo,Ro,_o,Go,Fo,$o,Ho,Jo,zo,Ko,Yo,Vo,Uo,Qo,Xo,Zo,an,sn,tn,en,on,nn,rn,cn,ln,pn,hn,fn,un,vn,dn,En,gn,kn,mn,Sn,Pn,wn,An,Nn,yn,bn,xn,On,Cn,jn,Dn,Tn,In,Mn,qn,Wn,Bn,Ln,Rn,_n,Gn,Fn,$n,Hn,Jn,zn,Kn,Yn,Vn,Un,Qn,Xn,Zn,ar,sr,tr,er,or,nr,rr,cr,lr,ir,pr,hr,fr,ur,vr,dr,Er,gr,kr,mr,Sr,Pr,wr,Ar,Nr,yr,br,xr,Or,Cr,jr,Dr,Tr,Ir,Mr,qr,Wr,Br,Lr,Rr,_r,Gr,Fr,$r,Hr,Jr,zr,Kr,Yr,Vr,Ur,Qr,Xr,Zr,ac,sc,tc,ec,oc,nc,rc,cc,lc,ic,pc,hc,fc,uc,vc,dc,Ec,gc,kc,mc,Sc,Pc,wc,Ac,Nc,yc,bc,xc,Oc,Cc,jc,Dc,Tc,Ic,Mc,qc,Wc,Bc,Lc,Rc,_c,Gc,Fc,$c,Hc,Jc,zc,Kc,Yc,Vc,Uc,Qc,Xc,Zc,al,sl,tl,el,ol,nl,rl,cl,ll,il,pl,hl,fl,ul,vl,dl,El,gl,kl,ml,Sl,Pl,wl,Al,Nl,yl,bl,xl,Ol,Cl,jl,Dl,Tl,Il,Ml,ql,Wl,Bl,Ll,Rl,_l,Gl,Fl,$l,Hl,Jl,zl,Kl,Yl,Vl,Ul,Ql,Xl,Zl,ai,si,ti,ei,oi,ni,ri,ci,li,ii,pi,hi,fi,ui,vi,di,Ei,gi,ki,mi,Si,Pi,wi,Ai,Ni,yi,bi,xi,Oi,Ci,ji,Di,Ti,Ii,Mi,qi,Wi,Bi,Li,Ri,_i,Gi,Fi,$i,Hi,Ji,zi,Ki,Yi,Vi,Ui,Qi,Xi,Zi,ap,sp,tp,ep,op,np,rp,cp,lp,ip,pp,hp,fp,up,vp,dp,Ep,gp,kp,mp,Sp,Pp,wp,Ap,Np,yp,bp,xp,Op,Cp,jp,Dp,Tp,Ip,Mp,qp,Wp,Bp,Lp,Rp,_p,Gp,Fp,$p,Hp,Jp,zp,Kp,Yp,Vp,Up,Qp,Xp,Zp,ah,sh,th,eh,oh,nh,rh,ch,lh,ih,ph,hh,fh,uh,vh,dh,Eh,gh,kh,mh,Sh,Ph,wh,Ah,Nh,yh,bh,xh,Oh,Ch,jh,Dh,Th,Ih,Mh,qh,Wh,Bh,Lh,Rh,_h,Gh,Fh,$h,Hh,Jh,zh,Kh,Yh,Vh,Uh,Qh,Xh,Zh,af,sf,tf,ef,of,nf,rf,cf,lf,pf,hf,ff,uf,vf,df,Ef,gf,kf,mf,Sf,Pf,wf,Af,Nf,yf,bf,xf,Of,Cf,jf,Df,Tf,If,Mf,qf,Wf,Bf,Lf,Rf,_f,Gf,Ff,$f,Hf,Jf,zf,Kf,Yf,Vf,Uf,Qf,Xf,Zf,au,su,tu,eu,ou,nu,ru,cu,lu,iu,pu,hu,fu,uu,vu,du,Eu,gu,ku,mu,Su,Pu,wu,Au,Nu,yu,bu,xu,Ou,Cu,ju,Du,Tu,Iu,Mu,qu,Wu,Bu,Lu,Ru,_u,Gu,Fu,$u,Hu,Ju,zu,Ku,Yu,Vu,Uu,Qu,Xu,Zu,av,sv,tv,ev,ov,nv,rv,cv,lv,iv,pv,hv,fv,uv,vv,dv,Ev,gv,kv,mv,Sv,Pv,wv,Av,Nv,yv,bv,xv,Ov,Cv,jv,Dv,Tv,Iv,Mv,qv,Wv,Bv,Lv,Rv,_v,Gv,Fv,$v,Hv,Jv,zv,Kv,Yv,Vv,Uv,Qv,Xv,Zv,ad,sd,td,ed,od,nd,rd,cd,ld,id,pd,hd,fd,ud,vd,dd,Ed,gd,kd,md,Sd,Pd,wd,Ad,Nd,yd,bd,xd,Od,Cd,jd,Dd,Td,Id,Md,qd,Wd,Bd,Ld,Rd,_d,Gd,Fd,$d,Hd,Jd,zd,Kd,Yd,Vd,Ud,Qd,Xd,Zd,aE,sE,tE,eE,oE,nE,rE,cE,lE,iE,pE,hE,fE,uE,vE,dE,EE,gE,kE,mE,SE,PE,wE,AE,NE,yE,bE,xE,OE,CE,jE,DE,TE,IE,ME,qE,WE,BE,LE,RE,_E,GE,FE,$E,HE,JE,zE,KE,YE,VE,UE,QE,XE,ZE,ag,sg,tg,eg,og,ng,rg,cg,lg,ig,pg,hg,fg,ug,vg,dg,Eg,gg,kg,mg,Sg,Pg,wg,Ag,Ng,yg,bg,xg,Og,Cg,jg,Dg,Tg,Ig,Mg,qg,Wg,Bg,Lg,Rg,_g,Gg,Fg,$g,Hg,Jg,zg,Kg,Yg,Vg,Ug,Qg,Xg,Zg,ak,sk,tk,ek,ok,nk,rk,ck,lk,ik,pk,hk,fk,uk,vk,dk,Ek,gk,kk,mk,Sk,Pk,wk,Ak,Nk,yk,bk,xk,Ok,Ck,jk,Dk,Tk,Ik,Mk,qk,Wk,Bk,Lk,Rk,_k,Gk,Fk,$k,Hk,Jk,zk,Kk,Yk,Vk,Uk,Qk,Xk,Zk,am,sm,tm,em,om,nm,rm,cm,lm,im,pm,hm,fm,um,vm,dm,Em,gm,km,mm,Sm,Pm,wm,Am,Nm,ym,bm,xm,Om,Cm,jm,Dm,Tm,Im,Mm,qm,Wm,Bm,Lm,Rm,_m,Gm,Fm,$m,Hm,Jm,zm,Km,Ym,Vm,Um,Qm,Xm,Zm,aS,sS,tS,eS,oS,nS,rS,cS,lS,iS,pS,hS,fS,uS,vS,dS,ES,gS,kS,mS,SS,PS,wS,AS,NS,yS,bS,xS,OS,CS,jS,DS,TS,IS,MS,qS,WS,BS,LS,RS,_S,GS,FS,$S,HS,JS,zS,KS,YS,VS,US,QS,XS,ZS,aP,sP,tP,eP,oP,nP,rP,cP,lP,iP,pP,hP,fP,uP,vP,dP,EP,gP,kP,mP,SP,PP,wP,AP,NP,yP,bP,xP,OP,CP,jP,DP,TP,IP,MP,qP,WP,BP,LP,RP,_P,GP,FP,$P,HP,JP,zP,KP,YP,VP,UP,QP,XP,ZP,aw,sw,tw,ew,ow,nw,rw,cw,lw,iw,pw,hw,fw,uw,vw,dw,Ew,gw,kw,mw,Sw,Pw,ww,Aw,Nw,yw,bw,xw,Ow,Cw,jw,Dw,Tw,Iw,Mw,qw,Ww,Bw,Lw,Rw,_w,Gw,Fw,$w,Hw,Jw,zw,Kw,Yw,Vw,Uw,Qw,Xw,Zw,aA,sA,tA,eA,oA,nA,rA,cA,lA,iA,pA,hA,fA,uA,vA,dA,EA,gA,kA,mA,SA,PA,wA,AA,NA,yA,bA,xA,OA,CA,jA,DA,TA,IA,MA,qA,WA,BA,LA,RA,_A,GA,FA,$A,HA,JA,zA,KA,YA,VA,UA,QA,XA,ZA,aN,sN,tN,eN,oN,nN,rN,cN,lN,iN,pN,hN,fN,uN,vN,dN,EN,gN,kN,mN,SN,PN,wN,AN,NN,yN,bN,xN,ON,CN,jN,DN,TN,IN,MN,qN,WN,BN,LN,RN,_N,GN,FN,$N,HN,JN,zN,KN,YN,VN,UN,QN,XN,ZN,ay,sy,ty,ey,oy,ny,ry,cy,ly,iy,py,hy,fy,uy,vy,dy,Ey,gy,ky,my,Sy,Py,wy,Ay,Ny,yy,by,xy,Oy,Cy,jy,Dy,Ty,Iy,My,qy,Wy,By,Ly,Ry,_y,Gy,Fy,$y,Hy,Jy,zy,Ky,Yy,Vy,Uy,Qy,Xy,Zy,ab,sb,tb,eb,ob,nb,rb,cb,lb,ib,pb,hb,fb,ub,vb,db,Eb,gb,kb,mb,Sb,Pb,wb,Ab,Nb,yb,bb,xb,Ob,Cb,jb,Db,Tb,Ib,Mb,qb,Wb,Bb,Lb,Rb,_b,Gb,Fb,$b,Hb,Jb,zb,Kb,Yb,Vb,Ub,Qb,Xb,Zb,ax,sx,tx,ex,ox,nx,rx,cx,lx,ix,px,hx,fx,ux,vx,dx,Ex,gx,kx,mx,Sx,Px,wx,Ax,Nx,yx,bx,xx,Ox,Cx,jx,Dx,Tx,Ix,Mx,qx;return{c(){s=f("p"),t=u("Learning frontend web-development can be pretty tough. Aside from the months you have to spend learning all of the basics of CSS, HTML, and JavaScript, you have to contend with a myriad of available frameworks, build tools, hosting, and on, and on. So it’s nice when people make libraries and tools to make that process easier."),e=v(),o=f("p"),n=f("a"),r=u("Svelte"),c=u(", and the framework built on top of it, "),l=f("a"),i=u("Sapper"),p=u(", along with "),h=f("a"),A=u("TailwindCss"),N=u(" and "),y=f("a"),b=u("mdsvex"),x=u(" make the task of creating a markdown blog much easier, though there are still plenty of ways it can go wrong. So, let’s walk through the process I went through to set this site up. Along the way I’ll write about why I made the decisions I did, the mistakes I made, and how I got around them."),O=v(),C=f("p"),j=u("With any luck we’ll both learn something."),D=v(),T=f("p"),I=f("strong"),M=u("But first…"),q=v(),W=f("p"),B=u("Before I start writing about this, let me just say that I know "),L=f("a"),R=u("SvelteKit"),_=u(" is on the way and will most likely make Sapper obsolete. Still, Rich Harris has said that the Svelte contributors are taking pains to make the transition from Sapper to SvelteKit pretty painless. I think this means that learning to use Sapper will transfer over to SvelteKit (as a matter of fact, I’ve tried some of the techniques I’ll go over using SvelteKit, so, with some minor changes in syntax, a lot of this should still apply.)"),G=v(),F=f("h2"),$=u("Getting Started"),H=v(),J=f("p"),z=u("Generally, getting started with a Svelte or Sapper app entails cloning one of their templates using "),K=f("a"),Y=u("Degit"),V=u(", which essentially clones a git repository and removes the "),U=f("code"),Q=u(".git"),X=u(" directory. We’re not going to copy the official "),Z=f("a"),aa=u("sveltejs/sapper template"),sa=u(" for this project, though. Why? Because the process of getting Tailwind, Sapper and mdsvex working together in a way that ensures all the features of each library play well together is a real pain in the butt and someone else has done a fantastic job of figuring it out."),ta=v(),ea=f("p"),oa=u("What we’re going to start with is Jacob Babich’s fantastic "),na=f("a"),ra=u("sapper-postcss-template"),ca=u(". There are other ways to integrate Tailwind with Svelte, some of them are really simple to set up, but they didn’t work with the way I’ve been using Tailwind (which I’ll leave for another discussion). For now, let’s just grab the template and get going."),la=v(),ia=f("pre"),pa=f("code"),ha=u("npx degit babichjacob/sapper-postcss-template"),fa=f("span"),ua=u("#main my-blog"),va=v(),da=f("p"),Ea=u("What this command does is grab whatever repo you provide as the first argument, in this case "),ga=f("code"),ka=u("babichjacob/sapper-postcss-template"),ma=u(", and copy it into whatever directory you provide as the second argument — "),Sa=f("code"),Pa=u("my-blog"),wa=u(" (or whatever you want to name the directory). If the template lives in a different branch than "),Aa=f("code"),Na=u("master"),ya=u(", as many Github repos have started to do this year, you’ll need to append the branch name with a hash — "),ba=f("code"),xa=u("#main"),Oa=u(" for this repo. If you wanted to you could also create a directory first, "),Ca=f("code"),ja=u("cd"),Da=u(" into the "),Ta=f("em"),Ia=u("empty"),Ma=u(" directory and use"),qa=v(),Wa=f("pre"),Ba=f("code"),La=u("npx degit babichjacob/sapper-postcss-template"),Ra=f("span"),_a=u("#main ."),Ga=v(),Fa=f("p"),$a=u("So, now we have a directory full of Jacob Babich’s template files. Let’s take a look at what’s in there."),Ha=v(),Ja=f("img"),Ka=v(),Ya=f("p"),Va=u("Mostly the template is the base Sapper template with some additional files that work to integrate Sapper with PostCss and Tailwind. Let’s spin this sucker up and see what’s what, shall we?"),Ua=v(),Qa=f("p"),Xa=u("First, we need to install all of the dependencies. "),Za=f("a"),as=u("pnpm"),ss=u(" is an alternative to npm that helps save disk space by keeping all of your dependencies on a "),ts=f("em"),es=u("content-addressable filesystem"),os=u(" on your hard drive. It then links to packages in that filesystem from the "),ns=f("code"),rs=u("node_modules"),cs=u(" directory in your project. This way, if you already have a dependency installed from another project, you don’t have to take up more disk space by installing it again. "),ls=f("a"),is=u("It’s pretty cool"),ps=u("!"),hs=v(),fs=f("p"),us=u("If you want to use pnpm and don’t have it installed yet, you can go ahead and install it with"),vs=v(),ds=f("pre"),Es=f("code"),gs=f("span"),ks=u("npm"),ms=u(" "),Ss=f("span"),Ps=u("install"),ws=u(" -g "),As=f("span"),Ns=u("pnpm"),ys=v(),bs=f("p"),xs=u("If you don’t want to use it, you can just follow along using "),Os=f("code"),Cs=u("npm"),js=u(" in place of "),Ds=f("code"),Ts=u("pnpm"),Is=u(" for any of the commands."),Ms=v(),qs=f("p"),Ws=u("Okay, back to the project. Install the dependencies."),Bs=v(),Ls=f("pre"),Rs=f("code"),_s=f("span"),Gs=u("pnpm"),Fs=u(" "),$s=f("span"),Hs=u("install"),Js=v(),zs=f("p"),Ks=u("Now let’s get the dev-server running."),Ys=v(),Vs=f("pre"),Us=f("code"),Qs=f("span"),Xs=u("pnpm"),Zs=u(" run dev"),at=v(),st=f("p"),tt=u("Which will do a bunch of fun stuff in your terminal."),et=v(),ot=f("img"),rt=v(),ct=f("p"),lt=u("If you open your browser to "),it=f("a"),pt=u("http://localhost:3000"),ht=u(" you’ll see the sapper template in all its glory"),ft=v(),ut=f("img"),dt=v(),Et=f("h2"),gt=u("Getting Comfortable"),kt=v(),mt=f("p"),St=u("Now that we have the base template up and running. Let’s take a look at some of the files that make it work. Open up "),Pt=f("code"),wt=u("svelte.config.js"),At=u(", located in the root of your project’s directory."),Nt=v(),yt=f("pre"),bt=f("code"),xt=f("span"),Ot=u("//svelte.config.js"),Ct=u("\n\n"),jt=f("span"),Dt=u("const"),Tt=u(" sveltePreprocess "),It=f("span"),Mt=u("="),qt=u(" "),Wt=f("span"),Bt=u("require"),Lt=f("span"),Rt=u("("),_t=f("span"),Gt=u('"svelte-preprocess"'),Ft=f("span"),$t=u(")"),Ht=f("span"),Jt=u(";"),zt=u("\n"),Kt=f("span"),Yt=u("const"),Vt=u(" postcss "),Ut=f("span"),Qt=u("="),Xt=u(" "),Zt=f("span"),ae=u("require"),se=f("span"),te=u("("),ee=f("span"),oe=u('"./postcss.config"'),ne=f("span"),re=u(")"),ce=f("span"),le=u(";"),ie=u("\n\n"),pe=f("span"),he=u("const"),fe=u(" "),ue=f("span"),ve=u("createPreprocessors"),de=u(" "),Ee=f("span"),ge=u("="),ke=u(" "),me=f("span"),Se=u("("),Pe=f("span"),we=f("span"),Ae=u("{"),Ne=u(" sourceMap "),ye=f("span"),be=u("}"),xe=f("span"),Oe=u(")"),Ce=u(" "),je=f("span"),De=u("=>"),Te=u(" "),Ie=f("span"),Me=u("["),qe=u("\n\t"),We=f("span"),Be=u("sveltePreprocess"),Le=f("span"),Re=u("("),_e=f("span"),Ge=u("{"),Fe=u("\n\t\tsourceMap"),$e=f("span"),He=u(","),Je=u("\n\t\tdefaults"),ze=f("span"),Ke=u(":"),Ye=u(" "),Ve=f("span"),Ue=u("{"),Qe=u("\n\t\t\tstyle"),Xe=f("span"),Ze=u(":"),ao=u(" "),so=f("span"),to=u('"postcss"'),eo=f("span"),oo=u(","),no=u("\n\t\t"),ro=f("span"),co=u("}"),lo=f("span"),io=u(","),po=u("\n\t\tpostcss"),ho=f("span"),fo=u(","),uo=u("\n\t"),vo=f("span"),Eo=u("}"),go=f("span"),ko=u(")"),mo=f("span"),So=u(","),Po=u("\n\t"),wo=f("span"),Ao=u("// You could have more preprocessors, like mdsvex"),No=u("\n"),yo=f("span"),bo=u("]"),xo=f("span"),Oo=u(";"),Co=u("\n\nmodule"),jo=f("span"),Do=u("."),To=u("exports "),Io=f("span"),Mo=u("="),qo=u(" "),Wo=f("span"),Bo=u("{"),Lo=u("\n\tcreatePreprocessors"),Ro=f("span"),_o=u(","),Go=u("\n\t"),Fo=f("span"),$o=u("// Options for `svelte-check` and the VS Code extension"),Ho=u("\n\tpreprocess"),Jo=f("span"),zo=u(":"),Ko=u(" "),Yo=f("span"),Vo=u("createPreprocessors"),Uo=f("span"),Qo=u("("),Xo=f("span"),Zo=u("{"),an=u(" sourceMap"),sn=f("span"),tn=u(":"),en=u(" "),on=f("span"),nn=u("true"),rn=u(" "),cn=f("span"),ln=u("}"),pn=f("span"),hn=u(")"),fn=f("span"),un=u(","),vn=u("\n"),dn=f("span"),En=u("}"),gn=f("span"),kn=u(";"),mn=v(),Sn=f("p"),Pn=u("Normally, this stuff would be in "),wn=f("code"),An=u("rollup.config.js"),Nn=u(", but it’s been separated into its own module here. This is where we’ll add mdsvex later. For now, just know that this is where we’ll be setting up any preprocessors. This file requires "),yn=f("code"),bn=u("postcss.config.js"),xn=u(", so let’s take a look at that file next."),On=v(),Cn=f("pre"),jn=f("code"),Dn=f("span"),Tn=u("//postcss.config.js"),In=u("\n\n"),Mn=f("span"),qn=u("const"),Wn=u(" cssnano "),Bn=f("span"),Ln=u("="),Rn=u(" "),_n=f("span"),Gn=u("require"),Fn=f("span"),$n=u("("),Hn=f("span"),Jn=u('"cssnano"'),zn=f("span"),Kn=u(")"),Yn=f("span"),Vn=u(";"),Un=u("\n"),Qn=f("span"),Xn=u("const"),Zn=u(" postcssImport "),ar=f("span"),sr=u("="),tr=u(" "),er=f("span"),or=u("require"),nr=f("span"),rr=u("("),cr=f("span"),lr=u('"postcss-import"'),ir=f("span"),pr=u(")"),hr=f("span"),fr=u(";"),ur=u("\n"),vr=f("span"),dr=u("const"),Er=u(" tailwindcss "),gr=f("span"),kr=u("="),mr=u(" "),Sr=f("span"),Pr=u("require"),wr=f("span"),Ar=u("("),Nr=f("span"),yr=u('"tailwindcss"'),br=f("span"),xr=u(")"),Or=f("span"),Cr=u(";"),jr=u("\n"),Dr=f("span"),Tr=u("const"),Ir=u(" tailwindcssConfig "),Mr=f("span"),qr=u("="),Wr=u(" "),Br=f("span"),Lr=u("require"),Rr=f("span"),_r=u("("),Gr=f("span"),Fr=u('"./tailwind.config"'),$r=f("span"),Hr=u(")"),Jr=f("span"),zr=u(";"),Kr=u("\n\n"),Yr=f("span"),Vr=u("const"),Ur=u(" mode "),Qr=f("span"),Xr=u("="),Zr=u(" "),ac=f("span"),sc=u('"production"'),tc=f("span"),ec=u(";"),oc=u("\n"),nc=f("span"),rc=u("const"),cc=u(" dev "),lc=f("span"),ic=u("="),pc=u(" mode "),hc=f("span"),fc=u("==="),uc=u(" "),vc=f("span"),dc=u('"development"'),Ec=f("span"),gc=u(";"),kc=u("\n\nmodule"),mc=f("span"),Sc=u("."),Pc=u("exports "),wc=f("span"),Ac=u("="),Nc=u(" "),yc=f("span"),bc=u("{"),xc=u("\n\tplugins"),Oc=f("span"),Cc=u(":"),jc=u(" "),Dc=f("span"),Tc=u("["),Ic=u("\n\t\tpostcssImport"),Mc=f("span"),qc=u(","),Wc=u("\n\n\t\t"),Bc=f("span"),Lc=u("tailwindcss"),Rc=f("span"),_c=u("("),Gc=u("tailwindcssConfig"),Fc=f("span"),$c=u(")"),Hc=f("span"),Jc=u(","),zc=u("\n\n\t\t"),Kc=f("span"),Yc=u("// Plugins for polyfills and the like (such as postcss-preset-env) should generally go here"),Vc=u("\n\t\t"),Uc=f("span"),Qc=u("// but a few have to run *before* Tailwind"),Xc=u("\n\n\t\t"),Zc=f("span"),al=u("!"),sl=u("dev "),tl=f("span"),el=u("&&"),ol=u(" "),nl=f("span"),rl=u("cssnano"),cl=f("span"),ll=u("("),il=f("span"),pl=u("{"),hl=u("\n\t\t\tpreset"),fl=f("span"),ul=u(":"),vl=u(" "),dl=f("span"),El=u("["),gl=u("\n\t\t\t\t"),kl=f("span"),ml=u('"default"'),Sl=f("span"),Pl=u(","),wl=u("\n\t\t\t\t"),Al=f("span"),Nl=u("{"),yl=u(" discardComments"),bl=f("span"),xl=u(":"),Ol=u(" "),Cl=f("span"),jl=u("{"),Dl=u(" removeAll"),Tl=f("span"),Il=u(":"),Ml=u(" "),ql=f("span"),Wl=u("true"),Bl=u(" "),Ll=f("span"),Rl=u("}"),_l=u(" "),Gl=f("span"),Fl=u("}"),$l=f("span"),Hl=u(","),Jl=u("\n\t\t\t"),zl=f("span"),Kl=u("]"),Yl=f("span"),Vl=u(","),Ul=u("\n\t\t"),Ql=f("span"),Xl=u("}"),Zl=f("span"),ai=u(")"),si=f("span"),ti=u(","),ei=u("\n\t"),oi=f("span"),ni=u("]"),ri=f("span"),ci=u("."),li=f("span"),ii=u("filter"),pi=f("span"),hi=u("("),fi=u("Boolean"),ui=f("span"),vi=u(")"),di=f("span"),Ei=u(","),gi=u("\n"),ki=f("span"),mi=u("}"),Si=f("span"),Pi=u(";"),wi=v(),Ai=f("p"),Ni=u("This is where we start getting into the nitty-gritty of making PostCss and Tailwind work with Svelte. If you have PostCss plugins to add, this is the place to do that. Let’s look at the other important config file that this file imports, "),yi=f("code"),bi=u("tailwind.config.js"),xi=v(),Oi=f("pre"),Ci=f("code"),ji=f("span"),Di=u("// tailwind.config.js"),Ti=u("\n\n"),Ii=f("span"),Mi=u("const"),qi=u(" "),Wi=f("span"),Bi=u("{"),Li=u(" tailwindExtractor "),Ri=f("span"),_i=u("}"),Gi=u(" "),Fi=f("span"),$i=u("="),Hi=u(" "),Ji=f("span"),zi=u("require"),Ki=f("span"),Yi=u("("),Vi=f("span"),Ui=u('"tailwindcss/lib/lib/purgeUnusedStyles"'),Qi=f("span"),Xi=u(")"),Zi=f("span"),ap=u(";"),sp=u("\n\nmodule"),tp=f("span"),ep=u("."),op=u("exports "),np=f("span"),rp=u("="),cp=u(" "),lp=f("span"),ip=u("{"),pp=u("\n\tpurge"),hp=f("span"),fp=u(":"),up=u(" "),vp=f("span"),dp=u("{"),Ep=u("\n\t\tcontent"),gp=f("span"),kp=u(":"),mp=u(" "),Sp=f("span"),Pp=u("["),wp=u("\n\t\t\t"),Ap=f("span"),Np=u('"./src/**/*.html"'),yp=f("span"),bp=u(","),xp=u("\n\t\t\t"),Op=f("span"),Cp=u('"./src/**/*.svelte"'),jp=f("span"),Dp=u(","),Tp=u("\n\t\t"),Ip=f("span"),Mp=u("]"),qp=f("span"),Wp=u(","),Bp=u("\n\t\toptions"),Lp=f("span"),Rp=u(":"),_p=u(" "),Gp=f("span"),Fp=u("{"),$p=u("\n\t\t\t"),Hp=f("span"),Jp=u("defaultExtractor"),zp=f("span"),Kp=u(":"),Yp=u(" "),Vp=f("span"),Up=u("("),Qp=f("span"),Xp=u("content"),Zp=f("span"),ah=u(")"),sh=u(" "),th=f("span"),eh=u("=>"),oh=u(" "),nh=f("span"),rh=u("["),ch=u("\n\t\t\t\t"),lh=f("span"),ih=u("// This is an internal Tailwind function that we're not supposed to be allowed to use"),ph=u("\n\t\t\t\t"),hh=f("span"),fh=u("// So if this stops working, please open an issue at"),uh=u("\n\t\t\t\t"),vh=f("span"),dh=u("// https://github.com/babichjacob/sapper-postcss-template/issues"),Eh=u("\n\t\t\t\t"),gh=f("span"),kh=u("// rather than bothering Tailwind Labs about it"),mh=u("\n\t\t\t\t"),Sh=f("span"),Ph=u("..."),wh=f("span"),Ah=u("tailwindExtractor"),Nh=f("span"),yh=u("("),bh=u("content"),xh=f("span"),Oh=u(")"),Ch=f("span"),jh=u(","),Dh=u("\n\t\t\t\t"),Th=f("span"),Ih=u("// Match Svelte class: directives (https://github.com/tailwindlabs/tailwindcss/discussions/1731)"),Mh=u("\n\t\t\t\t"),qh=f("span"),Wh=u("..."),Bh=f("span"),Lh=u("["),Rh=f("span"),_h=u("..."),Gh=u("content"),Fh=f("span"),$h=u("."),Hh=f("span"),Jh=u("matchAll"),zh=f("span"),Kh=u("("),Yh=f("span"),Vh=f("span"),Uh=u("/"),Qh=f("span"),Xh=u("(?:class:)*([\\w\\d-/:%.]+)"),Zh=f("span"),af=u("/"),sf=f("span"),tf=u("gm"),ef=f("span"),of=u(")"),nf=f("span"),rf=u("]"),cf=f("span"),lf=u("."),pf=f("span"),hf=u("map"),ff=f("span"),uf=u("("),vf=f("span"),df=u("("),Ef=f("span"),gf=f("span"),kf=u("["),mf=u("_match"),Sf=f("span"),Pf=u(","),wf=u(" group"),Af=f("span"),Nf=u(","),yf=u(" "),bf=f("span"),xf=u("..."),Of=u("_rest"),Cf=f("span"),jf=u("]"),Df=f("span"),Tf=u(")"),If=u(" "),Mf=f("span"),qf=u("=>"),Wf=u(" group"),Bf=f("span"),Lf=u(")"),Rf=f("span"),_f=u(","),Gf=u("\n\t\t\t"),Ff=f("span"),$f=u("]"),Hf=f("span"),Jf=u(","),zf=u("\n\t\t\tkeyframes"),Kf=f("span"),Yf=u(":"),Vf=u(" "),Uf=f("span"),Qf=u("true"),Xf=f("span"),Zf=u(","),au=u("\n\t\t"),su=f("span"),tu=u("}"),eu=f("span"),ou=u(","),nu=u("\n\t"),ru=f("span"),cu=u("}"),lu=f("span"),iu=u(","),pu=u("\n\ttheme"),hu=f("span"),fu=u(":"),uu=u(" "),vu=f("span"),du=u("{"),Eu=u("\n\t\textend"),gu=f("span"),ku=u(":"),mu=u(" "),Su=f("span"),Pu=u("{"),wu=f("span"),Au=u("}"),Nu=f("span"),yu=u(","),bu=u("\n\t"),xu=f("span"),Ou=u("}"),Cu=f("span"),ju=u(","),Du=u("\n\tvariants"),Tu=f("span"),Iu=u(":"),Mu=u(" "),qu=f("span"),Wu=u("{"),Bu=u("\n\t\textend"),Lu=f("span"),Ru=u(":"),_u=u(" "),Gu=f("span"),Fu=u("{"),$u=f("span"),Hu=u("}"),Ju=f("span"),zu=u(","),Ku=u("\n\t"),Yu=f("span"),Vu=u("}"),Uu=f("span"),Qu=u(","),Xu=u("\n\tplugins"),Zu=f("span"),av=u(":"),sv=u(" "),tv=f("span"),ev=u("["),ov=f("span"),nv=u("]"),rv=f("span"),cv=u(",");lv=u("\n"),iv=f("span"),pv=u("}"),hv=f("span"),fv=u(";"),uv=v(),vv=f("p"),dv=u("For the most part, this file is exactly the same as the default "),Ev=f("code"),gv=u("tailwind.config.js"),kv=u(" that comes when you initialize a new Tailwind project, with one big exception: "),mv=f("code"),Sv=u("defaultExtractor"),Pv=u(". This is a custom function for matching against Svelte "),wv=f("a"),Av=u("class"),Nv=u(" directives. This function is part of the reason this template is so awesome. Don’t mess with that function if you don’t know what you’re doing! Otherwise, this is where you’ll customize your tailwind configuration."),yv=v(),bv=f("p"),xv=u("Okay, so those are the config files. There are two last files of note that we should take a look at. The first is "),Ov=f("code"),Cv=u("src/global.pcss"),jv=u(", which is the file that imports all of Tailwind’s components and compiled css:"),Dv=v(),Tv=f("pre"),Iv=f("code"),Mv=f("span"),qv=f("span"),Wv=u("@import"),Bv=u(" "),Lv=f("span"),Rv=u('"tailwindcss/base"'),_v=f("span"),Gv=u(";"),Fv=u("\n"),$v=f("span"),Hv=u('/* @import "./base.pcss"; */'),Jv=u("\n\n"),zv=f("span"),Kv=f("span"),Yv=u("@import"),Vv=u(" "),Uv=f("span"),Qv=u('"tailwindcss/components"'),Xv=f("span"),Zv=u(";"),ad=u("\n"),sd=f("span"),td=u('/* @import "./components.pcss"; */'),ed=u("\n\n"),od=f("span"),nd=f("span"),rd=u("@import"),cd=u(" "),ld=f("span"),id=u('"tailwindcss/utilities"'),pd=f("span"),hd=u(";"),fd=u("\n"),ud=f("span"),vd=u('/* @import "./utilities.pcss"; */'),dd=v(),Ed=f("p"),gd=u("You can add global styles to this file by adding:"),kd=v(),md=f("pre"),Sd=f("code"),Pd=f("span"),wd=f("span"),Ad=u("@layer"),Nd=u(" base"),yd=u(" "),bd=f("span"),xd=u("{"),Od=u("\n    // your expert-level css here\n"),Cd=f("span"),jd=u("}"),Dd=v(),Td=f("p"),Id=u("Lastly, let’s look at the file that gets compiled by this fantastic Rube Goldberg Machine of config files, "),Md=f("code"),qd=u("static/global.css"),Wd=u(". I’m not going to show you the code here because the file is more than 3MB. This is basically everything that makes Tailwind work while you’re in development. When you eventually build for production this will be whittled down to some small number of kilobytes. What you should remember here is "),Bd=f("strong"),Ld=u("don’t edit this file or add your own styles to it"),Rd=u(". It will all be overwritten."),_d=v(),Gd=f("p"),Fd=u("Okay, enough looking at all of these config files. Let’s actually make a blog!"),$d=v(),Hd=f("h2"),Jd=u("Adding mdsvex"),zd=v(),Kd=f("p"),Yd=f("a"),Vd=u("mdsvex"),Ud=u(" is a project by "),Qd=f("a"),Xd=u("pngwn"),Zd=u(" that aims to introduce some of the functionality of "),aE=f("a"),sE=u("mdx"),tE=u(" to Svelte. Basically, mdsvex, allows you to write Svelte template code and some js in your markdown files. This is super-ideal for a blog made with Svelte/Sapper because you never really know when you’ll want to execute some real code in your markdown posts."),eE=v(),oE=f("p"),nE=u("Let’s install it and start playing around, shall we?"),rE=v(),cE=f("pre"),lE=f("code"),iE=f("span"),pE=u("pnpm"),hE=u(" "),fE=f("span"),uE=u("install"),vE=u(" mdsvex -D"),dE=v(),EE=f("p"),gE=u("We’re installing "),kE=f("code"),mE=u("mdsvex"),SE=u(" as a dev dependency here because we want this blog to be served as a static site. Later, when we export the static site from Sapper or use Netlify’s automated build process, those dev dependencies are what will be used in the build process."),PE=v(),wE=f("p"),AE=u("Once that’s installed, we need to add it to our preprocessors over in "),NE=f("code"),yE=u("svelte/config.js"),bE=u(" open that up again and we’ll import "),xE=f("code"),OE=u("mdsvex"),CE=u(":"),jE=v(),DE=f("pre"),TE=f("code"),IE=u('//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\n'),ME=f("span"),qE=f("span"),WE=u("+"),BE=u(" const { mdsvex } = require('mdsvex');"),LE=u("\n\nconst createPreprocessors = ({ sourceMap }) => [\n"),RE=f("span"),_E=f("span"),GE=u("+"),FE=u("   mdsvex({}),"),$E=u('\n\tsveltePreprocess({\n\t\tsourceMap,\n\t\tdefaults: {\n\t\t\tstyle: "postcss",\n\t\t},\n\t\tpostcss,\n\t}),\n\t// You could have more preprocessors, like mdsvex\n];\n\nmodule.exports = {\n\tcreatePreprocessors,\n\t// Options for `svelte-check` and the VS Code extension\n\tpreprocess: createPreprocessors({ sourceMap: true }),\n};'),HE=v(),JE=f("p"),zE=u("It’s important to add "),KE=f("code"),YE=u("mdsvex({})"),VE=v(),UE=f("em"),QE=u("above"),XE=v(),ZE=f("code"),ag=u("sveltePreprocess"),sg=u(" here. My first mistake when building this blog was to place "),tg=f("code"),eg=u("mdsvex({})"),og=u(" right after the comment "),ng=f("code"),rg=u("//you could have more preprocessors, like mdsvex"),cg=u(". I’m guessing this didn’t work because "),lg=f("code"),ig=u("sveltePreprocess"),pg=u(" works on "),hg=f("code"),fg=u(".svelte"),ug=u(" files, while mdsvex actually builds "),vg=f("code"),dg=u(".svelte"),Eg=u(" files from markdown, metadata, and abstract syntax trees through remark. Basically, if you try to hand "),gg=f("code"),kg=u("sveltePreprocess"),mg=u(" a bunch of markdown it will tell you, cryptically, that it can’t do what you want."),Sg=v(),Pg=f("p"),wg=u("mdsvex, by default, works with the "),Ag=f("code"),Ng=u(".svx"),yg=u(" file extension. We’ll get to writing actual "),bg=f("code"),xg=u(".svx"),Og=u(" files in a bit. First, let’s look at a feature of mdsvex: layouts."),Cg=v(),jg=f("p"),Dg=u("First, add the following to "),Tg=f("code"),Ig=u("svelte.config.js"),Mg=u(":"),qg=v(),Wg=f("pre"),Bg=f("code"),Lg=u('//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\nconst { mdsvex } = require(\'mdsvex\');\n'),Rg=f("span"),_g=f("span"),Gg=u("+"),Fg=u(" const path = require('path');"),$g=u("\nconst createPreprocessors = ({ sourceMap }) => [\n"),Hg=f("span"),Jg=f("span"),zg=u("  mdsvex({\n"),Kg=f("span"),Yg=f("span"),Vg=u("+"),Ug=u("   layout: {\n"),Qg=f("span"),Xg=u("+"),Zg=u("       blog: path.resolve(__dirname, 'src/layouts/blog.svelte'),\n"),ak=f("span"),sk=u("+"),tk=u("       default: path.resolve(__dirname, 'src/layouts/default.svelte'),\n"),ek=f("span"),ok=f("span"),nk=u("   }"),rk=u("\n..."),ck=v(),lk=f("p"),ik=u("We’re specifying two layout files here, one for the blog posts, and one as our default layout. We could just specify the single layout for blog posts if we wanted, but I wanted to highlight that we can specify multiple layouts for our "),pk=f("code"),hk=u(".svx"),fk=u(" files. It’s important to note here that any layout files you specify in this config "),uk=f("em"),vk=u("need to exist at the location you specify"),dk=u(" or you’ll get an ugly error."),Ek=v(),gk=f("p"),kk=u("Now, let’s create the layout files in the directory we specified. Create a directory at "),mk=f("code"),Sk=u("src/layouts"),Pk=u(". Then create two files: "),wk=f("code"),Ak=u("src/layouts/blog.svelte"),Nk=u(" and "),yk=f("code"),bk=u("src/layouts/default.svelte"),xk=u("."),Ok=v(),Ck=f("p"),jk=u("Then, we’ll just put the same code in both for now so we don’t run into any compile-time errors."),Dk=v(),Tk=f("pre"),Ik=f("code"),Mk=f("span"),qk=f("span"),Wk=f("span"),Bk=u("<"),Lk=u("script"),Rk=f("span"),_k=u(">"),Gk=f("span"),Fk=f("span"),$k=f("span"),Hk=u("//script stuff will go here"),Jk=u("\n"),zk=f("span"),Kk=f("span"),Yk=f("span"),Vk=u("</"),Uk=u("script"),Qk=f("span"),Xk=u(">"),Zk=u("\n\n"),am=f("span"),sm=f("span"),tm=f("span"),em=u("<"),om=u("slot"),nm=f("span"),rm=u(">"),cm=u("\n    "),lm=f("span"),im=u("\x3c!-- your mdsvex content will load here --\x3e"),pm=u("\n"),hm=f("span"),fm=f("span"),um=f("span"),vm=u("</"),dm=u("slot"),Em=f("span"),gm=u(">"),km=u("\n\n"),mm=f("span"),Sm=f("span"),Pm=f("span"),wm=u("<"),Am=u("style"),Nm=f("span"),ym=u(">"),bm=f("span"),xm=f("span"),Om=f("span"),Cm=u("/* style stuff will go here */"),jm=u("\n"),Dm=f("span"),Tm=f("span"),Im=f("span"),Mm=u("</"),qm=u("style"),Wm=f("span"),Bm=u(">"),Lm=v(),Rm=f("p"),_m=u("Okay, we have layout files. The next step is to add our "),Gm=f("code"),Fm=u("svx"),$m=u(" files to make sure everything works the way we expect it to."),Hm=v(),Jm=f("p"),zm=u("In your "),Km=f("code"),Ym=u("src/routes"),Vm=u(" directory, create a subdirectory named "),Um=f("code"),Qm=u("mdsvex"),Xm=u(". In that directory create a file called "),Zm=f("code"),aS=u("index.svx"),sS=u(" and put the following in that file:"),tS=v(),eS=f("pre"),oS=f("code"),nS=f("span"),rS=u("---"),cS=u("\nlayout: blog\ntitle: mdsvex test\ngreeting: Hello, Sapper, Tailwind, and mdsvex!\n\n"),lS=f("span"),iS=u("---"),pS=u("\n\n"),hS=f("span"),fS=f("span"),uS=u("##"),vS=u(" {title}"),dS=u("\n\n"),ES=f("span"),gS=f("span"),kS=u("##"),mS=u(" Hey! This is my mdsvex component!"),SS=u("\n\nNow this is some content, just because we need to have some content here."),PS=v(),wS=f("p"),AS=u("mdsvex allows us to use "),NS=f("code"),yS=u(".svx"),bS=u(" files in place of "),xS=f("code"),OS=u(".svelte"),CS=u(" files in our routes and components. So, what we’re doing here is setting up a test route so we can make sure everything’s wired up correctly. Because Sapper uses file-based routing, and once we’re finished with the next step, this file will be available at "),jS=f("a"),DS=u("http://localhost:3000/mdsvex"),TS=u("."),IS=v(),MS=f("p"),qS=u("Okay, there are two small things that we need to take care of to make sure this will run. First, we need to edit "),WS=f("code"),BS=u("package.json"),LS=u(" and modify our "),RS=f("code"),_S=u("dev"),GS=u(" script with an "),FS=f("code"),$S=u("--ext"),HS=u(" argument, telling the sapper command that we want it to look for both "),JS=f("code"),zS=u(".svx"),KS=u(" and "),YS=f("code"),VS=u(".svelte"),US=u(" files. Just replace the entire "),QS=f("code"),XS=u('"dev": "sapper dev",'),ZS=u(" line with:"),aP=v(),sP=f("pre"),tP=f("code"),eP=f("span"),oP=u('"dev"'),nP=f("span"),rP=u(":"),cP=u(" "),lP=f("span"),iP=u("\"sapper dev --ext '.svelte .svx'\""),pP=f("span"),hP=u(","),fP=v(),uP=f("p"),vP=u("We also need to tell "),dP=f("code"),EP=u("rollup-plugin-svelte"),gP=u(" to look for those extensions. Sapper has configurations for both the client and the server, so we need to make sure the code is in both configuration objects. Open up "),kP=f("code"),mP=u("rollup.config.json"),SP=u(" and add "),PP=f("code"),wP=u("extensions: ['.svx', '.svelte'],"),AP=u(" to the svelte plugin config of "),NP=f("strong"),yP=u("both"),bP=u(" the "),xP=f("code"),OP=u("client"),CP=u(" and "),jP=f("code"),DP=u("server"),TP=u(" sections of that config file:"),IP=v(),MP=f("pre"),qP=f("code"),WP=u("client"),BP=f("span"),LP=u(":"),RP=u(" "),_P=f("span"),GP=u("{"),FP=u("\n    plugins"),$P=f("span"),HP=u(":"),JP=u(" "),zP=f("span"),KP=u("["),YP=u("\n\t\t\t"),VP=f("span"),UP=u("// blahblahblah config stuff"),QP=u("\n\t\t\t"),XP=f("span"),ZP=u("svelte"),aw=f("span"),sw=u("("),tw=f("span"),ew=u("{"),ow=u("\n                extensions"),nw=f("span"),rw=u(":"),cw=u(" "),lw=f("span"),iw=u("["),pw=f("span"),hw=u("'.svx'"),fw=f("span"),uw=u(","),vw=u(" "),dw=f("span"),Ew=u("'.svelte'"),gw=f("span"),kw=u("]"),mw=f("span"),Sw=u(","),Pw=u("\n            "),ww=f("span"),Aw=u("// blahblahblah more config stuff"),Nw=u("\nserver"),yw=f("span"),bw=u(":"),xw=u(" "),Ow=f("span"),Cw=u("{"),jw=u("\n    plugins"),Dw=f("span"),Tw=u(":"),Iw=u(" "),Mw=f("span"),qw=u("["),Ww=u("\n\t\t\t"),Bw=f("span"),Lw=u("// blahblahblah config stuff"),Rw=u("\n\t\t\t"),_w=f("span"),Gw=u("svelte"),Fw=f("span"),$w=u("("),Hw=f("span"),Jw=u("{"),zw=u("\n                extensions"),Kw=f("span"),Yw=u(":"),Vw=u(" "),Uw=f("span"),Qw=u("["),Xw=f("span"),Zw=u("'.svx'"),aA=f("span"),sA=u(","),tA=u(" "),eA=f("span"),oA=u("'.svelte'"),nA=f("span"),rA=u("]"),cA=f("span"),lA=u(","),iA=u("\n            "),pA=f("span"),hA=u("// blahblahblah more config stuff"),fA=v(),uA=f("p"),vA=u("Finally! You should be able to run the whole thing with "),dA=f("code"),EA=u("pnpm run dev"),gA=u("."),kA=v(),mA=f("p"),SA=u("Do that and navigate to "),PA=f("a"),wA=u("http://localhost/mdsvex"),AA=u(" to see the glory of what you’ve been working so hard on."),NA=v(),yA=f("img"),xA=v(),OA=f("p"),CA=u("Okay, so it’s ugly. But, hey, it works! Let’s add some stuff to the "),jA=f("code"),DA=u("blog.svelte"),TA=u(" layout file so we can check out how variables in the "),IA=f("code"),MA=u(".svx"),qA=u(" frontmatter can be used by the "),WA=f("code"),BA=u(".svelte"),LA=u(" file. Just replace everything in blog.svelte with the following:"),RA=v(),_A=f("pre"),GA=f("code"),FA=f("span"),$A=f("span"),HA=f("span"),JA=u("<"),zA=u("script"),KA=f("span"),YA=u(">"),VA=f("span"),UA=f("span"),QA=f("span"),XA=u("export"),ZA=u(" "),aN=f("span"),sN=u("let"),tN=u(" greeting"),eN=f("span"),oN=u(";"),nN=u("\n"),rN=f("span"),cN=f("span"),lN=f("span"),iN=u("</"),pN=u("script"),hN=f("span"),fN=u(">"),uN=u("\n\n"),vN=f("span"),dN=f("span"),EN=f("span"),gN=u("<"),kN=u("main"),mN=f("span"),SN=u(">"),PN=u("\n    "),wN=f("span"),AN=f("span"),NN=f("span"),yN=u("<"),bN=u("h1"),xN=f("span"),ON=u(">"),CN=f("span"),jN=f("span"),DN=u("{"),TN=u("greeting"),IN=f("span"),MN=u("}"),qN=f("span"),WN=f("span"),BN=f("span"),LN=u("</"),RN=u("h1"),_N=f("span"),GN=u(">"),FN=u("\n    "),$N=f("span"),HN=f("span"),JN=f("span"),zN=u("<"),KN=u("slot"),YN=f("span"),VN=u(">"),UN=f("span"),QN=f("span"),XN=f("span"),ZN=u("</"),ay=u("slot"),sy=f("span"),ty=u(">"),ey=u("\n"),oy=f("span"),ny=f("span"),ry=f("span"),cy=u("</"),ly=u("main"),iy=f("span"),py=u(">"),hy=u("\n\n"),fy=f("span"),uy=f("span"),vy=f("span"),dy=u("<"),Ey=u("style"),gy=f("span"),ky=u(">"),my=f("span"),Sy=f("span"),Py=f("span"),wy=u("main"),Ay=u(" "),Ny=f("span"),yy=u("{"),by=u("\n\t\t"),xy=f("span"),Oy=u("width"),Cy=f("span"),jy=u(":"),Dy=u(" 50%"),Ty=f("span"),Iy=u(";"),My=u("\n\t\t"),qy=f("span"),Wy=u("margin"),By=f("span"),Ly=u(":"),Ry=u(" 3rem auto"),_y=f("span"),Gy=u(";"),Fy=u("\n\t"),$y=f("span"),Hy=u("}"),Jy=u("\n\t"),zy=f("span"),Ky=u(":global(h1)"),Yy=u(" "),Vy=f("span"),Uy=u("{"),Qy=u("\n\t\t"),Xy=f("span"),Zy=f("span"),ab=u("@apply"),sb=u(" text-3xl font-black text-red-500"),tb=f("span"),eb=u(";"),ob=u("\n\t"),nb=f("span"),rb=u("}"),cb=u("\n\t"),lb=f("span"),ib=u(":global(h2)"),pb=u(" "),hb=f("span"),fb=u("{"),ub=u("\n\t\t"),vb=f("span"),db=f("span"),Eb=u("@apply"),gb=u(" text-2xl font-bold mt-12"),kb=f("span"),mb=u(";"),Sb=u("\n\t"),Pb=f("span"),wb=u("}"),Ab=u("\n\t"),Nb=f("span"),yb=u(":global(h3)"),bb=u(" "),xb=f("span"),Ob=u("{"),Cb=u("\n\t\t"),jb=f("span"),Db=f("span"),Tb=u("@apply"),Ib=u(" text-xl font-bold mt-8"),Mb=f("span"),qb=u(";"),Wb=u("\n\t"),Bb=f("span"),Lb=u("}"),Rb=u("\n\t"),_b=f("span"),Gb=u(":global(p)"),Fb=u(" "),$b=f("span"),Hb=u("{"),Jb=u("\n\t\t"),zb=f("span"),Kb=f("span"),Yb=u("@apply"),Vb=u(" mt-4"),Ub=f("span"),Qb=u(";"),Xb=u("\n\t"),Zb=f("span"),ax=u("}"),sx=u("\n"),tx=f("span"),ex=f("span"),ox=f("span"),nx=u("</"),rx=u("style"),cx=f("span"),lx=u(">"),ix=v(),px=f("img"),fx=v(),ux=f("p"),vx=u("Okay, now you can see that "),dx=f("code"),Ex=u("greeting"),gx=u(", defined in the frontmatter of "),kx=f("code"),mx=u("index.svx"),Sx=u(" can be used as a prop in the "),Px=f("code"),wx=u("blog.svelte"),Ax=u(" layout file. We can also use the frontmatter properties in the "),Nx=f("code"),yx=u(".svx"),bx=u(" file itself. We can also use Tailwind’s "),xx=f("code"),Ox=u("@apply"),Cx=u(" syntax to, well, apply Tailwind class styles to the markdown content that’s added to our layout component. There’s a "),jx=f("em"),Dx=u("lot"),Tx=u(" more you can do with mdsvex, and we’ll get into some of it in the next part."),Ix=v(),Mx=f("p"),qx=u("That’s enough for one tutorial. We’ll learn how to set up what we’ve got so that we can create a blog with all of these cool libraries in the next part."),this.h()},l(a){s=d(a,"P",{});var f=E(s);t=g(f,"Learning frontend web-development can be pretty tough. Aside from the months you have to spend learning all of the basics of CSS, HTML, and JavaScript, you have to contend with a myriad of available frameworks, build tools, hosting, and on, and on. So it’s nice when people make libraries and tools to make that process easier."),f.forEach(k),e=m(a),o=d(a,"P",{});var u=E(o);n=d(u,"A",{href:!0,rel:!0});var v=E(n);r=g(v,"Svelte"),v.forEach(k),c=g(u,", and the framework built on top of it, "),l=d(u,"A",{href:!0,rel:!0});var S=E(l);i=g(S,"Sapper"),S.forEach(k),p=g(u,", along with "),h=d(u,"A",{href:!0,rel:!0});var P=E(h);A=g(P,"TailwindCss"),P.forEach(k),N=g(u," and "),y=d(u,"A",{href:!0,rel:!0});var w=E(y);b=g(w,"mdsvex"),w.forEach(k),x=g(u," make the task of creating a markdown blog much easier, though there are still plenty of ways it can go wrong. So, let’s walk through the process I went through to set this site up. Along the way I’ll write about why I made the decisions I did, the mistakes I made, and how I got around them."),u.forEach(k),O=m(a),C=d(a,"P",{});var za=E(C);j=g(za,"With any luck we’ll both learn something."),za.forEach(k),D=m(a),T=d(a,"P",{});var nt=E(T);I=d(nt,"STRONG",{});var vt=E(I);M=g(vt,"But first…"),vt.forEach(k),nt.forEach(k),q=m(a),W=d(a,"P",{});var bA=E(W);B=g(bA,"Before I start writing about this, let me just say that I know "),L=d(bA,"A",{href:!0,rel:!0});var hx=E(L);R=g(hx,"SvelteKit"),hx.forEach(k),_=g(bA," is on the way and will most likely make Sapper obsolete. Still, Rich Harris has said that the Svelte contributors are taking pains to make the transition from Sapper to SvelteKit pretty painless. I think this means that learning to use Sapper will transfer over to SvelteKit (as a matter of fact, I’ve tried some of the techniques I’ll go over using SvelteKit, so, with some minor changes in syntax, a lot of this should still apply.)"),bA.forEach(k),G=m(a),F=d(a,"H2",{id:!0});var Wx=E(F);$=g(Wx,"Getting Started"),Wx.forEach(k),H=m(a),J=d(a,"P",{});var Bx=E(J);z=g(Bx,"Generally, getting started with a Svelte or Sapper app entails cloning one of their templates using "),K=d(Bx,"A",{href:!0,rel:!0});var Lx=E(K);Y=g(Lx,"Degit"),Lx.forEach(k),V=g(Bx,", which essentially clones a git repository and removes the "),U=d(Bx,"CODE",{});var Rx=E(U);Q=g(Rx,".git"),Rx.forEach(k),X=g(Bx," directory. We’re not going to copy the official "),Z=d(Bx,"A",{href:!0,rel:!0});var _x=E(Z);aa=g(_x,"sveltejs/sapper template"),_x.forEach(k),sa=g(Bx," for this project, though. Why? Because the process of getting Tailwind, Sapper and mdsvex working together in a way that ensures all the features of each library play well together is a real pain in the butt and someone else has done a fantastic job of figuring it out."),Bx.forEach(k),ta=m(a),ea=d(a,"P",{});var Gx=E(ea);oa=g(Gx,"What we’re going to start with is Jacob Babich’s fantastic "),na=d(Gx,"A",{href:!0,rel:!0});var Fx=E(na);ra=g(Fx,"sapper-postcss-template"),Fx.forEach(k),ca=g(Gx,". There are other ways to integrate Tailwind with Svelte, some of them are really simple to set up, but they didn’t work with the way I’ve been using Tailwind (which I’ll leave for another discussion). For now, let’s just grab the template and get going."),Gx.forEach(k),la=m(a),ia=d(a,"PRE",{class:!0});var $x=E(ia);pa=d($x,"CODE",{class:!0});var Hx=E(pa);ha=g(Hx,"npx degit babichjacob/sapper-postcss-template"),fa=d(Hx,"SPAN",{class:!0});var Jx=E(fa);ua=g(Jx,"#main my-blog"),Jx.forEach(k),Hx.forEach(k),$x.forEach(k),va=m(a),da=d(a,"P",{});var zx=E(da);Ea=g(zx,"What this command does is grab whatever repo you provide as the first argument, in this case "),ga=d(zx,"CODE",{});var Kx=E(ga);ka=g(Kx,"babichjacob/sapper-postcss-template"),Kx.forEach(k),ma=g(zx,", and copy it into whatever directory you provide as the second argument — "),Sa=d(zx,"CODE",{});var Yx=E(Sa);Pa=g(Yx,"my-blog"),Yx.forEach(k),wa=g(zx," (or whatever you want to name the directory). If the template lives in a different branch than "),Aa=d(zx,"CODE",{});var Vx=E(Aa);Na=g(Vx,"master"),Vx.forEach(k),ya=g(zx,", as many Github repos have started to do this year, you’ll need to append the branch name with a hash — "),ba=d(zx,"CODE",{});var Ux=E(ba);xa=g(Ux,"#main"),Ux.forEach(k),Oa=g(zx," for this repo. If you wanted to you could also create a directory first, "),Ca=d(zx,"CODE",{});var Qx=E(Ca);ja=g(Qx,"cd"),Qx.forEach(k),Da=g(zx," into the "),Ta=d(zx,"EM",{});var Xx=E(Ta);Ia=g(Xx,"empty"),Xx.forEach(k),Ma=g(zx," directory and use"),zx.forEach(k),qa=m(a),Wa=d(a,"PRE",{class:!0});var Zx=E(Wa);Ba=d(Zx,"CODE",{class:!0});var aO=E(Ba);La=g(aO,"npx degit babichjacob/sapper-postcss-template"),Ra=d(aO,"SPAN",{class:!0});var sO=E(Ra);_a=g(sO,"#main ."),sO.forEach(k),aO.forEach(k),Zx.forEach(k),Ga=m(a),Fa=d(a,"P",{});var tO=E(Fa);$a=g(tO,"So, now we have a directory full of Jacob Babich’s template files. Let’s take a look at what’s in there."),tO.forEach(k),Ha=m(a),Ja=d(a,"IMG",{src:!0,alt:!0,loading:!0,class:!0,width:!0,height:!0}),Ka=m(a),Ya=d(a,"P",{});var eO=E(Ya);Va=g(eO,"Mostly the template is the base Sapper template with some additional files that work to integrate Sapper with PostCss and Tailwind. Let’s spin this sucker up and see what’s what, shall we?"),eO.forEach(k),Ua=m(a),Qa=d(a,"P",{});var oO=E(Qa);Xa=g(oO,"First, we need to install all of the dependencies. "),Za=d(oO,"A",{href:!0,rel:!0});var nO=E(Za);as=g(nO,"pnpm"),nO.forEach(k),ss=g(oO," is an alternative to npm that helps save disk space by keeping all of your dependencies on a "),ts=d(oO,"EM",{});var rO=E(ts);es=g(rO,"content-addressable filesystem"),rO.forEach(k),os=g(oO," on your hard drive. It then links to packages in that filesystem from the "),ns=d(oO,"CODE",{});var cO=E(ns);rs=g(cO,"node_modules"),cO.forEach(k),cs=g(oO," directory in your project. This way, if you already have a dependency installed from another project, you don’t have to take up more disk space by installing it again. "),ls=d(oO,"A",{href:!0,rel:!0});var lO=E(ls);is=g(lO,"It’s pretty cool"),lO.forEach(k),ps=g(oO,"!"),oO.forEach(k),hs=m(a),fs=d(a,"P",{});var iO=E(fs);us=g(iO,"If you want to use pnpm and don’t have it installed yet, you can go ahead and install it with"),iO.forEach(k),vs=m(a),ds=d(a,"PRE",{class:!0});var pO=E(ds);Es=d(pO,"CODE",{class:!0});var hO=E(Es);gs=d(hO,"SPAN",{class:!0});var fO=E(gs);ks=g(fO,"npm"),fO.forEach(k),ms=g(hO," "),Ss=d(hO,"SPAN",{class:!0});var uO=E(Ss);Ps=g(uO,"install"),uO.forEach(k),ws=g(hO," -g "),As=d(hO,"SPAN",{class:!0});var vO=E(As);Ns=g(vO,"pnpm"),vO.forEach(k),hO.forEach(k),pO.forEach(k),ys=m(a),bs=d(a,"P",{});var dO=E(bs);xs=g(dO,"If you don’t want to use it, you can just follow along using "),Os=d(dO,"CODE",{});var EO=E(Os);Cs=g(EO,"npm"),EO.forEach(k),js=g(dO," in place of "),Ds=d(dO,"CODE",{});var gO=E(Ds);Ts=g(gO,"pnpm"),gO.forEach(k),Is=g(dO," for any of the commands."),dO.forEach(k),Ms=m(a),qs=d(a,"P",{});var kO=E(qs);Ws=g(kO,"Okay, back to the project. Install the dependencies."),kO.forEach(k),Bs=m(a),Ls=d(a,"PRE",{class:!0});var mO=E(Ls);Rs=d(mO,"CODE",{class:!0});var SO=E(Rs);_s=d(SO,"SPAN",{class:!0});var PO=E(_s);Gs=g(PO,"pnpm"),PO.forEach(k),Fs=g(SO," "),$s=d(SO,"SPAN",{class:!0});var wO=E($s);Hs=g(wO,"install"),wO.forEach(k),SO.forEach(k),mO.forEach(k),Js=m(a),zs=d(a,"P",{});var AO=E(zs);Ks=g(AO,"Now let’s get the dev-server running."),AO.forEach(k),Ys=m(a),Vs=d(a,"PRE",{class:!0});var NO=E(Vs);Us=d(NO,"CODE",{class:!0});var yO=E(Us);Qs=d(yO,"SPAN",{class:!0});var bO=E(Qs);Xs=g(bO,"pnpm"),bO.forEach(k),Zs=g(yO," run dev"),yO.forEach(k),NO.forEach(k),at=m(a),st=d(a,"P",{});var xO=E(st);tt=g(xO,"Which will do a bunch of fun stuff in your terminal."),xO.forEach(k),et=m(a),ot=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),rt=m(a),ct=d(a,"P",{});var OO=E(ct);lt=g(OO,"If you open your browser to "),it=d(OO,"A",{href:!0,rel:!0});var CO=E(it);pt=g(CO,"http://localhost:3000"),CO.forEach(k),ht=g(OO," you’ll see the sapper template in all its glory"),OO.forEach(k),ft=m(a),ut=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),dt=m(a),Et=d(a,"H2",{id:!0});var jO=E(Et);gt=g(jO,"Getting Comfortable"),jO.forEach(k),kt=m(a),mt=d(a,"P",{});var DO=E(mt);St=g(DO,"Now that we have the base template up and running. Let’s take a look at some of the files that make it work. Open up "),Pt=d(DO,"CODE",{});var TO=E(Pt);wt=g(TO,"svelte.config.js"),TO.forEach(k),At=g(DO,", located in the root of your project’s directory."),DO.forEach(k),Nt=m(a),yt=d(a,"PRE",{class:!0});var IO=E(yt);bt=d(IO,"CODE",{class:!0});var MO=E(bt);xt=d(MO,"SPAN",{class:!0});var qO=E(xt);Ot=g(qO,"//svelte.config.js"),qO.forEach(k),Ct=g(MO,"\n\n"),jt=d(MO,"SPAN",{class:!0});var WO=E(jt);Dt=g(WO,"const"),WO.forEach(k),Tt=g(MO," sveltePreprocess "),It=d(MO,"SPAN",{class:!0});var BO=E(It);Mt=g(BO,"="),BO.forEach(k),qt=g(MO," "),Wt=d(MO,"SPAN",{class:!0});var LO=E(Wt);Bt=g(LO,"require"),LO.forEach(k),Lt=d(MO,"SPAN",{class:!0});var RO=E(Lt);Rt=g(RO,"("),RO.forEach(k),_t=d(MO,"SPAN",{class:!0});var _O=E(_t);Gt=g(_O,'"svelte-preprocess"'),_O.forEach(k),Ft=d(MO,"SPAN",{class:!0});var GO=E(Ft);$t=g(GO,")"),GO.forEach(k),Ht=d(MO,"SPAN",{class:!0});var FO=E(Ht);Jt=g(FO,";"),FO.forEach(k),zt=g(MO,"\n"),Kt=d(MO,"SPAN",{class:!0});var $O=E(Kt);Yt=g($O,"const"),$O.forEach(k),Vt=g(MO," postcss "),Ut=d(MO,"SPAN",{class:!0});var HO=E(Ut);Qt=g(HO,"="),HO.forEach(k),Xt=g(MO," "),Zt=d(MO,"SPAN",{class:!0});var JO=E(Zt);ae=g(JO,"require"),JO.forEach(k),se=d(MO,"SPAN",{class:!0});var zO=E(se);te=g(zO,"("),zO.forEach(k),ee=d(MO,"SPAN",{class:!0});var KO=E(ee);oe=g(KO,'"./postcss.config"'),KO.forEach(k),ne=d(MO,"SPAN",{class:!0});var YO=E(ne);re=g(YO,")"),YO.forEach(k),ce=d(MO,"SPAN",{class:!0});var VO=E(ce);le=g(VO,";"),VO.forEach(k),ie=g(MO,"\n\n"),pe=d(MO,"SPAN",{class:!0});var UO=E(pe);he=g(UO,"const"),UO.forEach(k),fe=g(MO," "),ue=d(MO,"SPAN",{class:!0});var QO=E(ue);ve=g(QO,"createPreprocessors"),QO.forEach(k),de=g(MO," "),Ee=d(MO,"SPAN",{class:!0});var XO=E(Ee);ge=g(XO,"="),XO.forEach(k),ke=g(MO," "),me=d(MO,"SPAN",{class:!0});var ZO=E(me);Se=g(ZO,"("),ZO.forEach(k),Pe=d(MO,"SPAN",{class:!0});var aC=E(Pe);we=d(aC,"SPAN",{class:!0});var sC=E(we);Ae=g(sC,"{"),sC.forEach(k),Ne=g(aC," sourceMap "),ye=d(aC,"SPAN",{class:!0});var tC=E(ye);be=g(tC,"}"),tC.forEach(k),aC.forEach(k),xe=d(MO,"SPAN",{class:!0});var eC=E(xe);Oe=g(eC,")"),eC.forEach(k),Ce=g(MO," "),je=d(MO,"SPAN",{class:!0});var oC=E(je);De=g(oC,"=>"),oC.forEach(k),Te=g(MO," "),Ie=d(MO,"SPAN",{class:!0});var nC=E(Ie);Me=g(nC,"["),nC.forEach(k),qe=g(MO,"\n\t"),We=d(MO,"SPAN",{class:!0});var rC=E(We);Be=g(rC,"sveltePreprocess"),rC.forEach(k),Le=d(MO,"SPAN",{class:!0});var cC=E(Le);Re=g(cC,"("),cC.forEach(k),_e=d(MO,"SPAN",{class:!0});var lC=E(_e);Ge=g(lC,"{"),lC.forEach(k),Fe=g(MO,"\n\t\tsourceMap"),$e=d(MO,"SPAN",{class:!0});var iC=E($e);He=g(iC,","),iC.forEach(k),Je=g(MO,"\n\t\tdefaults"),ze=d(MO,"SPAN",{class:!0});var pC=E(ze);Ke=g(pC,":"),pC.forEach(k),Ye=g(MO," "),Ve=d(MO,"SPAN",{class:!0});var hC=E(Ve);Ue=g(hC,"{"),hC.forEach(k),Qe=g(MO,"\n\t\t\tstyle"),Xe=d(MO,"SPAN",{class:!0});var fC=E(Xe);Ze=g(fC,":"),fC.forEach(k),ao=g(MO," "),so=d(MO,"SPAN",{class:!0});var uC=E(so);to=g(uC,'"postcss"'),uC.forEach(k),eo=d(MO,"SPAN",{class:!0});var vC=E(eo);oo=g(vC,","),vC.forEach(k),no=g(MO,"\n\t\t"),ro=d(MO,"SPAN",{class:!0});var dC=E(ro);co=g(dC,"}"),dC.forEach(k),lo=d(MO,"SPAN",{class:!0});var EC=E(lo);io=g(EC,","),EC.forEach(k),po=g(MO,"\n\t\tpostcss"),ho=d(MO,"SPAN",{class:!0});var gC=E(ho);fo=g(gC,","),gC.forEach(k),uo=g(MO,"\n\t"),vo=d(MO,"SPAN",{class:!0});var kC=E(vo);Eo=g(kC,"}"),kC.forEach(k),go=d(MO,"SPAN",{class:!0});var mC=E(go);ko=g(mC,")"),mC.forEach(k),mo=d(MO,"SPAN",{class:!0});var SC=E(mo);So=g(SC,","),SC.forEach(k),Po=g(MO,"\n\t"),wo=d(MO,"SPAN",{class:!0});var PC=E(wo);Ao=g(PC,"// You could have more preprocessors, like mdsvex"),PC.forEach(k),No=g(MO,"\n"),yo=d(MO,"SPAN",{class:!0});var wC=E(yo);bo=g(wC,"]"),wC.forEach(k),xo=d(MO,"SPAN",{class:!0});var AC=E(xo);Oo=g(AC,";"),AC.forEach(k),Co=g(MO,"\n\nmodule"),jo=d(MO,"SPAN",{class:!0});var NC=E(jo);Do=g(NC,"."),NC.forEach(k),To=g(MO,"exports "),Io=d(MO,"SPAN",{class:!0});var yC=E(Io);Mo=g(yC,"="),yC.forEach(k),qo=g(MO," "),Wo=d(MO,"SPAN",{class:!0});var bC=E(Wo);Bo=g(bC,"{"),bC.forEach(k),Lo=g(MO,"\n\tcreatePreprocessors"),Ro=d(MO,"SPAN",{class:!0});var xC=E(Ro);_o=g(xC,","),xC.forEach(k),Go=g(MO,"\n\t"),Fo=d(MO,"SPAN",{class:!0});var OC=E(Fo);$o=g(OC,"// Options for `svelte-check` and the VS Code extension"),OC.forEach(k),Ho=g(MO,"\n\tpreprocess"),Jo=d(MO,"SPAN",{class:!0});var CC=E(Jo);zo=g(CC,":"),CC.forEach(k),Ko=g(MO," "),Yo=d(MO,"SPAN",{class:!0});var jC=E(Yo);Vo=g(jC,"createPreprocessors"),jC.forEach(k),Uo=d(MO,"SPAN",{class:!0});var DC=E(Uo);Qo=g(DC,"("),DC.forEach(k),Xo=d(MO,"SPAN",{class:!0});var TC=E(Xo);Zo=g(TC,"{"),TC.forEach(k),an=g(MO," sourceMap"),sn=d(MO,"SPAN",{class:!0});var IC=E(sn);tn=g(IC,":"),IC.forEach(k),en=g(MO," "),on=d(MO,"SPAN",{class:!0});var MC=E(on);nn=g(MC,"true"),MC.forEach(k),rn=g(MO," "),cn=d(MO,"SPAN",{class:!0});var qC=E(cn);ln=g(qC,"}"),qC.forEach(k),pn=d(MO,"SPAN",{class:!0});var WC=E(pn);hn=g(WC,")"),WC.forEach(k),fn=d(MO,"SPAN",{class:!0});var BC=E(fn);un=g(BC,","),BC.forEach(k),vn=g(MO,"\n"),dn=d(MO,"SPAN",{class:!0});var LC=E(dn);En=g(LC,"}"),LC.forEach(k),gn=d(MO,"SPAN",{class:!0});var RC=E(gn);kn=g(RC,";"),RC.forEach(k),MO.forEach(k),IO.forEach(k),mn=m(a),Sn=d(a,"P",{});var _C=E(Sn);Pn=g(_C,"Normally, this stuff would be in "),wn=d(_C,"CODE",{});var GC=E(wn);An=g(GC,"rollup.config.js"),GC.forEach(k),Nn=g(_C,", but it’s been separated into its own module here. This is where we’ll add mdsvex later. For now, just know that this is where we’ll be setting up any preprocessors. This file requires "),yn=d(_C,"CODE",{});var FC=E(yn);bn=g(FC,"postcss.config.js"),FC.forEach(k),xn=g(_C,", so let’s take a look at that file next."),_C.forEach(k),On=m(a),Cn=d(a,"PRE",{class:!0});var $C=E(Cn);jn=d($C,"CODE",{class:!0});var HC=E(jn);Dn=d(HC,"SPAN",{class:!0});var JC=E(Dn);Tn=g(JC,"//postcss.config.js"),JC.forEach(k),In=g(HC,"\n\n"),Mn=d(HC,"SPAN",{class:!0});var zC=E(Mn);qn=g(zC,"const"),zC.forEach(k),Wn=g(HC," cssnano "),Bn=d(HC,"SPAN",{class:!0});var KC=E(Bn);Ln=g(KC,"="),KC.forEach(k),Rn=g(HC," "),_n=d(HC,"SPAN",{class:!0});var YC=E(_n);Gn=g(YC,"require"),YC.forEach(k),Fn=d(HC,"SPAN",{class:!0});var VC=E(Fn);$n=g(VC,"("),VC.forEach(k),Hn=d(HC,"SPAN",{class:!0});var UC=E(Hn);Jn=g(UC,'"cssnano"'),UC.forEach(k),zn=d(HC,"SPAN",{class:!0});var QC=E(zn);Kn=g(QC,")"),QC.forEach(k),Yn=d(HC,"SPAN",{class:!0});var XC=E(Yn);Vn=g(XC,";"),XC.forEach(k),Un=g(HC,"\n"),Qn=d(HC,"SPAN",{class:!0});var ZC=E(Qn);Xn=g(ZC,"const"),ZC.forEach(k),Zn=g(HC," postcssImport "),ar=d(HC,"SPAN",{class:!0});var aj=E(ar);sr=g(aj,"="),aj.forEach(k),tr=g(HC," "),er=d(HC,"SPAN",{class:!0});var sj=E(er);or=g(sj,"require"),sj.forEach(k),nr=d(HC,"SPAN",{class:!0});var tj=E(nr);rr=g(tj,"("),tj.forEach(k),cr=d(HC,"SPAN",{class:!0});var ej=E(cr);lr=g(ej,'"postcss-import"'),ej.forEach(k),ir=d(HC,"SPAN",{class:!0});var oj=E(ir);pr=g(oj,")"),oj.forEach(k),hr=d(HC,"SPAN",{class:!0});var nj=E(hr);fr=g(nj,";"),nj.forEach(k),ur=g(HC,"\n"),vr=d(HC,"SPAN",{class:!0});var rj=E(vr);dr=g(rj,"const"),rj.forEach(k),Er=g(HC," tailwindcss "),gr=d(HC,"SPAN",{class:!0});var cj=E(gr);kr=g(cj,"="),cj.forEach(k),mr=g(HC," "),Sr=d(HC,"SPAN",{class:!0});var lj=E(Sr);Pr=g(lj,"require"),lj.forEach(k),wr=d(HC,"SPAN",{class:!0});var ij=E(wr);Ar=g(ij,"("),ij.forEach(k),Nr=d(HC,"SPAN",{class:!0});var pj=E(Nr);yr=g(pj,'"tailwindcss"'),pj.forEach(k),br=d(HC,"SPAN",{class:!0});var hj=E(br);xr=g(hj,")"),hj.forEach(k),Or=d(HC,"SPAN",{class:!0});var fj=E(Or);Cr=g(fj,";"),fj.forEach(k),jr=g(HC,"\n"),Dr=d(HC,"SPAN",{class:!0});var uj=E(Dr);Tr=g(uj,"const"),uj.forEach(k),Ir=g(HC," tailwindcssConfig "),Mr=d(HC,"SPAN",{class:!0});var vj=E(Mr);qr=g(vj,"="),vj.forEach(k),Wr=g(HC," "),Br=d(HC,"SPAN",{class:!0});var dj=E(Br);Lr=g(dj,"require"),dj.forEach(k),Rr=d(HC,"SPAN",{class:!0});var Ej=E(Rr);_r=g(Ej,"("),Ej.forEach(k),Gr=d(HC,"SPAN",{class:!0});var gj=E(Gr);Fr=g(gj,'"./tailwind.config"'),gj.forEach(k),$r=d(HC,"SPAN",{class:!0});var kj=E($r);Hr=g(kj,")"),kj.forEach(k),Jr=d(HC,"SPAN",{class:!0});var mj=E(Jr);zr=g(mj,";"),mj.forEach(k),Kr=g(HC,"\n\n"),Yr=d(HC,"SPAN",{class:!0});var Sj=E(Yr);Vr=g(Sj,"const"),Sj.forEach(k),Ur=g(HC," mode "),Qr=d(HC,"SPAN",{class:!0});var Pj=E(Qr);Xr=g(Pj,"="),Pj.forEach(k),Zr=g(HC," "),ac=d(HC,"SPAN",{class:!0});var wj=E(ac);sc=g(wj,'"production"'),wj.forEach(k),tc=d(HC,"SPAN",{class:!0});var Aj=E(tc);ec=g(Aj,";"),Aj.forEach(k),oc=g(HC,"\n"),nc=d(HC,"SPAN",{class:!0});var Nj=E(nc);rc=g(Nj,"const"),Nj.forEach(k),cc=g(HC," dev "),lc=d(HC,"SPAN",{class:!0});var yj=E(lc);ic=g(yj,"="),yj.forEach(k),pc=g(HC," mode "),hc=d(HC,"SPAN",{class:!0});var bj=E(hc);fc=g(bj,"==="),bj.forEach(k),uc=g(HC," "),vc=d(HC,"SPAN",{class:!0});var xj=E(vc);dc=g(xj,'"development"'),xj.forEach(k),Ec=d(HC,"SPAN",{class:!0});var Oj=E(Ec);gc=g(Oj,";"),Oj.forEach(k),kc=g(HC,"\n\nmodule"),mc=d(HC,"SPAN",{class:!0});var Cj=E(mc);Sc=g(Cj,"."),Cj.forEach(k),Pc=g(HC,"exports "),wc=d(HC,"SPAN",{class:!0});var jj=E(wc);Ac=g(jj,"="),jj.forEach(k),Nc=g(HC," "),yc=d(HC,"SPAN",{class:!0});var Dj=E(yc);bc=g(Dj,"{"),Dj.forEach(k),xc=g(HC,"\n\tplugins"),Oc=d(HC,"SPAN",{class:!0});var Tj=E(Oc);Cc=g(Tj,":"),Tj.forEach(k),jc=g(HC," "),Dc=d(HC,"SPAN",{class:!0});var Ij=E(Dc);Tc=g(Ij,"["),Ij.forEach(k),Ic=g(HC,"\n\t\tpostcssImport"),Mc=d(HC,"SPAN",{class:!0});var Mj=E(Mc);qc=g(Mj,","),Mj.forEach(k),Wc=g(HC,"\n\n\t\t"),Bc=d(HC,"SPAN",{class:!0});var qj=E(Bc);Lc=g(qj,"tailwindcss"),qj.forEach(k),Rc=d(HC,"SPAN",{class:!0});var Wj=E(Rc);_c=g(Wj,"("),Wj.forEach(k),Gc=g(HC,"tailwindcssConfig"),Fc=d(HC,"SPAN",{class:!0});var Bj=E(Fc);$c=g(Bj,")"),Bj.forEach(k),Hc=d(HC,"SPAN",{class:!0});var Lj=E(Hc);Jc=g(Lj,","),Lj.forEach(k),zc=g(HC,"\n\n\t\t"),Kc=d(HC,"SPAN",{class:!0});var Rj=E(Kc);Yc=g(Rj,"// Plugins for polyfills and the like (such as postcss-preset-env) should generally go here"),Rj.forEach(k),Vc=g(HC,"\n\t\t"),Uc=d(HC,"SPAN",{class:!0});var _j=E(Uc);Qc=g(_j,"// but a few have to run *before* Tailwind"),_j.forEach(k),Xc=g(HC,"\n\n\t\t"),Zc=d(HC,"SPAN",{class:!0});var Gj=E(Zc);al=g(Gj,"!"),Gj.forEach(k),sl=g(HC,"dev "),tl=d(HC,"SPAN",{class:!0});var Fj=E(tl);el=g(Fj,"&&"),Fj.forEach(k),ol=g(HC," "),nl=d(HC,"SPAN",{class:!0});var $j=E(nl);rl=g($j,"cssnano"),$j.forEach(k),cl=d(HC,"SPAN",{class:!0});var Hj=E(cl);ll=g(Hj,"("),Hj.forEach(k),il=d(HC,"SPAN",{class:!0});var Jj=E(il);pl=g(Jj,"{"),Jj.forEach(k),hl=g(HC,"\n\t\t\tpreset"),fl=d(HC,"SPAN",{class:!0});var zj=E(fl);ul=g(zj,":"),zj.forEach(k),vl=g(HC," "),dl=d(HC,"SPAN",{class:!0});var Kj=E(dl);El=g(Kj,"["),Kj.forEach(k),gl=g(HC,"\n\t\t\t\t"),kl=d(HC,"SPAN",{class:!0});var Yj=E(kl);ml=g(Yj,'"default"'),Yj.forEach(k),Sl=d(HC,"SPAN",{class:!0});var Vj=E(Sl);Pl=g(Vj,","),Vj.forEach(k),wl=g(HC,"\n\t\t\t\t"),Al=d(HC,"SPAN",{class:!0});var Uj=E(Al);Nl=g(Uj,"{"),Uj.forEach(k),yl=g(HC," discardComments"),bl=d(HC,"SPAN",{class:!0});var Qj=E(bl);xl=g(Qj,":"),Qj.forEach(k),Ol=g(HC," "),Cl=d(HC,"SPAN",{class:!0});var Xj=E(Cl);jl=g(Xj,"{"),Xj.forEach(k),Dl=g(HC," removeAll"),Tl=d(HC,"SPAN",{class:!0});var Zj=E(Tl);Il=g(Zj,":"),Zj.forEach(k),Ml=g(HC," "),ql=d(HC,"SPAN",{class:!0});var aD=E(ql);Wl=g(aD,"true"),aD.forEach(k),Bl=g(HC," "),Ll=d(HC,"SPAN",{class:!0});var sD=E(Ll);Rl=g(sD,"}"),sD.forEach(k),_l=g(HC," "),Gl=d(HC,"SPAN",{class:!0});var tD=E(Gl);Fl=g(tD,"}"),tD.forEach(k),$l=d(HC,"SPAN",{class:!0});var eD=E($l);Hl=g(eD,","),eD.forEach(k),Jl=g(HC,"\n\t\t\t"),zl=d(HC,"SPAN",{class:!0});var oD=E(zl);Kl=g(oD,"]"),oD.forEach(k),Yl=d(HC,"SPAN",{class:!0});var nD=E(Yl);Vl=g(nD,","),nD.forEach(k),Ul=g(HC,"\n\t\t"),Ql=d(HC,"SPAN",{class:!0});var rD=E(Ql);Xl=g(rD,"}"),rD.forEach(k),Zl=d(HC,"SPAN",{class:!0});var cD=E(Zl);ai=g(cD,")"),cD.forEach(k),si=d(HC,"SPAN",{class:!0});var lD=E(si);ti=g(lD,","),lD.forEach(k),ei=g(HC,"\n\t"),oi=d(HC,"SPAN",{class:!0});var iD=E(oi);ni=g(iD,"]"),iD.forEach(k),ri=d(HC,"SPAN",{class:!0});var pD=E(ri);ci=g(pD,"."),pD.forEach(k),li=d(HC,"SPAN",{class:!0});var hD=E(li);ii=g(hD,"filter"),hD.forEach(k),pi=d(HC,"SPAN",{class:!0});var fD=E(pi);hi=g(fD,"("),fD.forEach(k),fi=g(HC,"Boolean"),ui=d(HC,"SPAN",{class:!0});var uD=E(ui);vi=g(uD,")"),uD.forEach(k),di=d(HC,"SPAN",{class:!0});var vD=E(di);Ei=g(vD,","),vD.forEach(k),gi=g(HC,"\n"),ki=d(HC,"SPAN",{class:!0});var dD=E(ki);mi=g(dD,"}"),dD.forEach(k),Si=d(HC,"SPAN",{class:!0});var ED=E(Si);Pi=g(ED,";"),ED.forEach(k),HC.forEach(k),$C.forEach(k),wi=m(a),Ai=d(a,"P",{});var gD=E(Ai);Ni=g(gD,"This is where we start getting into the nitty-gritty of making PostCss and Tailwind work with Svelte. If you have PostCss plugins to add, this is the place to do that. Let’s look at the other important config file that this file imports, "),yi=d(gD,"CODE",{});var kD=E(yi);bi=g(kD,"tailwind.config.js"),kD.forEach(k),gD.forEach(k),xi=m(a),Oi=d(a,"PRE",{class:!0});var mD=E(Oi);Ci=d(mD,"CODE",{class:!0});var SD=E(Ci);ji=d(SD,"SPAN",{class:!0});var PD=E(ji);Di=g(PD,"// tailwind.config.js"),PD.forEach(k),Ti=g(SD,"\n\n"),Ii=d(SD,"SPAN",{class:!0});var wD=E(Ii);Mi=g(wD,"const"),wD.forEach(k),qi=g(SD," "),Wi=d(SD,"SPAN",{class:!0});var AD=E(Wi);Bi=g(AD,"{"),AD.forEach(k),Li=g(SD," tailwindExtractor "),Ri=d(SD,"SPAN",{class:!0});var ND=E(Ri);_i=g(ND,"}"),ND.forEach(k),Gi=g(SD," "),Fi=d(SD,"SPAN",{class:!0});var yD=E(Fi);$i=g(yD,"="),yD.forEach(k),Hi=g(SD," "),Ji=d(SD,"SPAN",{class:!0});var bD=E(Ji);zi=g(bD,"require"),bD.forEach(k),Ki=d(SD,"SPAN",{class:!0});var xD=E(Ki);Yi=g(xD,"("),xD.forEach(k),Vi=d(SD,"SPAN",{class:!0});var OD=E(Vi);Ui=g(OD,'"tailwindcss/lib/lib/purgeUnusedStyles"'),OD.forEach(k),Qi=d(SD,"SPAN",{class:!0});var CD=E(Qi);Xi=g(CD,")"),CD.forEach(k),Zi=d(SD,"SPAN",{class:!0});var jD=E(Zi);ap=g(jD,";"),jD.forEach(k),sp=g(SD,"\n\nmodule"),tp=d(SD,"SPAN",{class:!0});var DD=E(tp);ep=g(DD,"."),DD.forEach(k),op=g(SD,"exports "),np=d(SD,"SPAN",{class:!0});var TD=E(np);rp=g(TD,"="),TD.forEach(k),cp=g(SD," "),lp=d(SD,"SPAN",{class:!0});var ID=E(lp);ip=g(ID,"{"),ID.forEach(k),pp=g(SD,"\n\tpurge"),hp=d(SD,"SPAN",{class:!0});var MD=E(hp);fp=g(MD,":"),MD.forEach(k),up=g(SD," "),vp=d(SD,"SPAN",{class:!0});var qD=E(vp);dp=g(qD,"{"),qD.forEach(k),Ep=g(SD,"\n\t\tcontent"),gp=d(SD,"SPAN",{class:!0});var WD=E(gp);kp=g(WD,":"),WD.forEach(k),mp=g(SD," "),Sp=d(SD,"SPAN",{class:!0});var BD=E(Sp);Pp=g(BD,"["),BD.forEach(k),wp=g(SD,"\n\t\t\t"),Ap=d(SD,"SPAN",{class:!0});var LD=E(Ap);Np=g(LD,'"./src/**/*.html"'),LD.forEach(k),yp=d(SD,"SPAN",{class:!0});var RD=E(yp);bp=g(RD,","),RD.forEach(k),xp=g(SD,"\n\t\t\t"),Op=d(SD,"SPAN",{class:!0});var _D=E(Op);Cp=g(_D,'"./src/**/*.svelte"'),_D.forEach(k),jp=d(SD,"SPAN",{class:!0});var GD=E(jp);Dp=g(GD,","),GD.forEach(k),Tp=g(SD,"\n\t\t"),Ip=d(SD,"SPAN",{class:!0});var FD=E(Ip);Mp=g(FD,"]"),FD.forEach(k),qp=d(SD,"SPAN",{class:!0});var $D=E(qp);Wp=g($D,","),$D.forEach(k),Bp=g(SD,"\n\t\toptions"),Lp=d(SD,"SPAN",{class:!0});var HD=E(Lp);Rp=g(HD,":"),HD.forEach(k),_p=g(SD," "),Gp=d(SD,"SPAN",{class:!0});var JD=E(Gp);Fp=g(JD,"{"),JD.forEach(k),$p=g(SD,"\n\t\t\t"),Hp=d(SD,"SPAN",{class:!0});var zD=E(Hp);Jp=g(zD,"defaultExtractor"),zD.forEach(k),zp=d(SD,"SPAN",{class:!0});var KD=E(zp);Kp=g(KD,":"),KD.forEach(k),Yp=g(SD," "),Vp=d(SD,"SPAN",{class:!0});var YD=E(Vp);Up=g(YD,"("),YD.forEach(k),Qp=d(SD,"SPAN",{class:!0});var VD=E(Qp);Xp=g(VD,"content"),VD.forEach(k),Zp=d(SD,"SPAN",{class:!0});var UD=E(Zp);ah=g(UD,")"),UD.forEach(k),sh=g(SD," "),th=d(SD,"SPAN",{class:!0});var QD=E(th);eh=g(QD,"=>"),QD.forEach(k),oh=g(SD," "),nh=d(SD,"SPAN",{class:!0});var XD=E(nh);rh=g(XD,"["),XD.forEach(k),ch=g(SD,"\n\t\t\t\t"),lh=d(SD,"SPAN",{class:!0});var ZD=E(lh);ih=g(ZD,"// This is an internal Tailwind function that we're not supposed to be allowed to use"),ZD.forEach(k),ph=g(SD,"\n\t\t\t\t"),hh=d(SD,"SPAN",{class:!0});var aT=E(hh);fh=g(aT,"// So if this stops working, please open an issue at"),aT.forEach(k),uh=g(SD,"\n\t\t\t\t"),vh=d(SD,"SPAN",{class:!0});var sT=E(vh);dh=g(sT,"// https://github.com/babichjacob/sapper-postcss-template/issues"),sT.forEach(k),Eh=g(SD,"\n\t\t\t\t"),gh=d(SD,"SPAN",{class:!0});var tT=E(gh);kh=g(tT,"// rather than bothering Tailwind Labs about it"),tT.forEach(k),mh=g(SD,"\n\t\t\t\t"),Sh=d(SD,"SPAN",{class:!0});var eT=E(Sh);Ph=g(eT,"..."),eT.forEach(k),wh=d(SD,"SPAN",{class:!0});var oT=E(wh);Ah=g(oT,"tailwindExtractor"),oT.forEach(k),Nh=d(SD,"SPAN",{class:!0});var nT=E(Nh);yh=g(nT,"("),nT.forEach(k),bh=g(SD,"content"),xh=d(SD,"SPAN",{class:!0});var rT=E(xh);Oh=g(rT,")"),rT.forEach(k),Ch=d(SD,"SPAN",{class:!0});var cT=E(Ch);jh=g(cT,","),cT.forEach(k),Dh=g(SD,"\n\t\t\t\t"),Th=d(SD,"SPAN",{class:!0});var lT=E(Th);Ih=g(lT,"// Match Svelte class: directives (https://github.com/tailwindlabs/tailwindcss/discussions/1731)"),lT.forEach(k),Mh=g(SD,"\n\t\t\t\t"),qh=d(SD,"SPAN",{class:!0});var iT=E(qh);Wh=g(iT,"..."),iT.forEach(k),Bh=d(SD,"SPAN",{class:!0});var pT=E(Bh);Lh=g(pT,"["),pT.forEach(k),Rh=d(SD,"SPAN",{class:!0});var hT=E(Rh);_h=g(hT,"..."),hT.forEach(k),Gh=g(SD,"content"),Fh=d(SD,"SPAN",{class:!0});var fT=E(Fh);$h=g(fT,"."),fT.forEach(k),Hh=d(SD,"SPAN",{class:!0});var uT=E(Hh);Jh=g(uT,"matchAll"),uT.forEach(k),zh=d(SD,"SPAN",{class:!0});var vT=E(zh);Kh=g(vT,"("),vT.forEach(k),Yh=d(SD,"SPAN",{class:!0});var dT=E(Yh);Vh=d(dT,"SPAN",{class:!0});var ET=E(Vh);Uh=g(ET,"/"),ET.forEach(k),Qh=d(dT,"SPAN",{class:!0});var gT=E(Qh);Xh=g(gT,"(?:class:)*([\\w\\d-/:%.]+)"),gT.forEach(k),Zh=d(dT,"SPAN",{class:!0});var kT=E(Zh);af=g(kT,"/"),kT.forEach(k),sf=d(dT,"SPAN",{class:!0});var mT=E(sf);tf=g(mT,"gm"),mT.forEach(k),dT.forEach(k),ef=d(SD,"SPAN",{class:!0});var ST=E(ef);of=g(ST,")"),ST.forEach(k),nf=d(SD,"SPAN",{class:!0});var PT=E(nf);rf=g(PT,"]"),PT.forEach(k),cf=d(SD,"SPAN",{class:!0});var wT=E(cf);lf=g(wT,"."),wT.forEach(k),pf=d(SD,"SPAN",{class:!0});var AT=E(pf);hf=g(AT,"map"),AT.forEach(k),ff=d(SD,"SPAN",{class:!0});var NT=E(ff);uf=g(NT,"("),NT.forEach(k),vf=d(SD,"SPAN",{class:!0});var yT=E(vf);df=g(yT,"("),yT.forEach(k),Ef=d(SD,"SPAN",{class:!0});var bT=E(Ef);gf=d(bT,"SPAN",{class:!0});var xT=E(gf);kf=g(xT,"["),xT.forEach(k),mf=g(bT,"_match"),Sf=d(bT,"SPAN",{class:!0});var OT=E(Sf);Pf=g(OT,","),OT.forEach(k),wf=g(bT," group"),Af=d(bT,"SPAN",{class:!0});var CT=E(Af);Nf=g(CT,","),CT.forEach(k),yf=g(bT," "),bf=d(bT,"SPAN",{class:!0});var jT=E(bf);xf=g(jT,"..."),jT.forEach(k),Of=g(bT,"_rest"),Cf=d(bT,"SPAN",{class:!0});var DT=E(Cf);jf=g(DT,"]"),DT.forEach(k),bT.forEach(k),Df=d(SD,"SPAN",{class:!0});var TT=E(Df);Tf=g(TT,")"),TT.forEach(k),If=g(SD," "),Mf=d(SD,"SPAN",{class:!0});var IT=E(Mf);qf=g(IT,"=>"),IT.forEach(k),Wf=g(SD," group"),Bf=d(SD,"SPAN",{class:!0});var MT=E(Bf);Lf=g(MT,")"),MT.forEach(k),Rf=d(SD,"SPAN",{class:!0});var qT=E(Rf);_f=g(qT,","),qT.forEach(k),Gf=g(SD,"\n\t\t\t"),Ff=d(SD,"SPAN",{class:!0});var WT=E(Ff);$f=g(WT,"]"),WT.forEach(k),Hf=d(SD,"SPAN",{class:!0});var BT=E(Hf);Jf=g(BT,","),BT.forEach(k),zf=g(SD,"\n\t\t\tkeyframes"),Kf=d(SD,"SPAN",{class:!0});var LT=E(Kf);Yf=g(LT,":"),LT.forEach(k),Vf=g(SD," "),Uf=d(SD,"SPAN",{class:!0});var RT=E(Uf);Qf=g(RT,"true"),RT.forEach(k),Xf=d(SD,"SPAN",{class:!0});var _T=E(Xf);Zf=g(_T,","),_T.forEach(k),au=g(SD,"\n\t\t"),su=d(SD,"SPAN",{class:!0});var GT=E(su);tu=g(GT,"}"),GT.forEach(k),eu=d(SD,"SPAN",{class:!0});var FT=E(eu);ou=g(FT,","),FT.forEach(k),nu=g(SD,"\n\t"),ru=d(SD,"SPAN",{class:!0});var $T=E(ru);cu=g($T,"}"),$T.forEach(k),lu=d(SD,"SPAN",{class:!0});var HT=E(lu);iu=g(HT,","),HT.forEach(k),pu=g(SD,"\n\ttheme"),hu=d(SD,"SPAN",{class:!0});var JT=E(hu);fu=g(JT,":"),JT.forEach(k),uu=g(SD," "),vu=d(SD,"SPAN",{class:!0});var zT=E(vu);du=g(zT,"{"),zT.forEach(k),Eu=g(SD,"\n\t\textend"),gu=d(SD,"SPAN",{class:!0});var KT=E(gu);ku=g(KT,":"),KT.forEach(k),mu=g(SD," "),Su=d(SD,"SPAN",{class:!0});var YT=E(Su);Pu=g(YT,"{"),YT.forEach(k),wu=d(SD,"SPAN",{class:!0});var VT=E(wu);Au=g(VT,"}"),VT.forEach(k),Nu=d(SD,"SPAN",{class:!0});var UT=E(Nu);yu=g(UT,","),UT.forEach(k),bu=g(SD,"\n\t"),xu=d(SD,"SPAN",{class:!0});var QT=E(xu);Ou=g(QT,"}"),QT.forEach(k),Cu=d(SD,"SPAN",{class:!0});var XT=E(Cu);ju=g(XT,","),XT.forEach(k),Du=g(SD,"\n\tvariants"),Tu=d(SD,"SPAN",{class:!0});var ZT=E(Tu);Iu=g(ZT,":"),ZT.forEach(k),Mu=g(SD," "),qu=d(SD,"SPAN",{class:!0});var aI=E(qu);Wu=g(aI,"{"),aI.forEach(k),Bu=g(SD,"\n\t\textend"),Lu=d(SD,"SPAN",{class:!0});var sI=E(Lu);Ru=g(sI,":"),sI.forEach(k),_u=g(SD," "),Gu=d(SD,"SPAN",{class:!0});var tI=E(Gu);Fu=g(tI,"{"),tI.forEach(k),$u=d(SD,"SPAN",{class:!0});var eI=E($u);Hu=g(eI,"}"),eI.forEach(k),Ju=d(SD,"SPAN",{class:!0});var oI=E(Ju);zu=g(oI,","),oI.forEach(k),Ku=g(SD,"\n\t"),Yu=d(SD,"SPAN",{class:!0});var nI=E(Yu);Vu=g(nI,"}"),nI.forEach(k),Uu=d(SD,"SPAN",{class:!0});var rI=E(Uu);Qu=g(rI,","),rI.forEach(k),Xu=g(SD,"\n\tplugins"),Zu=d(SD,"SPAN",{class:!0});var cI=E(Zu);av=g(cI,":"),cI.forEach(k),sv=g(SD," "),tv=d(SD,"SPAN",{class:!0});var lI=E(tv);ev=g(lI,"["),lI.forEach(k),ov=d(SD,"SPAN",{class:!0});var iI=E(ov);nv=g(iI,"]"),iI.forEach(k),rv=d(SD,"SPAN",{class:!0});var pI=E(rv);cv=g(pI,","),pI.forEach(k),lv=g(SD,"\n"),iv=d(SD,"SPAN",{class:!0});var hI=E(iv);pv=g(hI,"}"),hI.forEach(k),hv=d(SD,"SPAN",{class:!0});var fI=E(hv);fv=g(fI,";"),fI.forEach(k),SD.forEach(k),mD.forEach(k),uv=m(a),vv=d(a,"P",{});var uI=E(vv);dv=g(uI,"For the most part, this file is exactly the same as the default "),Ev=d(uI,"CODE",{});var vI=E(Ev);gv=g(vI,"tailwind.config.js"),vI.forEach(k),kv=g(uI," that comes when you initialize a new Tailwind project, with one big exception: "),mv=d(uI,"CODE",{});var dI=E(mv);Sv=g(dI,"defaultExtractor"),dI.forEach(k),Pv=g(uI,". This is a custom function for matching against Svelte "),wv=d(uI,"A",{href:!0,rel:!0});var EI=E(wv);Av=g(EI,"class"),EI.forEach(k),Nv=g(uI," directives. This function is part of the reason this template is so awesome. Don’t mess with that function if you don’t know what you’re doing! Otherwise, this is where you’ll customize your tailwind configuration."),uI.forEach(k),yv=m(a),bv=d(a,"P",{});var gI=E(bv);xv=g(gI,"Okay, so those are the config files. There are two last files of note that we should take a look at. The first is "),Ov=d(gI,"CODE",{});var kI=E(Ov);Cv=g(kI,"src/global.pcss"),kI.forEach(k),jv=g(gI,", which is the file that imports all of Tailwind’s components and compiled css:"),gI.forEach(k),Dv=m(a),Tv=d(a,"PRE",{class:!0});var mI=E(Tv);Iv=d(mI,"CODE",{class:!0});var SI=E(Iv);Mv=d(SI,"SPAN",{class:!0});var PI=E(Mv);qv=d(PI,"SPAN",{class:!0});var wI=E(qv);Wv=g(wI,"@import"),wI.forEach(k),Bv=g(PI," "),Lv=d(PI,"SPAN",{class:!0});var AI=E(Lv);Rv=g(AI,'"tailwindcss/base"'),AI.forEach(k),_v=d(PI,"SPAN",{class:!0});var NI=E(_v);Gv=g(NI,";"),NI.forEach(k),PI.forEach(k),Fv=g(SI,"\n"),$v=d(SI,"SPAN",{class:!0});var yI=E($v);Hv=g(yI,'/* @import "./base.pcss"; */'),yI.forEach(k),Jv=g(SI,"\n\n"),zv=d(SI,"SPAN",{class:!0});var bI=E(zv);Kv=d(bI,"SPAN",{class:!0});var xI=E(Kv);Yv=g(xI,"@import"),xI.forEach(k),Vv=g(bI," "),Uv=d(bI,"SPAN",{class:!0});var OI=E(Uv);Qv=g(OI,'"tailwindcss/components"'),OI.forEach(k),Xv=d(bI,"SPAN",{class:!0});var CI=E(Xv);Zv=g(CI,";"),CI.forEach(k),bI.forEach(k),ad=g(SI,"\n"),sd=d(SI,"SPAN",{class:!0});var jI=E(sd);td=g(jI,'/* @import "./components.pcss"; */'),jI.forEach(k),ed=g(SI,"\n\n"),od=d(SI,"SPAN",{class:!0});var DI=E(od);nd=d(DI,"SPAN",{class:!0});var TI=E(nd);rd=g(TI,"@import"),TI.forEach(k),cd=g(DI," "),ld=d(DI,"SPAN",{class:!0});var II=E(ld);id=g(II,'"tailwindcss/utilities"'),II.forEach(k),pd=d(DI,"SPAN",{class:!0});var MI=E(pd);hd=g(MI,";"),MI.forEach(k),DI.forEach(k),fd=g(SI,"\n"),ud=d(SI,"SPAN",{class:!0});var qI=E(ud);vd=g(qI,'/* @import "./utilities.pcss"; */'),qI.forEach(k),SI.forEach(k),mI.forEach(k),dd=m(a),Ed=d(a,"P",{});var WI=E(Ed);gd=g(WI,"You can add global styles to this file by adding:"),WI.forEach(k),kd=m(a),md=d(a,"PRE",{class:!0});var BI=E(md);Sd=d(BI,"CODE",{class:!0});var LI=E(Sd);Pd=d(LI,"SPAN",{class:!0});var RI=E(Pd);wd=d(RI,"SPAN",{class:!0});var _I=E(wd);Ad=g(_I,"@layer"),_I.forEach(k),Nd=g(RI," base"),RI.forEach(k),yd=g(LI," "),bd=d(LI,"SPAN",{class:!0});var GI=E(bd);xd=g(GI,"{"),GI.forEach(k),Od=g(LI,"\n    // your expert-level css here\n"),Cd=d(LI,"SPAN",{class:!0});var FI=E(Cd);jd=g(FI,"}"),FI.forEach(k),LI.forEach(k),BI.forEach(k),Dd=m(a),Td=d(a,"P",{});var $I=E(Td);Id=g($I,"Lastly, let’s look at the file that gets compiled by this fantastic Rube Goldberg Machine of config files, "),Md=d($I,"CODE",{});var HI=E(Md);qd=g(HI,"static/global.css"),HI.forEach(k),Wd=g($I,". I’m not going to show you the code here because the file is more than 3MB. This is basically everything that makes Tailwind work while you’re in development. When you eventually build for production this will be whittled down to some small number of kilobytes. What you should remember here is "),Bd=d($I,"STRONG",{});var JI=E(Bd);Ld=g(JI,"don’t edit this file or add your own styles to it"),JI.forEach(k),Rd=g($I,". It will all be overwritten."),$I.forEach(k),_d=m(a),Gd=d(a,"P",{});var zI=E(Gd);Fd=g(zI,"Okay, enough looking at all of these config files. Let’s actually make a blog!"),zI.forEach(k),$d=m(a),Hd=d(a,"H2",{id:!0});var KI=E(Hd);Jd=g(KI,"Adding mdsvex"),KI.forEach(k),zd=m(a),Kd=d(a,"P",{});var YI=E(Kd);Yd=d(YI,"A",{href:!0,rel:!0});var VI=E(Yd);Vd=g(VI,"mdsvex"),VI.forEach(k),Ud=g(YI," is a project by "),Qd=d(YI,"A",{href:!0,rel:!0});var UI=E(Qd);Xd=g(UI,"pngwn"),UI.forEach(k),Zd=g(YI," that aims to introduce some of the functionality of "),aE=d(YI,"A",{href:!0,rel:!0});var QI=E(aE);sE=g(QI,"mdx"),QI.forEach(k),tE=g(YI," to Svelte. Basically, mdsvex, allows you to write Svelte template code and some js in your markdown files. This is super-ideal for a blog made with Svelte/Sapper because you never really know when you’ll want to execute some real code in your markdown posts."),YI.forEach(k),eE=m(a),oE=d(a,"P",{});var XI=E(oE);nE=g(XI,"Let’s install it and start playing around, shall we?"),XI.forEach(k),rE=m(a),cE=d(a,"PRE",{class:!0});var ZI=E(cE);lE=d(ZI,"CODE",{class:!0});var aM=E(lE);iE=d(aM,"SPAN",{class:!0});var sM=E(iE);pE=g(sM,"pnpm"),sM.forEach(k),hE=g(aM," "),fE=d(aM,"SPAN",{class:!0});var tM=E(fE);uE=g(tM,"install"),tM.forEach(k),vE=g(aM," mdsvex -D"),aM.forEach(k),ZI.forEach(k),dE=m(a),EE=d(a,"P",{});var eM=E(EE);gE=g(eM,"We’re installing "),kE=d(eM,"CODE",{});var oM=E(kE);mE=g(oM,"mdsvex"),oM.forEach(k),SE=g(eM," as a dev dependency here because we want this blog to be served as a static site. Later, when we export the static site from Sapper or use Netlify’s automated build process, those dev dependencies are what will be used in the build process."),eM.forEach(k),PE=m(a),wE=d(a,"P",{});var nM=E(wE);AE=g(nM,"Once that’s installed, we need to add it to our preprocessors over in "),NE=d(nM,"CODE",{});var rM=E(NE);yE=g(rM,"svelte/config.js"),rM.forEach(k),bE=g(nM," open that up again and we’ll import "),xE=d(nM,"CODE",{});var cM=E(xE);OE=g(cM,"mdsvex"),cM.forEach(k),CE=g(nM,":"),nM.forEach(k),jE=m(a),DE=d(a,"PRE",{class:!0});var lM=E(DE);TE=d(lM,"CODE",{class:!0});var iM=E(TE);IE=g(iM,'//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\n'),ME=d(iM,"SPAN",{class:!0});var pM=E(ME);qE=d(pM,"SPAN",{class:!0});var hM=E(qE);WE=g(hM,"+"),hM.forEach(k),BE=g(pM," const { mdsvex } = require('mdsvex');"),pM.forEach(k),LE=g(iM,"\n\nconst createPreprocessors = ({ sourceMap }) => [\n"),RE=d(iM,"SPAN",{class:!0});var fM=E(RE);_E=d(fM,"SPAN",{class:!0});var uM=E(_E);GE=g(uM,"+"),uM.forEach(k),FE=g(fM,"   mdsvex({}),"),fM.forEach(k),$E=g(iM,'\n\tsveltePreprocess({\n\t\tsourceMap,\n\t\tdefaults: {\n\t\t\tstyle: "postcss",\n\t\t},\n\t\tpostcss,\n\t}),\n\t// You could have more preprocessors, like mdsvex\n];\n\nmodule.exports = {\n\tcreatePreprocessors,\n\t// Options for `svelte-check` and the VS Code extension\n\tpreprocess: createPreprocessors({ sourceMap: true }),\n};'),iM.forEach(k),lM.forEach(k),HE=m(a),JE=d(a,"P",{});var vM=E(JE);zE=g(vM,"It’s important to add "),KE=d(vM,"CODE",{});var dM=E(KE);YE=g(dM,"mdsvex({})"),dM.forEach(k),VE=m(vM),UE=d(vM,"EM",{});var EM=E(UE);QE=g(EM,"above"),EM.forEach(k),XE=m(vM),ZE=d(vM,"CODE",{});var gM=E(ZE);ag=g(gM,"sveltePreprocess"),gM.forEach(k),sg=g(vM," here. My first mistake when building this blog was to place "),tg=d(vM,"CODE",{});var kM=E(tg);eg=g(kM,"mdsvex({})"),kM.forEach(k),og=g(vM," right after the comment "),ng=d(vM,"CODE",{});var mM=E(ng);rg=g(mM,"//you could have more preprocessors, like mdsvex"),mM.forEach(k),cg=g(vM,". I’m guessing this didn’t work because "),lg=d(vM,"CODE",{});var SM=E(lg);ig=g(SM,"sveltePreprocess"),SM.forEach(k),pg=g(vM," works on "),hg=d(vM,"CODE",{});var PM=E(hg);fg=g(PM,".svelte"),PM.forEach(k),ug=g(vM," files, while mdsvex actually builds "),vg=d(vM,"CODE",{});var wM=E(vg);dg=g(wM,".svelte"),wM.forEach(k),Eg=g(vM," files from markdown, metadata, and abstract syntax trees through remark. Basically, if you try to hand "),gg=d(vM,"CODE",{});var AM=E(gg);kg=g(AM,"sveltePreprocess"),AM.forEach(k),mg=g(vM," a bunch of markdown it will tell you, cryptically, that it can’t do what you want."),vM.forEach(k),Sg=m(a),Pg=d(a,"P",{});var NM=E(Pg);wg=g(NM,"mdsvex, by default, works with the "),Ag=d(NM,"CODE",{});var yM=E(Ag);Ng=g(yM,".svx"),yM.forEach(k),yg=g(NM," file extension. We’ll get to writing actual "),bg=d(NM,"CODE",{});var bM=E(bg);xg=g(bM,".svx"),bM.forEach(k),Og=g(NM," files in a bit. First, let’s look at a feature of mdsvex: layouts."),NM.forEach(k),Cg=m(a),jg=d(a,"P",{});var xM=E(jg);Dg=g(xM,"First, add the following to "),Tg=d(xM,"CODE",{});var OM=E(Tg);Ig=g(OM,"svelte.config.js"),OM.forEach(k),Mg=g(xM,":"),xM.forEach(k),qg=m(a),Wg=d(a,"PRE",{class:!0});var CM=E(Wg);Bg=d(CM,"CODE",{class:!0});var jM=E(Bg);Lg=g(jM,'//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\nconst { mdsvex } = require(\'mdsvex\');\n'),Rg=d(jM,"SPAN",{class:!0});var DM=E(Rg);_g=d(DM,"SPAN",{class:!0});var TM=E(_g);Gg=g(TM,"+"),TM.forEach(k),Fg=g(DM," const path = require('path');"),DM.forEach(k),$g=g(jM,"\nconst createPreprocessors = ({ sourceMap }) => [\n"),Hg=d(jM,"SPAN",{class:!0});var IM=E(Hg);Jg=d(IM,"SPAN",{class:!0}),E(Jg).forEach(k),zg=g(IM,"  mdsvex({\n"),IM.forEach(k),Kg=d(jM,"SPAN",{class:!0});var MM=E(Kg);Yg=d(MM,"SPAN",{class:!0});var qM=E(Yg);Vg=g(qM,"+"),qM.forEach(k),Ug=g(MM,"   layout: {\n"),Qg=d(MM,"SPAN",{class:!0});var WM=E(Qg);Xg=g(WM,"+"),WM.forEach(k),Zg=g(MM,"       blog: path.resolve(__dirname, 'src/layouts/blog.svelte'),\n"),ak=d(MM,"SPAN",{class:!0});var BM=E(ak);sk=g(BM,"+"),BM.forEach(k),tk=g(MM,"       default: path.resolve(__dirname, 'src/layouts/default.svelte'),\n"),MM.forEach(k),ek=d(jM,"SPAN",{class:!0});var LM=E(ek);ok=d(LM,"SPAN",{class:!0}),E(ok).forEach(k),nk=g(LM,"   }"),LM.forEach(k),rk=g(jM,"\n..."),jM.forEach(k),CM.forEach(k),ck=m(a),lk=d(a,"P",{});var RM=E(lk);ik=g(RM,"We’re specifying two layout files here, one for the blog posts, and one as our default layout. We could just specify the single layout for blog posts if we wanted, but I wanted to highlight that we can specify multiple layouts for our "),pk=d(RM,"CODE",{});var _M=E(pk);hk=g(_M,".svx"),_M.forEach(k),fk=g(RM," files. It’s important to note here that any layout files you specify in this config "),uk=d(RM,"EM",{});var GM=E(uk);vk=g(GM,"need to exist at the location you specify"),GM.forEach(k),dk=g(RM," or you’ll get an ugly error."),RM.forEach(k),Ek=m(a),gk=d(a,"P",{});var FM=E(gk);kk=g(FM,"Now, let’s create the layout files in the directory we specified. Create a directory at "),mk=d(FM,"CODE",{});var $M=E(mk);Sk=g($M,"src/layouts"),$M.forEach(k),Pk=g(FM,". Then create two files: "),wk=d(FM,"CODE",{});var HM=E(wk);Ak=g(HM,"src/layouts/blog.svelte"),HM.forEach(k),Nk=g(FM," and "),yk=d(FM,"CODE",{});var JM=E(yk);bk=g(JM,"src/layouts/default.svelte"),JM.forEach(k),xk=g(FM,"."),FM.forEach(k),Ok=m(a),Ck=d(a,"P",{});var zM=E(Ck);jk=g(zM,"Then, we’ll just put the same code in both for now so we don’t run into any compile-time errors."),zM.forEach(k),Dk=m(a),Tk=d(a,"PRE",{class:!0});var KM=E(Tk);Ik=d(KM,"CODE",{class:!0});var YM=E(Ik);Mk=d(YM,"SPAN",{class:!0});var VM=E(Mk);qk=d(VM,"SPAN",{class:!0});var UM=E(qk);Wk=d(UM,"SPAN",{class:!0});var QM=E(Wk);Bk=g(QM,"<"),QM.forEach(k),Lk=g(UM,"script"),UM.forEach(k),Rk=d(VM,"SPAN",{class:!0});var XM=E(Rk);_k=g(XM,">"),XM.forEach(k),VM.forEach(k),Gk=d(YM,"SPAN",{class:!0});var ZM=E(Gk);Fk=d(ZM,"SPAN",{class:!0});var aq=E(Fk);$k=d(aq,"SPAN",{class:!0});var sq=E($k);Hk=g(sq,"//script stuff will go here"),sq.forEach(k),Jk=g(aq,"\n"),aq.forEach(k),ZM.forEach(k),zk=d(YM,"SPAN",{class:!0});var tq=E(zk);Kk=d(tq,"SPAN",{class:!0});var eq=E(Kk);Yk=d(eq,"SPAN",{class:!0});var oq=E(Yk);Vk=g(oq,"</"),oq.forEach(k),Uk=g(eq,"script"),eq.forEach(k),Qk=d(tq,"SPAN",{class:!0});var nq=E(Qk);Xk=g(nq,">"),nq.forEach(k),tq.forEach(k),Zk=g(YM,"\n\n"),am=d(YM,"SPAN",{class:!0});var rq=E(am);sm=d(rq,"SPAN",{class:!0});var cq=E(sm);tm=d(cq,"SPAN",{class:!0});var lq=E(tm);em=g(lq,"<"),lq.forEach(k),om=g(cq,"slot"),cq.forEach(k),nm=d(rq,"SPAN",{class:!0});var iq=E(nm);rm=g(iq,">"),iq.forEach(k),rq.forEach(k),cm=g(YM,"\n    "),lm=d(YM,"SPAN",{class:!0});var pq=E(lm);im=g(pq,"\x3c!-- your mdsvex content will load here --\x3e"),pq.forEach(k),pm=g(YM,"\n"),hm=d(YM,"SPAN",{class:!0});var hq=E(hm);fm=d(hq,"SPAN",{class:!0});var fq=E(fm);um=d(fq,"SPAN",{class:!0});var uq=E(um);vm=g(uq,"</"),uq.forEach(k),dm=g(fq,"slot"),fq.forEach(k),Em=d(hq,"SPAN",{class:!0});var vq=E(Em);gm=g(vq,">"),vq.forEach(k),hq.forEach(k),km=g(YM,"\n\n"),mm=d(YM,"SPAN",{class:!0});var dq=E(mm);Sm=d(dq,"SPAN",{class:!0});var Eq=E(Sm);Pm=d(Eq,"SPAN",{class:!0});var gq=E(Pm);wm=g(gq,"<"),gq.forEach(k),Am=g(Eq,"style"),Eq.forEach(k),Nm=d(dq,"SPAN",{class:!0});var kq=E(Nm);ym=g(kq,">"),kq.forEach(k),dq.forEach(k),bm=d(YM,"SPAN",{class:!0});var mq=E(bm);xm=d(mq,"SPAN",{class:!0});var Sq=E(xm);Om=d(Sq,"SPAN",{class:!0});var Pq=E(Om);Cm=g(Pq,"/* style stuff will go here */"),Pq.forEach(k),jm=g(Sq,"\n"),Sq.forEach(k),mq.forEach(k),Dm=d(YM,"SPAN",{class:!0});var wq=E(Dm);Tm=d(wq,"SPAN",{class:!0});var Aq=E(Tm);Im=d(Aq,"SPAN",{class:!0});var Nq=E(Im);Mm=g(Nq,"</"),Nq.forEach(k),qm=g(Aq,"style"),Aq.forEach(k),Wm=d(wq,"SPAN",{class:!0});var yq=E(Wm);Bm=g(yq,">"),yq.forEach(k),wq.forEach(k),YM.forEach(k),KM.forEach(k),Lm=m(a),Rm=d(a,"P",{});var bq=E(Rm);_m=g(bq,"Okay, we have layout files. The next step is to add our "),Gm=d(bq,"CODE",{});var xq=E(Gm);Fm=g(xq,"svx"),xq.forEach(k),$m=g(bq," files to make sure everything works the way we expect it to."),bq.forEach(k),Hm=m(a),Jm=d(a,"P",{});var Oq=E(Jm);zm=g(Oq,"In your "),Km=d(Oq,"CODE",{});var Cq=E(Km);Ym=g(Cq,"src/routes"),Cq.forEach(k),Vm=g(Oq," directory, create a subdirectory named "),Um=d(Oq,"CODE",{});var jq=E(Um);Qm=g(jq,"mdsvex"),jq.forEach(k),Xm=g(Oq,". In that directory create a file called "),Zm=d(Oq,"CODE",{});var Dq=E(Zm);aS=g(Dq,"index.svx"),Dq.forEach(k),sS=g(Oq," and put the following in that file:"),Oq.forEach(k),tS=m(a),eS=d(a,"PRE",{class:!0});var Tq=E(eS);oS=d(Tq,"CODE",{class:!0});var Iq=E(oS);nS=d(Iq,"SPAN",{class:!0});var Mq=E(nS);rS=g(Mq,"---"),Mq.forEach(k),cS=g(Iq,"\nlayout: blog\ntitle: mdsvex test\ngreeting: Hello, Sapper, Tailwind, and mdsvex!\n\n"),lS=d(Iq,"SPAN",{class:!0});var qq=E(lS);iS=g(qq,"---"),qq.forEach(k),pS=g(Iq,"\n\n"),hS=d(Iq,"SPAN",{class:!0});var Wq=E(hS);fS=d(Wq,"SPAN",{class:!0});var Bq=E(fS);uS=g(Bq,"##"),Bq.forEach(k),vS=g(Wq," {title}"),Wq.forEach(k),dS=g(Iq,"\n\n"),ES=d(Iq,"SPAN",{class:!0});var Lq=E(ES);gS=d(Lq,"SPAN",{class:!0});var Rq=E(gS);kS=g(Rq,"##"),Rq.forEach(k),mS=g(Lq," Hey! This is my mdsvex component!"),Lq.forEach(k),SS=g(Iq,"\n\nNow this is some content, just because we need to have some content here."),Iq.forEach(k),Tq.forEach(k),PS=m(a),wS=d(a,"P",{});var _q=E(wS);AS=g(_q,"mdsvex allows us to use "),NS=d(_q,"CODE",{});var Gq=E(NS);yS=g(Gq,".svx"),Gq.forEach(k),bS=g(_q," files in place of "),xS=d(_q,"CODE",{});var Fq=E(xS);OS=g(Fq,".svelte"),Fq.forEach(k),CS=g(_q," files in our routes and components. So, what we’re doing here is setting up a test route so we can make sure everything’s wired up correctly. Because Sapper uses file-based routing, and once we’re finished with the next step, this file will be available at "),jS=d(_q,"A",{href:!0,rel:!0});var $q=E(jS);DS=g($q,"http://localhost:3000/mdsvex"),$q.forEach(k),TS=g(_q,"."),_q.forEach(k),IS=m(a),MS=d(a,"P",{});var Hq=E(MS);qS=g(Hq,"Okay, there are two small things that we need to take care of to make sure this will run. First, we need to edit "),WS=d(Hq,"CODE",{});var Jq=E(WS);BS=g(Jq,"package.json"),Jq.forEach(k),LS=g(Hq," and modify our "),RS=d(Hq,"CODE",{});var zq=E(RS);_S=g(zq,"dev"),zq.forEach(k),GS=g(Hq," script with an "),FS=d(Hq,"CODE",{});var Kq=E(FS);$S=g(Kq,"--ext"),Kq.forEach(k),HS=g(Hq," argument, telling the sapper command that we want it to look for both "),JS=d(Hq,"CODE",{});var Yq=E(JS);zS=g(Yq,".svx"),Yq.forEach(k),KS=g(Hq," and "),YS=d(Hq,"CODE",{});var Vq=E(YS);VS=g(Vq,".svelte"),Vq.forEach(k),US=g(Hq," files. Just replace the entire "),QS=d(Hq,"CODE",{});var Uq=E(QS);XS=g(Uq,'"dev": "sapper dev",'),Uq.forEach(k),ZS=g(Hq," line with:"),Hq.forEach(k),aP=m(a),sP=d(a,"PRE",{class:!0});var Qq=E(sP);tP=d(Qq,"CODE",{class:!0});var Xq=E(tP);eP=d(Xq,"SPAN",{class:!0});var Zq=E(eP);oP=g(Zq,'"dev"'),Zq.forEach(k),nP=d(Xq,"SPAN",{class:!0});var aW=E(nP);rP=g(aW,":"),aW.forEach(k),cP=g(Xq," "),lP=d(Xq,"SPAN",{class:!0});var sW=E(lP);iP=g(sW,"\"sapper dev --ext '.svelte .svx'\""),sW.forEach(k),pP=d(Xq,"SPAN",{class:!0});var tW=E(pP);hP=g(tW,","),tW.forEach(k),Xq.forEach(k),Qq.forEach(k),fP=m(a),uP=d(a,"P",{});var eW=E(uP);vP=g(eW,"We also need to tell "),dP=d(eW,"CODE",{});var oW=E(dP);EP=g(oW,"rollup-plugin-svelte"),oW.forEach(k),gP=g(eW," to look for those extensions. Sapper has configurations for both the client and the server, so we need to make sure the code is in both configuration objects. Open up "),kP=d(eW,"CODE",{});var nW=E(kP);mP=g(nW,"rollup.config.json"),nW.forEach(k),SP=g(eW," and add "),PP=d(eW,"CODE",{});var rW=E(PP);wP=g(rW,"extensions: ['.svx', '.svelte'],"),rW.forEach(k),AP=g(eW," to the svelte plugin config of "),NP=d(eW,"STRONG",{});var cW=E(NP);yP=g(cW,"both"),cW.forEach(k),bP=g(eW," the "),xP=d(eW,"CODE",{});var lW=E(xP);OP=g(lW,"client"),lW.forEach(k),CP=g(eW," and "),jP=d(eW,"CODE",{});var iW=E(jP);DP=g(iW,"server"),iW.forEach(k),TP=g(eW," sections of that config file:"),eW.forEach(k),IP=m(a),MP=d(a,"PRE",{class:!0});var pW=E(MP);qP=d(pW,"CODE",{class:!0});var hW=E(qP);WP=g(hW,"client"),BP=d(hW,"SPAN",{class:!0});var fW=E(BP);LP=g(fW,":"),fW.forEach(k),RP=g(hW," "),_P=d(hW,"SPAN",{class:!0});var uW=E(_P);GP=g(uW,"{"),uW.forEach(k),FP=g(hW,"\n    plugins"),$P=d(hW,"SPAN",{class:!0});var vW=E($P);HP=g(vW,":"),vW.forEach(k),JP=g(hW," "),zP=d(hW,"SPAN",{class:!0});var dW=E(zP);KP=g(dW,"["),dW.forEach(k),YP=g(hW,"\n\t\t\t"),VP=d(hW,"SPAN",{class:!0});var EW=E(VP);UP=g(EW,"// blahblahblah config stuff"),EW.forEach(k),QP=g(hW,"\n\t\t\t"),XP=d(hW,"SPAN",{class:!0});var gW=E(XP);ZP=g(gW,"svelte"),gW.forEach(k),aw=d(hW,"SPAN",{class:!0});var kW=E(aw);sw=g(kW,"("),kW.forEach(k),tw=d(hW,"SPAN",{class:!0});var mW=E(tw);ew=g(mW,"{"),mW.forEach(k),ow=g(hW,"\n                extensions"),nw=d(hW,"SPAN",{class:!0});var SW=E(nw);rw=g(SW,":"),SW.forEach(k),cw=g(hW," "),lw=d(hW,"SPAN",{class:!0});var PW=E(lw);iw=g(PW,"["),PW.forEach(k),pw=d(hW,"SPAN",{class:!0});var wW=E(pw);hw=g(wW,"'.svx'"),wW.forEach(k),fw=d(hW,"SPAN",{class:!0});var AW=E(fw);uw=g(AW,","),AW.forEach(k),vw=g(hW," "),dw=d(hW,"SPAN",{class:!0});var NW=E(dw);Ew=g(NW,"'.svelte'"),NW.forEach(k),gw=d(hW,"SPAN",{class:!0});var yW=E(gw);kw=g(yW,"]"),yW.forEach(k),mw=d(hW,"SPAN",{class:!0});var bW=E(mw);Sw=g(bW,","),bW.forEach(k),Pw=g(hW,"\n            "),ww=d(hW,"SPAN",{class:!0});var xW=E(ww);Aw=g(xW,"// blahblahblah more config stuff"),xW.forEach(k),Nw=g(hW,"\nserver"),yw=d(hW,"SPAN",{class:!0});var OW=E(yw);bw=g(OW,":"),OW.forEach(k),xw=g(hW," "),Ow=d(hW,"SPAN",{class:!0});var CW=E(Ow);Cw=g(CW,"{"),CW.forEach(k),jw=g(hW,"\n    plugins"),Dw=d(hW,"SPAN",{class:!0});var jW=E(Dw);Tw=g(jW,":"),jW.forEach(k),Iw=g(hW," "),Mw=d(hW,"SPAN",{class:!0});var DW=E(Mw);qw=g(DW,"["),DW.forEach(k),Ww=g(hW,"\n\t\t\t"),Bw=d(hW,"SPAN",{class:!0});var TW=E(Bw);Lw=g(TW,"// blahblahblah config stuff"),TW.forEach(k),Rw=g(hW,"\n\t\t\t"),_w=d(hW,"SPAN",{class:!0});var IW=E(_w);Gw=g(IW,"svelte"),IW.forEach(k),Fw=d(hW,"SPAN",{class:!0});var MW=E(Fw);$w=g(MW,"("),MW.forEach(k),Hw=d(hW,"SPAN",{class:!0});var qW=E(Hw);Jw=g(qW,"{"),qW.forEach(k),zw=g(hW,"\n                extensions"),Kw=d(hW,"SPAN",{class:!0});var WW=E(Kw);Yw=g(WW,":"),WW.forEach(k),Vw=g(hW," "),Uw=d(hW,"SPAN",{class:!0});var BW=E(Uw);Qw=g(BW,"["),BW.forEach(k),Xw=d(hW,"SPAN",{class:!0});var LW=E(Xw);Zw=g(LW,"'.svx'"),LW.forEach(k),aA=d(hW,"SPAN",{class:!0});var RW=E(aA);sA=g(RW,","),RW.forEach(k),tA=g(hW," "),eA=d(hW,"SPAN",{class:!0});var _W=E(eA);oA=g(_W,"'.svelte'"),_W.forEach(k),nA=d(hW,"SPAN",{class:!0});var GW=E(nA);rA=g(GW,"]"),GW.forEach(k),cA=d(hW,"SPAN",{class:!0});var FW=E(cA);lA=g(FW,","),FW.forEach(k),iA=g(hW,"\n            "),pA=d(hW,"SPAN",{class:!0});var $W=E(pA);hA=g($W,"// blahblahblah more config stuff"),$W.forEach(k),hW.forEach(k),pW.forEach(k),fA=m(a),uA=d(a,"P",{});var HW=E(uA);vA=g(HW,"Finally! You should be able to run the whole thing with "),dA=d(HW,"CODE",{});var JW=E(dA);EA=g(JW,"pnpm run dev"),JW.forEach(k),gA=g(HW,"."),HW.forEach(k),kA=m(a),mA=d(a,"P",{});var zW=E(mA);SA=g(zW,"Do that and navigate to "),PA=d(zW,"A",{href:!0,rel:!0});var KW=E(PA);wA=g(KW,"http://localhost/mdsvex"),KW.forEach(k),AA=g(zW," to see the glory of what you’ve been working so hard on."),zW.forEach(k),NA=m(a),yA=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),xA=m(a),OA=d(a,"P",{});var YW=E(OA);CA=g(YW,"Okay, so it’s ugly. But, hey, it works! Let’s add some stuff to the "),jA=d(YW,"CODE",{});var VW=E(jA);DA=g(VW,"blog.svelte"),VW.forEach(k),TA=g(YW," layout file so we can check out how variables in the "),IA=d(YW,"CODE",{});var UW=E(IA);MA=g(UW,".svx"),UW.forEach(k),qA=g(YW," frontmatter can be used by the "),WA=d(YW,"CODE",{});var QW=E(WA);BA=g(QW,".svelte"),QW.forEach(k),LA=g(YW," file. Just replace everything in blog.svelte with the following:"),YW.forEach(k),RA=m(a),_A=d(a,"PRE",{class:!0});var XW=E(_A);GA=d(XW,"CODE",{class:!0});var ZW=E(GA);FA=d(ZW,"SPAN",{class:!0});var aB=E(FA);$A=d(aB,"SPAN",{class:!0});var sB=E($A);HA=d(sB,"SPAN",{class:!0});var tB=E(HA);JA=g(tB,"<"),tB.forEach(k),zA=g(sB,"script"),sB.forEach(k),KA=d(aB,"SPAN",{class:!0});var eB=E(KA);YA=g(eB,">"),eB.forEach(k),aB.forEach(k),VA=d(ZW,"SPAN",{class:!0});var oB=E(VA);UA=d(oB,"SPAN",{class:!0});var nB=E(UA);QA=d(nB,"SPAN",{class:!0});var rB=E(QA);XA=g(rB,"export"),rB.forEach(k),ZA=g(nB," "),aN=d(nB,"SPAN",{class:!0});var cB=E(aN);sN=g(cB,"let"),cB.forEach(k),tN=g(nB," greeting"),eN=d(nB,"SPAN",{class:!0});var lB=E(eN);oN=g(lB,";"),lB.forEach(k),nN=g(nB,"\n"),nB.forEach(k),oB.forEach(k),rN=d(ZW,"SPAN",{class:!0});var iB=E(rN);cN=d(iB,"SPAN",{class:!0});var pB=E(cN);lN=d(pB,"SPAN",{class:!0});var hB=E(lN);iN=g(hB,"</"),hB.forEach(k),pN=g(pB,"script"),pB.forEach(k),hN=d(iB,"SPAN",{class:!0});var fB=E(hN);fN=g(fB,">"),fB.forEach(k),iB.forEach(k),uN=g(ZW,"\n\n"),vN=d(ZW,"SPAN",{class:!0});var uB=E(vN);dN=d(uB,"SPAN",{class:!0});var vB=E(dN);EN=d(vB,"SPAN",{class:!0});var dB=E(EN);gN=g(dB,"<"),dB.forEach(k),kN=g(vB,"main"),vB.forEach(k),mN=d(uB,"SPAN",{class:!0});var EB=E(mN);SN=g(EB,">"),EB.forEach(k),uB.forEach(k),PN=g(ZW,"\n    "),wN=d(ZW,"SPAN",{class:!0});var gB=E(wN);AN=d(gB,"SPAN",{class:!0});var kB=E(AN);NN=d(kB,"SPAN",{class:!0});var mB=E(NN);yN=g(mB,"<"),mB.forEach(k),bN=g(kB,"h1"),kB.forEach(k),xN=d(gB,"SPAN",{class:!0});var SB=E(xN);ON=g(SB,">"),SB.forEach(k),gB.forEach(k),CN=d(ZW,"SPAN",{class:!0});var PB=E(CN);jN=d(PB,"SPAN",{class:!0});var wB=E(jN);DN=g(wB,"{"),wB.forEach(k),TN=g(PB,"greeting"),IN=d(PB,"SPAN",{class:!0});var AB=E(IN);MN=g(AB,"}"),AB.forEach(k),PB.forEach(k),qN=d(ZW,"SPAN",{class:!0});var NB=E(qN);WN=d(NB,"SPAN",{class:!0});var yB=E(WN);BN=d(yB,"SPAN",{class:!0});var bB=E(BN);LN=g(bB,"</"),bB.forEach(k),RN=g(yB,"h1"),yB.forEach(k),_N=d(NB,"SPAN",{class:!0});var xB=E(_N);GN=g(xB,">"),xB.forEach(k),NB.forEach(k),FN=g(ZW,"\n    "),$N=d(ZW,"SPAN",{class:!0});var OB=E($N);HN=d(OB,"SPAN",{class:!0});var CB=E(HN);JN=d(CB,"SPAN",{class:!0});var jB=E(JN);zN=g(jB,"<"),jB.forEach(k),KN=g(CB,"slot"),CB.forEach(k),YN=d(OB,"SPAN",{class:!0});var DB=E(YN);VN=g(DB,">"),DB.forEach(k),OB.forEach(k),UN=d(ZW,"SPAN",{class:!0});var TB=E(UN);QN=d(TB,"SPAN",{class:!0});var IB=E(QN);XN=d(IB,"SPAN",{class:!0});var MB=E(XN);ZN=g(MB,"</"),MB.forEach(k),ay=g(IB,"slot"),IB.forEach(k),sy=d(TB,"SPAN",{class:!0});var qB=E(sy);ty=g(qB,">"),qB.forEach(k),TB.forEach(k),ey=g(ZW,"\n"),oy=d(ZW,"SPAN",{class:!0});var WB=E(oy);ny=d(WB,"SPAN",{class:!0});var BB=E(ny);ry=d(BB,"SPAN",{class:!0});var LB=E(ry);cy=g(LB,"</"),LB.forEach(k),ly=g(BB,"main"),BB.forEach(k),iy=d(WB,"SPAN",{class:!0});var RB=E(iy);py=g(RB,">"),RB.forEach(k),WB.forEach(k),hy=g(ZW,"\n\n"),fy=d(ZW,"SPAN",{class:!0});var _B=E(fy);uy=d(_B,"SPAN",{class:!0});var GB=E(uy);vy=d(GB,"SPAN",{class:!0});var FB=E(vy);dy=g(FB,"<"),FB.forEach(k),Ey=g(GB,"style"),GB.forEach(k),gy=d(_B,"SPAN",{class:!0});var $B=E(gy);ky=g($B,">"),$B.forEach(k),_B.forEach(k),my=d(ZW,"SPAN",{class:!0});var HB=E(my);Sy=d(HB,"SPAN",{class:!0});var JB=E(Sy);Py=d(JB,"SPAN",{class:!0});var zB=E(Py);wy=g(zB,"main"),zB.forEach(k),Ay=g(JB," "),Ny=d(JB,"SPAN",{class:!0});var KB=E(Ny);yy=g(KB,"{"),KB.forEach(k),by=g(JB,"\n\t\t"),xy=d(JB,"SPAN",{class:!0});var YB=E(xy);Oy=g(YB,"width"),YB.forEach(k),Cy=d(JB,"SPAN",{class:!0});var VB=E(Cy);jy=g(VB,":"),VB.forEach(k),Dy=g(JB," 50%"),Ty=d(JB,"SPAN",{class:!0});var UB=E(Ty);Iy=g(UB,";"),UB.forEach(k),My=g(JB,"\n\t\t"),qy=d(JB,"SPAN",{class:!0});var QB=E(qy);Wy=g(QB,"margin"),QB.forEach(k),By=d(JB,"SPAN",{class:!0});var XB=E(By);Ly=g(XB,":"),XB.forEach(k),Ry=g(JB," 3rem auto"),_y=d(JB,"SPAN",{class:!0});var ZB=E(_y);Gy=g(ZB,";"),ZB.forEach(k),Fy=g(JB,"\n\t"),$y=d(JB,"SPAN",{class:!0});var aL=E($y);Hy=g(aL,"}"),aL.forEach(k),Jy=g(JB,"\n\t"),zy=d(JB,"SPAN",{class:!0});var sL=E(zy);Ky=g(sL,":global(h1)"),sL.forEach(k),Yy=g(JB," "),Vy=d(JB,"SPAN",{class:!0});var tL=E(Vy);Uy=g(tL,"{"),tL.forEach(k),Qy=g(JB,"\n\t\t"),Xy=d(JB,"SPAN",{class:!0});var eL=E(Xy);Zy=d(eL,"SPAN",{class:!0});var oL=E(Zy);ab=g(oL,"@apply"),oL.forEach(k),sb=g(eL," text-3xl font-black text-red-500"),tb=d(eL,"SPAN",{class:!0});var nL=E(tb);eb=g(nL,";"),nL.forEach(k),eL.forEach(k),ob=g(JB,"\n\t"),nb=d(JB,"SPAN",{class:!0});var rL=E(nb);rb=g(rL,"}"),rL.forEach(k),cb=g(JB,"\n\t"),lb=d(JB,"SPAN",{class:!0});var cL=E(lb);ib=g(cL,":global(h2)"),cL.forEach(k),pb=g(JB," "),hb=d(JB,"SPAN",{class:!0});var lL=E(hb);fb=g(lL,"{"),lL.forEach(k),ub=g(JB,"\n\t\t"),vb=d(JB,"SPAN",{class:!0});var iL=E(vb);db=d(iL,"SPAN",{class:!0});var pL=E(db);Eb=g(pL,"@apply"),pL.forEach(k),gb=g(iL," text-2xl font-bold mt-12"),kb=d(iL,"SPAN",{class:!0});var hL=E(kb);mb=g(hL,";"),hL.forEach(k),iL.forEach(k),Sb=g(JB,"\n\t"),Pb=d(JB,"SPAN",{class:!0});var fL=E(Pb);wb=g(fL,"}"),fL.forEach(k),Ab=g(JB,"\n\t"),Nb=d(JB,"SPAN",{class:!0});var uL=E(Nb);yb=g(uL,":global(h3)"),uL.forEach(k),bb=g(JB," "),xb=d(JB,"SPAN",{class:!0});var vL=E(xb);Ob=g(vL,"{"),vL.forEach(k),Cb=g(JB,"\n\t\t"),jb=d(JB,"SPAN",{class:!0});var dL=E(jb);Db=d(dL,"SPAN",{class:!0});var EL=E(Db);Tb=g(EL,"@apply"),EL.forEach(k),Ib=g(dL," text-xl font-bold mt-8"),Mb=d(dL,"SPAN",{class:!0});var gL=E(Mb);qb=g(gL,";"),gL.forEach(k),dL.forEach(k),Wb=g(JB,"\n\t"),Bb=d(JB,"SPAN",{class:!0});var kL=E(Bb);Lb=g(kL,"}"),kL.forEach(k),Rb=g(JB,"\n\t"),_b=d(JB,"SPAN",{class:!0});var mL=E(_b);Gb=g(mL,":global(p)"),mL.forEach(k),Fb=g(JB," "),$b=d(JB,"SPAN",{class:!0});var SL=E($b);Hb=g(SL,"{"),SL.forEach(k),Jb=g(JB,"\n\t\t"),zb=d(JB,"SPAN",{class:!0});var PL=E(zb);Kb=d(PL,"SPAN",{class:!0});var wL=E(Kb);Yb=g(wL,"@apply"),wL.forEach(k),Vb=g(PL," mt-4"),Ub=d(PL,"SPAN",{class:!0});var AL=E(Ub);Qb=g(AL,";"),AL.forEach(k),PL.forEach(k),Xb=g(JB,"\n\t"),Zb=d(JB,"SPAN",{class:!0});var NL=E(Zb);ax=g(NL,"}"),NL.forEach(k),sx=g(JB,"\n"),JB.forEach(k),HB.forEach(k),tx=d(ZW,"SPAN",{class:!0});var yL=E(tx);ex=d(yL,"SPAN",{class:!0});var bL=E(ex);ox=d(bL,"SPAN",{class:!0});var xL=E(ox);nx=g(xL,"</"),xL.forEach(k),rx=g(bL,"style"),bL.forEach(k),cx=d(yL,"SPAN",{class:!0});var OL=E(cx);lx=g(OL,">"),OL.forEach(k),yL.forEach(k),ZW.forEach(k),XW.forEach(k),ix=m(a),px=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),fx=m(a),ux=d(a,"P",{});var CL=E(ux);vx=g(CL,"Okay, now you can see that "),dx=d(CL,"CODE",{});var jL=E(dx);Ex=g(jL,"greeting"),jL.forEach(k),gx=g(CL,", defined in the frontmatter of "),kx=d(CL,"CODE",{});var DL=E(kx);mx=g(DL,"index.svx"),DL.forEach(k),Sx=g(CL," can be used as a prop in the "),Px=d(CL,"CODE",{});var TL=E(Px);wx=g(TL,"blog.svelte"),TL.forEach(k),Ax=g(CL," layout file. We can also use the frontmatter properties in the "),Nx=d(CL,"CODE",{});var IL=E(Nx);yx=g(IL,".svx"),IL.forEach(k),bx=g(CL," file itself. We can also use Tailwind’s "),xx=d(CL,"CODE",{});var ML=E(xx);Ox=g(ML,"@apply"),ML.forEach(k),Cx=g(CL," syntax to, well, apply Tailwind class styles to the markdown content that’s added to our layout component. There’s a "),jx=d(CL,"EM",{});var qL=E(jx);Dx=g(qL,"lot"),qL.forEach(k),Tx=g(CL," more you can do with mdsvex, and we’ll get into some of it in the next part."),CL.forEach(k),Ix=m(a),Mx=d(a,"P",{});var WL=E(Mx);qx=g(WL,"That’s enough for one tutorial. We’ll learn how to set up what we’ve got so that we can create a blog with all of these cool libraries in the next part."),WL.forEach(k),this.h()},h(){S(n,"href","https://svelte.dev/"),S(n,"rel","nofollow"),S(l,"href","https://sapper.svelte.dev/"),S(l,"rel","nofollow"),S(h,"href","https://tailwindcss.com/"),S(h,"rel","nofollow"),S(y,"href","https://mdsvex.pngwn.io/"),S(y,"rel","nofollow"),S(L,"href","https://svelte.dev/blog/whats-the-deal-with-sveltekit"),S(L,"rel","nofollow"),S(F,"id","getting-started"),S(K,"href","https://www.npmjs.com/package/degit"),S(K,"rel","nofollow"),S(Z,"href","https://github.com/sveltejs/sapper-template"),S(Z,"rel","nofollow"),S(na,"href","https://github.com/babichjacob/sapper-postcss-template"),S(na,"rel","nofollow"),S(fa,"class","token comment"),S(pa,"class","language-bash"),S(ia,"class","language-bash code-pre line-numbers"),S(Ra,"class","token comment"),S(Ba,"class","language-bash"),S(Wa,"class","language-bash code-pre line-numbers"),Ja.src!==(za="img/posts/12-15-20/12-15-20_Screenshot01.png")&&S(Ja,"src","img/posts/12-15-20/12-15-20_Screenshot01.png"),S(Ja,"alt","my-blog directory structure"),S(Ja,"loading","lazy"),S(Ja,"class","small-img"),S(Ja,"width","225"),S(Ja,"height","450"),S(Za,"href","https://pnpm.js.org/en/"),S(Za,"rel","nofollow"),S(ls,"href","https://pnpm.js.org/en/motivation"),S(ls,"rel","nofollow"),S(gs,"class","token function"),S(Ss,"class","token function"),S(As,"class","token function"),S(Es,"class","language-bash"),S(ds,"class","language-bash code-pre line-numbers"),S(_s,"class","token function"),S($s,"class","token function"),S(Rs,"class","language-bash"),S(Ls,"class","language-bash code-pre line-numbers"),S(Qs,"class","token function"),S(Us,"class","language-bash"),S(Vs,"class","language-bash code-pre line-numbers"),ot.src!==(nt="img/posts/12-15-20/12-15-20_Screenshot02.png")&&S(ot,"src","img/posts/12-15-20/12-15-20_Screenshot02.png"),S(ot,"alt","Terminal output of pnpm run dev command"),S(ot,"loading","lazy"),S(ot,"width","800"),S(ot,"height","450"),S(it,"href","http://localhost:3000"),S(it,"rel","nofollow"),ut.src!==(vt="img/posts/12-15-20/12-15-20_Screenshot03.png")&&S(ut,"src","img/posts/12-15-20/12-15-20_Screenshot03.png"),S(ut,"alt","Heeey! It's Sapper with Tailwind!"),S(ut,"loading","lazy"),S(ut,"width","800"),S(ut,"height","450"),S(Et,"id","getting-comfortable"),S(xt,"class","token comment"),S(jt,"class","token keyword"),S(It,"class","token operator"),S(Wt,"class","token function"),S(Lt,"class","token punctuation"),S(_t,"class","token string"),S(Ft,"class","token punctuation"),S(Ht,"class","token punctuation"),S(Kt,"class","token keyword"),S(Ut,"class","token operator"),S(Zt,"class","token function"),S(se,"class","token punctuation"),S(ee,"class","token string"),S(ne,"class","token punctuation"),S(ce,"class","token punctuation"),S(pe,"class","token keyword"),S(ue,"class","token function-variable function"),S(Ee,"class","token operator"),S(me,"class","token punctuation"),S(we,"class","token punctuation"),S(ye,"class","token punctuation"),S(Pe,"class","token parameter"),S(xe,"class","token punctuation"),S(je,"class","token operator"),S(Ie,"class","token punctuation"),S(We,"class","token function"),S(Le,"class","token punctuation"),S(_e,"class","token punctuation"),S($e,"class","token punctuation"),S(ze,"class","token operator"),S(Ve,"class","token punctuation"),S(Xe,"class","token operator"),S(so,"class","token string"),S(eo,"class","token punctuation"),S(ro,"class","token punctuation"),S(lo,"class","token punctuation"),S(ho,"class","token punctuation"),S(vo,"class","token punctuation"),S(go,"class","token punctuation"),S(mo,"class","token punctuation"),S(wo,"class","token comment"),S(yo,"class","token punctuation"),S(xo,"class","token punctuation"),S(jo,"class","token punctuation"),S(Io,"class","token operator"),S(Wo,"class","token punctuation"),S(Ro,"class","token punctuation"),S(Fo,"class","token comment"),S(Jo,"class","token operator"),S(Yo,"class","token function"),S(Uo,"class","token punctuation"),S(Xo,"class","token punctuation"),S(sn,"class","token operator"),S(on,"class","token boolean"),S(cn,"class","token punctuation"),S(pn,"class","token punctuation"),S(fn,"class","token punctuation"),S(dn,"class","token punctuation"),S(gn,"class","token punctuation"),S(bt,"class","language-js"),S(yt,"class","language-js code-pre line-numbers"),S(Dn,"class","token comment"),S(Mn,"class","token keyword"),S(Bn,"class","token operator"),S(_n,"class","token function"),S(Fn,"class","token punctuation"),S(Hn,"class","token string"),S(zn,"class","token punctuation"),S(Yn,"class","token punctuation"),S(Qn,"class","token keyword"),S(ar,"class","token operator"),S(er,"class","token function"),S(nr,"class","token punctuation"),S(cr,"class","token string"),S(ir,"class","token punctuation"),S(hr,"class","token punctuation"),S(vr,"class","token keyword"),S(gr,"class","token operator"),S(Sr,"class","token function"),S(wr,"class","token punctuation"),S(Nr,"class","token string"),S(br,"class","token punctuation"),S(Or,"class","token punctuation"),S(Dr,"class","token keyword"),S(Mr,"class","token operator"),S(Br,"class","token function"),S(Rr,"class","token punctuation"),S(Gr,"class","token string"),S($r,"class","token punctuation"),S(Jr,"class","token punctuation"),S(Yr,"class","token keyword"),S(Qr,"class","token operator"),S(ac,"class","token string"),S(tc,"class","token punctuation"),S(nc,"class","token keyword"),S(lc,"class","token operator"),S(hc,"class","token operator"),S(vc,"class","token string"),S(Ec,"class","token punctuation"),S(mc,"class","token punctuation"),S(wc,"class","token operator"),S(yc,"class","token punctuation"),S(Oc,"class","token operator"),S(Dc,"class","token punctuation"),S(Mc,"class","token punctuation"),S(Bc,"class","token function"),S(Rc,"class","token punctuation"),S(Fc,"class","token punctuation"),S(Hc,"class","token punctuation"),S(Kc,"class","token comment"),S(Uc,"class","token comment"),S(Zc,"class","token operator"),S(tl,"class","token operator"),S(nl,"class","token function"),S(cl,"class","token punctuation"),S(il,"class","token punctuation"),S(fl,"class","token operator"),S(dl,"class","token punctuation"),S(kl,"class","token string"),S(Sl,"class","token punctuation"),S(Al,"class","token punctuation"),S(bl,"class","token operator"),S(Cl,"class","token punctuation"),S(Tl,"class","token operator"),S(ql,"class","token boolean"),S(Ll,"class","token punctuation"),S(Gl,"class","token punctuation"),S($l,"class","token punctuation"),S(zl,"class","token punctuation"),S(Yl,"class","token punctuation"),S(Ql,"class","token punctuation"),S(Zl,"class","token punctuation"),S(si,"class","token punctuation"),S(oi,"class","token punctuation"),S(ri,"class","token punctuation"),S(li,"class","token function"),S(pi,"class","token punctuation"),S(ui,"class","token punctuation"),S(di,"class","token punctuation"),S(ki,"class","token punctuation"),S(Si,"class","token punctuation"),S(jn,"class","language-js"),S(Cn,"class","language-js code-pre line-numbers"),S(ji,"class","token comment"),S(Ii,"class","token keyword"),S(Wi,"class","token punctuation"),S(Ri,"class","token punctuation"),S(Fi,"class","token operator"),S(Ji,"class","token function"),S(Ki,"class","token punctuation"),S(Vi,"class","token string"),S(Qi,"class","token punctuation"),S(Zi,"class","token punctuation"),S(tp,"class","token punctuation"),S(np,"class","token operator"),S(lp,"class","token punctuation"),S(hp,"class","token operator"),S(vp,"class","token punctuation"),S(gp,"class","token operator"),S(Sp,"class","token punctuation"),S(Ap,"class","token string"),S(yp,"class","token punctuation"),S(Op,"class","token string"),S(jp,"class","token punctuation"),S(Ip,"class","token punctuation"),S(qp,"class","token punctuation"),S(Lp,"class","token operator"),S(Gp,"class","token punctuation"),S(Hp,"class","token function-variable function"),S(zp,"class","token operator"),S(Vp,"class","token punctuation"),S(Qp,"class","token parameter"),S(Zp,"class","token punctuation"),S(th,"class","token operator"),S(nh,"class","token punctuation"),S(lh,"class","token comment"),S(hh,"class","token comment"),S(vh,"class","token comment"),S(gh,"class","token comment"),S(Sh,"class","token operator"),S(wh,"class","token function"),S(Nh,"class","token punctuation"),S(xh,"class","token punctuation"),S(Ch,"class","token punctuation"),S(Th,"class","token comment"),S(qh,"class","token operator"),S(Bh,"class","token punctuation"),S(Rh,"class","token operator"),S(Fh,"class","token punctuation"),S(Hh,"class","token function"),S(zh,"class","token punctuation"),S(Vh,"class","token regex-delimiter"),S(Qh,"class","token regex-source language-regex"),S(Zh,"class","token regex-delimiter"),S(sf,"class","token regex-flags"),S(Yh,"class","token regex"),S(ef,"class","token punctuation"),S(nf,"class","token punctuation"),S(cf,"class","token punctuation"),S(pf,"class","token function"),S(ff,"class","token punctuation"),S(vf,"class","token punctuation"),S(gf,"class","token punctuation"),S(Sf,"class","token punctuation"),S(Af,"class","token punctuation"),S(bf,"class","token operator"),S(Cf,"class","token punctuation"),S(Ef,"class","token parameter"),S(Df,"class","token punctuation"),S(Mf,"class","token operator"),S(Bf,"class","token punctuation"),S(Rf,"class","token punctuation"),S(Ff,"class","token punctuation"),S(Hf,"class","token punctuation"),S(Kf,"class","token operator"),S(Uf,"class","token boolean"),S(Xf,"class","token punctuation"),S(su,"class","token punctuation"),S(eu,"class","token punctuation"),S(ru,"class","token punctuation"),S(lu,"class","token punctuation"),S(hu,"class","token operator"),S(vu,"class","token punctuation"),S(gu,"class","token operator"),S(Su,"class","token punctuation"),S(wu,"class","token punctuation"),S(Nu,"class","token punctuation"),S(xu,"class","token punctuation"),S(Cu,"class","token punctuation"),S(Tu,"class","token operator"),S(qu,"class","token punctuation"),S(Lu,"class","token operator"),S(Gu,"class","token punctuation"),S($u,"class","token punctuation"),S(Ju,"class","token punctuation"),S(Yu,"class","token punctuation"),S(Uu,"class","token punctuation"),S(Zu,"class","token operator"),S(tv,"class","token punctuation"),S(ov,"class","token punctuation"),S(rv,"class","token punctuation"),S(iv,"class","token punctuation"),S(hv,"class","token punctuation"),S(Ci,"class","language-js"),S(Oi,"class","language-js code-pre line-numbers"),S(wv,"href","https://svelte.dev/docs#class_name"),S(wv,"rel","nofollow"),S(qv,"class","token rule"),S(Lv,"class","token string"),S(_v,"class","token punctuation"),S(Mv,"class","token atrule"),S($v,"class","token comment"),S(Kv,"class","token rule"),S(Uv,"class","token string"),S(Xv,"class","token punctuation"),S(zv,"class","token atrule"),S(sd,"class","token comment"),S(nd,"class","token rule"),S(ld,"class","token string"),S(pd,"class","token punctuation"),S(od,"class","token atrule"),S(ud,"class","token comment"),S(Iv,"class","language-css"),S(Tv,"class","language-css code-pre line-numbers"),S(wd,"class","token rule"),S(Pd,"class","token atrule"),S(bd,"class","token punctuation"),S(Cd,"class","token punctuation"),S(Sd,"class","language-css"),S(md,"class","language-css code-pre line-numbers"),S(Hd,"id","adding-mdsvex"),S(Yd,"href","https://mdsvex.pngwn.io/"),S(Yd,"rel","nofollow"),S(Qd,"href","https://twitter.com/evilpingwin"),S(Qd,"rel","nofollow"),S(aE,"href","https://mdxjs.com/"),S(aE,"rel","nofollow"),S(iE,"class","token function"),S(fE,"class","token function"),S(lE,"class","language-bash"),S(cE,"class","language-bash code-pre line-numbers"),S(qE,"class","token prefix inserted"),S(ME,"class","token inserted-sign inserted"),S(_E,"class","token prefix inserted"),S(RE,"class","token inserted-sign inserted"),S(TE,"class","language-diff"),S(DE,"class","language-diff code-pre line-numbers"),S(_g,"class","token prefix inserted"),S(Rg,"class","token inserted-sign inserted"),S(Jg,"class","token prefix unchanged"),S(Hg,"class","token unchanged"),S(Yg,"class","token prefix inserted"),S(Qg,"class","token prefix inserted"),S(ak,"class","token prefix inserted"),S(Kg,"class","token inserted-sign inserted"),S(ok,"class","token prefix unchanged"),S(ek,"class","token unchanged"),S(Bg,"class","language-diff"),S(Wg,"class","language-diff code-pre line-numbers"),S(Wk,"class","token punctuation"),S(qk,"class","token tag"),S(Rk,"class","token punctuation"),S(Mk,"class","token tag"),S($k,"class","token comment"),S(Fk,"class","token language-javascript"),S(Gk,"class","token script"),S(Yk,"class","token punctuation"),S(Kk,"class","token tag"),S(Qk,"class","token punctuation"),S(zk,"class","token tag"),S(tm,"class","token punctuation"),S(sm,"class","token tag"),S(nm,"class","token punctuation"),S(am,"class","token tag"),S(lm,"class","token comment"),S(um,"class","token punctuation"),S(fm,"class","token tag"),S(Em,"class","token punctuation"),S(hm,"class","token tag"),S(Pm,"class","token punctuation"),S(Sm,"class","token tag"),S(Nm,"class","token punctuation"),S(mm,"class","token tag"),S(Om,"class","token comment"),S(xm,"class","token language-css"),S(bm,"class","token style"),S(Im,"class","token punctuation"),S(Tm,"class","token tag"),S(Wm,"class","token punctuation"),S(Dm,"class","token tag"),S(Ik,"class","language-svelte"),S(Tk,"class","language-svelte code-pre line-numbers"),S(nS,"class","token hr punctuation"),S(lS,"class","token hr punctuation"),S(fS,"class","token punctuation"),S(hS,"class","token title important"),S(gS,"class","token punctuation"),S(ES,"class","token title important"),S(oS,"class","language-markdown"),S(eS,"class","language-markdown code-pre line-numbers"),S(jS,"href","http://localhost:3000/mdsvex"),S(jS,"rel","nofollow"),S(eP,"class","token property"),S(nP,"class","token operator"),S(lP,"class","token string"),S(pP,"class","token punctuation"),S(tP,"class","language-json"),S(sP,"class","language-json code-pre line-numbers"),S(BP,"class","token operator"),S(_P,"class","token punctuation"),S($P,"class","token operator"),S(zP,"class","token punctuation"),S(VP,"class","token comment"),S(XP,"class","token function"),S(aw,"class","token punctuation"),S(tw,"class","token punctuation"),S(nw,"class","token operator"),S(lw,"class","token punctuation"),S(pw,"class","token string"),S(fw,"class","token punctuation"),S(dw,"class","token string"),S(gw,"class","token punctuation"),S(mw,"class","token punctuation"),S(ww,"class","token comment"),S(yw,"class","token operator"),S(Ow,"class","token punctuation"),S(Dw,"class","token operator"),S(Mw,"class","token punctuation"),S(Bw,"class","token comment"),S(_w,"class","token function"),S(Fw,"class","token punctuation"),S(Hw,"class","token punctuation"),S(Kw,"class","token operator"),S(Uw,"class","token punctuation"),S(Xw,"class","token string"),S(aA,"class","token punctuation"),S(eA,"class","token string"),S(nA,"class","token punctuation"),S(cA,"class","token punctuation"),S(pA,"class","token comment"),S(qP,"class","language-js"),S(MP,"class","language-js code-pre line-numbers"),S(PA,"href","http://localhost/mdsvex"),S(PA,"rel","nofollow"),yA.src!==(bA="img/posts/12-15-20/12-15-20_Screenshot04.png")&&S(yA,"src","img/posts/12-15-20/12-15-20_Screenshot04.png"),S(yA,"alt","Behold! Your mdsvex component in action!"),S(yA,"loading","lazy"),S(yA,"width","800"),S(yA,"height","450"),S(HA,"class","token punctuation"),S($A,"class","token tag"),S(KA,"class","token punctuation"),S(FA,"class","token tag"),S(QA,"class","token keyword"),S(aN,"class","token keyword"),S(eN,"class","token punctuation"),S(UA,"class","token language-javascript"),S(VA,"class","token script"),S(lN,"class","token punctuation"),S(cN,"class","token tag"),S(hN,"class","token punctuation"),S(rN,"class","token tag"),S(EN,"class","token punctuation"),S(dN,"class","token tag"),S(mN,"class","token punctuation"),S(vN,"class","token tag"),S(NN,"class","token punctuation"),S(AN,"class","token tag"),S(xN,"class","token punctuation"),S(wN,"class","token tag"),S(jN,"class","token punctuation"),S(IN,"class","token punctuation"),S(CN,"class","token language-javascript"),S(BN,"class","token punctuation"),S(WN,"class","token tag"),S(_N,"class","token punctuation"),S(qN,"class","token tag"),S(JN,"class","token punctuation"),S(HN,"class","token tag"),S(YN,"class","token punctuation"),S($N,"class","token tag"),S(XN,"class","token punctuation"),S(QN,"class","token tag"),S(sy,"class","token punctuation"),S(UN,"class","token tag"),S(ry,"class","token punctuation"),S(ny,"class","token tag"),S(iy,"class","token punctuation"),S(oy,"class","token tag"),S(vy,"class","token punctuation"),S(uy,"class","token tag"),S(gy,"class","token punctuation"),S(fy,"class","token tag"),S(Py,"class","token selector"),S(Ny,"class","token punctuation"),S(xy,"class","token property"),S(Cy,"class","token punctuation"),S(Ty,"class","token punctuation"),S(qy,"class","token property"),S(By,"class","token punctuation"),S(_y,"class","token punctuation"),S($y,"class","token punctuation"),S(zy,"class","token selector"),S(Vy,"class","token punctuation"),S(Zy,"class","token rule"),S(tb,"class","token punctuation"),S(Xy,"class","token atrule"),S(nb,"class","token punctuation"),S(lb,"class","token selector"),S(hb,"class","token punctuation"),S(db,"class","token rule"),S(kb,"class","token punctuation"),S(vb,"class","token atrule"),S(Pb,"class","token punctuation"),S(Nb,"class","token selector"),S(xb,"class","token punctuation"),S(Db,"class","token rule"),S(Mb,"class","token punctuation"),S(jb,"class","token atrule"),S(Bb,"class","token punctuation"),S(_b,"class","token selector"),S($b,"class","token punctuation"),S(Kb,"class","token rule"),S(Ub,"class","token punctuation"),S(zb,"class","token atrule"),S(Zb,"class","token punctuation"),S(Sy,"class","token language-css"),S(my,"class","token style"),S(ox,"class","token punctuation"),S(ex,"class","token tag"),S(cx,"class","token punctuation"),S(tx,"class","token tag"),S(GA,"class","language-svelte"),S(_A,"class","language-svelte code-pre line-numbers"),px.src!==(hx="img/posts/12-15-20/12-15-20_Screenshot05.png")&&S(px,"src","img/posts/12-15-20/12-15-20_Screenshot05.png"),S(px,"alt","Very stylish version of an mdsvex component"),S(px,"loading","lazy"),S(px,"width","800"),S(px,"height","450")},m(a,f){P(a,s,f),w(s,t),P(a,e,f),P(a,o,f),w(o,n),w(n,r),w(o,c),w(o,l),w(l,i),w(o,p),w(o,h),w(h,A),w(o,N),w(o,y),w(y,b),w(o,x),P(a,O,f),P(a,C,f),w(C,j),P(a,D,f),P(a,T,f),w(T,I),w(I,M),P(a,q,f),P(a,W,f),w(W,B),w(W,L),w(L,R),w(W,_),P(a,G,f),P(a,F,f),w(F,$),P(a,H,f),P(a,J,f),w(J,z),w(J,K),w(K,Y),w(J,V),w(J,U),w(U,Q),w(J,X),w(J,Z),w(Z,aa),w(J,sa),P(a,ta,f),P(a,ea,f),w(ea,oa),w(ea,na),w(na,ra),w(ea,ca),P(a,la,f),P(a,ia,f),w(ia,pa),w(pa,ha),w(pa,fa),w(fa,ua),P(a,va,f),P(a,da,f),w(da,Ea),w(da,ga),w(ga,ka),w(da,ma),w(da,Sa),w(Sa,Pa),w(da,wa),w(da,Aa),w(Aa,Na),w(da,ya),w(da,ba),w(ba,xa),w(da,Oa),w(da,Ca),w(Ca,ja),w(da,Da),w(da,Ta),w(Ta,Ia),w(da,Ma),P(a,qa,f),P(a,Wa,f),w(Wa,Ba),w(Ba,La),w(Ba,Ra),w(Ra,_a),P(a,Ga,f),P(a,Fa,f),w(Fa,$a),P(a,Ha,f),P(a,Ja,f),P(a,Ka,f),P(a,Ya,f),w(Ya,Va),P(a,Ua,f),P(a,Qa,f),w(Qa,Xa),w(Qa,Za),w(Za,as),w(Qa,ss),w(Qa,ts),w(ts,es),w(Qa,os),w(Qa,ns),w(ns,rs),w(Qa,cs),w(Qa,ls),w(ls,is),w(Qa,ps),P(a,hs,f),P(a,fs,f),w(fs,us),P(a,vs,f),P(a,ds,f),w(ds,Es),w(Es,gs),w(gs,ks),w(Es,ms),w(Es,Ss),w(Ss,Ps),w(Es,ws),w(Es,As),w(As,Ns),P(a,ys,f),P(a,bs,f),w(bs,xs),w(bs,Os),w(Os,Cs),w(bs,js),w(bs,Ds),w(Ds,Ts),w(bs,Is),P(a,Ms,f),P(a,qs,f),w(qs,Ws),P(a,Bs,f),P(a,Ls,f),w(Ls,Rs),w(Rs,_s),w(_s,Gs),w(Rs,Fs),w(Rs,$s),w($s,Hs),P(a,Js,f),P(a,zs,f),w(zs,Ks),P(a,Ys,f),P(a,Vs,f),w(Vs,Us),w(Us,Qs),w(Qs,Xs),w(Us,Zs),P(a,at,f),P(a,st,f),w(st,tt),P(a,et,f),P(a,ot,f),P(a,rt,f),P(a,ct,f),w(ct,lt),w(ct,it),w(it,pt),w(ct,ht),P(a,ft,f),P(a,ut,f),P(a,dt,f),P(a,Et,f),w(Et,gt),P(a,kt,f),P(a,mt,f),w(mt,St),w(mt,Pt),w(Pt,wt),w(mt,At),P(a,Nt,f),P(a,yt,f),w(yt,bt),w(bt,xt),w(xt,Ot),w(bt,Ct),w(bt,jt),w(jt,Dt),w(bt,Tt),w(bt,It),w(It,Mt),w(bt,qt),w(bt,Wt),w(Wt,Bt),w(bt,Lt),w(Lt,Rt),w(bt,_t),w(_t,Gt),w(bt,Ft),w(Ft,$t),w(bt,Ht),w(Ht,Jt),w(bt,zt),w(bt,Kt),w(Kt,Yt),w(bt,Vt),w(bt,Ut),w(Ut,Qt),w(bt,Xt),w(bt,Zt),w(Zt,ae),w(bt,se),w(se,te),w(bt,ee),w(ee,oe),w(bt,ne),w(ne,re),w(bt,ce),w(ce,le),w(bt,ie),w(bt,pe),w(pe,he),w(bt,fe),w(bt,ue),w(ue,ve),w(bt,de),w(bt,Ee),w(Ee,ge),w(bt,ke),w(bt,me),w(me,Se),w(bt,Pe),w(Pe,we),w(we,Ae),w(Pe,Ne),w(Pe,ye),w(ye,be),w(bt,xe),w(xe,Oe),w(bt,Ce),w(bt,je),w(je,De),w(bt,Te),w(bt,Ie),w(Ie,Me),w(bt,qe),w(bt,We),w(We,Be),w(bt,Le),w(Le,Re),w(bt,_e),w(_e,Ge),w(bt,Fe),w(bt,$e),w($e,He),w(bt,Je),w(bt,ze),w(ze,Ke),w(bt,Ye),w(bt,Ve),w(Ve,Ue),w(bt,Qe),w(bt,Xe),w(Xe,Ze),w(bt,ao),w(bt,so),w(so,to),w(bt,eo),w(eo,oo),w(bt,no),w(bt,ro),w(ro,co),w(bt,lo),w(lo,io),w(bt,po),w(bt,ho),w(ho,fo),w(bt,uo),w(bt,vo),w(vo,Eo),w(bt,go),w(go,ko),w(bt,mo),w(mo,So),w(bt,Po),w(bt,wo),w(wo,Ao),w(bt,No),w(bt,yo),w(yo,bo),w(bt,xo),w(xo,Oo),w(bt,Co),w(bt,jo),w(jo,Do),w(bt,To),w(bt,Io),w(Io,Mo),w(bt,qo),w(bt,Wo),w(Wo,Bo),w(bt,Lo),w(bt,Ro),w(Ro,_o),w(bt,Go),w(bt,Fo),w(Fo,$o),w(bt,Ho),w(bt,Jo),w(Jo,zo),w(bt,Ko),w(bt,Yo),w(Yo,Vo),w(bt,Uo),w(Uo,Qo),w(bt,Xo),w(Xo,Zo),w(bt,an),w(bt,sn),w(sn,tn),w(bt,en),w(bt,on),w(on,nn),w(bt,rn),w(bt,cn),w(cn,ln),w(bt,pn),w(pn,hn),w(bt,fn),w(fn,un),w(bt,vn),w(bt,dn),w(dn,En),w(bt,gn),w(gn,kn),P(a,mn,f),P(a,Sn,f),w(Sn,Pn),w(Sn,wn),w(wn,An),w(Sn,Nn),w(Sn,yn),w(yn,bn),w(Sn,xn),P(a,On,f),P(a,Cn,f),w(Cn,jn),w(jn,Dn),w(Dn,Tn),w(jn,In),w(jn,Mn),w(Mn,qn),w(jn,Wn),w(jn,Bn),w(Bn,Ln),w(jn,Rn),w(jn,_n),w(_n,Gn),w(jn,Fn),w(Fn,$n),w(jn,Hn),w(Hn,Jn),w(jn,zn),w(zn,Kn),w(jn,Yn),w(Yn,Vn),w(jn,Un),w(jn,Qn),w(Qn,Xn),w(jn,Zn),w(jn,ar),w(ar,sr),w(jn,tr),w(jn,er),w(er,or),w(jn,nr),w(nr,rr),w(jn,cr),w(cr,lr),w(jn,ir),w(ir,pr),w(jn,hr),w(hr,fr),w(jn,ur),w(jn,vr),w(vr,dr),w(jn,Er),w(jn,gr),w(gr,kr),w(jn,mr),w(jn,Sr),w(Sr,Pr),w(jn,wr),w(wr,Ar),w(jn,Nr),w(Nr,yr),w(jn,br),w(br,xr),w(jn,Or),w(Or,Cr),w(jn,jr),w(jn,Dr),w(Dr,Tr),w(jn,Ir),w(jn,Mr),w(Mr,qr),w(jn,Wr),w(jn,Br),w(Br,Lr),w(jn,Rr),w(Rr,_r),w(jn,Gr),w(Gr,Fr),w(jn,$r),w($r,Hr),w(jn,Jr),w(Jr,zr),w(jn,Kr),w(jn,Yr),w(Yr,Vr),w(jn,Ur),w(jn,Qr),w(Qr,Xr),w(jn,Zr),w(jn,ac),w(ac,sc),w(jn,tc),w(tc,ec),w(jn,oc),w(jn,nc),w(nc,rc),w(jn,cc),w(jn,lc),w(lc,ic),w(jn,pc),w(jn,hc),w(hc,fc),w(jn,uc),w(jn,vc),w(vc,dc),w(jn,Ec),w(Ec,gc),w(jn,kc),w(jn,mc),w(mc,Sc),w(jn,Pc),w(jn,wc),w(wc,Ac),w(jn,Nc),w(jn,yc),w(yc,bc),w(jn,xc),w(jn,Oc),w(Oc,Cc),w(jn,jc),w(jn,Dc),w(Dc,Tc),w(jn,Ic),w(jn,Mc),w(Mc,qc),w(jn,Wc),w(jn,Bc),w(Bc,Lc),w(jn,Rc),w(Rc,_c),w(jn,Gc),w(jn,Fc),w(Fc,$c),w(jn,Hc),w(Hc,Jc),w(jn,zc),w(jn,Kc),w(Kc,Yc),w(jn,Vc),w(jn,Uc),w(Uc,Qc),w(jn,Xc),w(jn,Zc),w(Zc,al),w(jn,sl),w(jn,tl),w(tl,el),w(jn,ol),w(jn,nl),w(nl,rl),w(jn,cl),w(cl,ll),w(jn,il),w(il,pl),w(jn,hl),w(jn,fl),w(fl,ul),w(jn,vl),w(jn,dl),w(dl,El),w(jn,gl),w(jn,kl),w(kl,ml),w(jn,Sl),w(Sl,Pl),w(jn,wl),w(jn,Al),w(Al,Nl),w(jn,yl),w(jn,bl),w(bl,xl),w(jn,Ol),w(jn,Cl),w(Cl,jl),w(jn,Dl),w(jn,Tl),w(Tl,Il),w(jn,Ml),w(jn,ql),w(ql,Wl),w(jn,Bl),w(jn,Ll),w(Ll,Rl),w(jn,_l),w(jn,Gl),w(Gl,Fl),w(jn,$l),w($l,Hl),w(jn,Jl),w(jn,zl),w(zl,Kl),w(jn,Yl),w(Yl,Vl),w(jn,Ul),w(jn,Ql),w(Ql,Xl),w(jn,Zl),w(Zl,ai),w(jn,si),w(si,ti),w(jn,ei),w(jn,oi),w(oi,ni),w(jn,ri),w(ri,ci),w(jn,li),w(li,ii),w(jn,pi),w(pi,hi),w(jn,fi),w(jn,ui),w(ui,vi),w(jn,di),w(di,Ei),w(jn,gi),w(jn,ki),w(ki,mi),w(jn,Si),w(Si,Pi),P(a,wi,f),P(a,Ai,f),w(Ai,Ni),w(Ai,yi),w(yi,bi),P(a,xi,f),P(a,Oi,f),w(Oi,Ci),w(Ci,ji),w(ji,Di),w(Ci,Ti),w(Ci,Ii),w(Ii,Mi),w(Ci,qi),w(Ci,Wi),w(Wi,Bi),w(Ci,Li),w(Ci,Ri),w(Ri,_i),w(Ci,Gi),w(Ci,Fi),w(Fi,$i),w(Ci,Hi),w(Ci,Ji),w(Ji,zi),w(Ci,Ki),w(Ki,Yi),w(Ci,Vi),w(Vi,Ui),w(Ci,Qi),w(Qi,Xi),w(Ci,Zi),w(Zi,ap),w(Ci,sp),w(Ci,tp),w(tp,ep),w(Ci,op),w(Ci,np),w(np,rp),w(Ci,cp),w(Ci,lp),w(lp,ip),w(Ci,pp),w(Ci,hp),w(hp,fp),w(Ci,up),w(Ci,vp),w(vp,dp),w(Ci,Ep),w(Ci,gp),w(gp,kp),w(Ci,mp),w(Ci,Sp),w(Sp,Pp),w(Ci,wp),w(Ci,Ap),w(Ap,Np),w(Ci,yp),w(yp,bp),w(Ci,xp),w(Ci,Op),w(Op,Cp),w(Ci,jp),w(jp,Dp),w(Ci,Tp),w(Ci,Ip),w(Ip,Mp),w(Ci,qp),w(qp,Wp),w(Ci,Bp),w(Ci,Lp),w(Lp,Rp),w(Ci,_p),w(Ci,Gp),w(Gp,Fp),w(Ci,$p),w(Ci,Hp),w(Hp,Jp),w(Ci,zp),w(zp,Kp),w(Ci,Yp),w(Ci,Vp),w(Vp,Up),w(Ci,Qp),w(Qp,Xp),w(Ci,Zp),w(Zp,ah),w(Ci,sh),w(Ci,th),w(th,eh),w(Ci,oh),w(Ci,nh),w(nh,rh),w(Ci,ch),w(Ci,lh),w(lh,ih),w(Ci,ph),w(Ci,hh),w(hh,fh),w(Ci,uh),w(Ci,vh),w(vh,dh),w(Ci,Eh),w(Ci,gh),w(gh,kh),w(Ci,mh),w(Ci,Sh),w(Sh,Ph),w(Ci,wh),w(wh,Ah),w(Ci,Nh),w(Nh,yh),w(Ci,bh),w(Ci,xh),w(xh,Oh),w(Ci,Ch),w(Ch,jh),w(Ci,Dh),w(Ci,Th),w(Th,Ih),w(Ci,Mh),w(Ci,qh),w(qh,Wh),w(Ci,Bh),w(Bh,Lh),w(Ci,Rh),w(Rh,_h),w(Ci,Gh),w(Ci,Fh),w(Fh,$h),w(Ci,Hh),w(Hh,Jh),w(Ci,zh),w(zh,Kh),w(Ci,Yh),w(Yh,Vh),w(Vh,Uh),w(Yh,Qh),w(Qh,Xh),w(Yh,Zh),w(Zh,af),w(Yh,sf),w(sf,tf),w(Ci,ef),w(ef,of),w(Ci,nf),w(nf,rf),w(Ci,cf),w(cf,lf),w(Ci,pf),w(pf,hf),w(Ci,ff),w(ff,uf),w(Ci,vf),w(vf,df),w(Ci,Ef),w(Ef,gf),w(gf,kf),w(Ef,mf),w(Ef,Sf),w(Sf,Pf),w(Ef,wf),w(Ef,Af),w(Af,Nf),w(Ef,yf),w(Ef,bf),w(bf,xf),w(Ef,Of),w(Ef,Cf),w(Cf,jf),w(Ci,Df),w(Df,Tf),w(Ci,If),w(Ci,Mf),w(Mf,qf),w(Ci,Wf),w(Ci,Bf),w(Bf,Lf),w(Ci,Rf),w(Rf,_f),w(Ci,Gf),w(Ci,Ff),w(Ff,$f),w(Ci,Hf),w(Hf,Jf),w(Ci,zf),w(Ci,Kf),w(Kf,Yf),w(Ci,Vf),w(Ci,Uf),w(Uf,Qf),w(Ci,Xf),w(Xf,Zf),w(Ci,au),w(Ci,su),w(su,tu),w(Ci,eu),w(eu,ou),w(Ci,nu),w(Ci,ru),w(ru,cu),w(Ci,lu),w(lu,iu),w(Ci,pu),w(Ci,hu),w(hu,fu),w(Ci,uu),w(Ci,vu),w(vu,du),w(Ci,Eu),w(Ci,gu),w(gu,ku),w(Ci,mu),w(Ci,Su),w(Su,Pu),w(Ci,wu),w(wu,Au),w(Ci,Nu),w(Nu,yu),w(Ci,bu),w(Ci,xu),w(xu,Ou),w(Ci,Cu),w(Cu,ju),w(Ci,Du),w(Ci,Tu),w(Tu,Iu),w(Ci,Mu),w(Ci,qu),w(qu,Wu),w(Ci,Bu),w(Ci,Lu),w(Lu,Ru),w(Ci,_u),w(Ci,Gu),w(Gu,Fu),w(Ci,$u),w($u,Hu),w(Ci,Ju),w(Ju,zu),w(Ci,Ku),w(Ci,Yu),w(Yu,Vu),w(Ci,Uu),w(Uu,Qu),w(Ci,Xu),w(Ci,Zu),w(Zu,av),w(Ci,sv),w(Ci,tv),w(tv,ev),w(Ci,ov),w(ov,nv),w(Ci,rv),w(rv,cv);w(Ci,lv),w(Ci,iv),w(iv,pv),w(Ci,hv),w(hv,fv),P(a,uv,f),P(a,vv,f),w(vv,dv),w(vv,Ev),w(Ev,gv),w(vv,kv),w(vv,mv),w(mv,Sv),w(vv,Pv),w(vv,wv),w(wv,Av),w(vv,Nv),P(a,yv,f),P(a,bv,f),w(bv,xv),w(bv,Ov),w(Ov,Cv),w(bv,jv),P(a,Dv,f),P(a,Tv,f),w(Tv,Iv),w(Iv,Mv),w(Mv,qv),w(qv,Wv),w(Mv,Bv),w(Mv,Lv),w(Lv,Rv),w(Mv,_v),w(_v,Gv),w(Iv,Fv),w(Iv,$v),w($v,Hv),w(Iv,Jv),w(Iv,zv),w(zv,Kv),w(Kv,Yv),w(zv,Vv),w(zv,Uv),w(Uv,Qv),w(zv,Xv),w(Xv,Zv),w(Iv,ad),w(Iv,sd),w(sd,td),w(Iv,ed),w(Iv,od),w(od,nd),w(nd,rd),w(od,cd),w(od,ld),w(ld,id),w(od,pd),w(pd,hd),w(Iv,fd),w(Iv,ud),w(ud,vd),P(a,dd,f),P(a,Ed,f),w(Ed,gd),P(a,kd,f),P(a,md,f),w(md,Sd),w(Sd,Pd),w(Pd,wd),w(wd,Ad),w(Pd,Nd),w(Sd,yd),w(Sd,bd),w(bd,xd),w(Sd,Od),w(Sd,Cd),w(Cd,jd),P(a,Dd,f),P(a,Td,f),w(Td,Id),w(Td,Md),w(Md,qd),w(Td,Wd),w(Td,Bd),w(Bd,Ld),w(Td,Rd),P(a,_d,f),P(a,Gd,f),w(Gd,Fd),P(a,$d,f),P(a,Hd,f),w(Hd,Jd),P(a,zd,f),P(a,Kd,f),w(Kd,Yd),w(Yd,Vd),w(Kd,Ud),w(Kd,Qd),w(Qd,Xd),w(Kd,Zd),w(Kd,aE),w(aE,sE),w(Kd,tE),P(a,eE,f),P(a,oE,f),w(oE,nE),P(a,rE,f),P(a,cE,f),w(cE,lE),w(lE,iE),w(iE,pE),w(lE,hE),w(lE,fE),w(fE,uE),w(lE,vE),P(a,dE,f),P(a,EE,f),w(EE,gE),w(EE,kE),w(kE,mE),w(EE,SE),P(a,PE,f),P(a,wE,f),w(wE,AE),w(wE,NE),w(NE,yE),w(wE,bE),w(wE,xE),w(xE,OE),w(wE,CE),P(a,jE,f),P(a,DE,f),w(DE,TE),w(TE,IE),w(TE,ME),w(ME,qE),w(qE,WE),w(ME,BE),w(TE,LE),w(TE,RE),w(RE,_E),w(_E,GE),w(RE,FE),w(TE,$E),P(a,HE,f),P(a,JE,f),w(JE,zE),w(JE,KE),w(KE,YE),w(JE,VE),w(JE,UE),w(UE,QE),w(JE,XE),w(JE,ZE),w(ZE,ag),w(JE,sg),w(JE,tg),w(tg,eg),w(JE,og),w(JE,ng),w(ng,rg),w(JE,cg),w(JE,lg),w(lg,ig),w(JE,pg),w(JE,hg),w(hg,fg),w(JE,ug),w(JE,vg),w(vg,dg),w(JE,Eg),w(JE,gg),w(gg,kg),w(JE,mg),P(a,Sg,f),P(a,Pg,f),w(Pg,wg),w(Pg,Ag),w(Ag,Ng),w(Pg,yg),w(Pg,bg),w(bg,xg),w(Pg,Og),P(a,Cg,f),P(a,jg,f),w(jg,Dg),w(jg,Tg),w(Tg,Ig),w(jg,Mg),P(a,qg,f),P(a,Wg,f),w(Wg,Bg),w(Bg,Lg),w(Bg,Rg),w(Rg,_g),w(_g,Gg),w(Rg,Fg),w(Bg,$g),w(Bg,Hg),w(Hg,Jg),w(Hg,zg),w(Bg,Kg),w(Kg,Yg),w(Yg,Vg),w(Kg,Ug),w(Kg,Qg),w(Qg,Xg),w(Kg,Zg),w(Kg,ak),w(ak,sk),w(Kg,tk),w(Bg,ek),w(ek,ok),w(ek,nk),w(Bg,rk),P(a,ck,f),P(a,lk,f),w(lk,ik),w(lk,pk),w(pk,hk),w(lk,fk),w(lk,uk),w(uk,vk),w(lk,dk),P(a,Ek,f),P(a,gk,f),w(gk,kk),w(gk,mk),w(mk,Sk),w(gk,Pk),w(gk,wk),w(wk,Ak),w(gk,Nk),w(gk,yk),w(yk,bk),w(gk,xk),P(a,Ok,f),P(a,Ck,f),w(Ck,jk),P(a,Dk,f),P(a,Tk,f),w(Tk,Ik),w(Ik,Mk),w(Mk,qk),w(qk,Wk),w(Wk,Bk),w(qk,Lk),w(Mk,Rk),w(Rk,_k),w(Ik,Gk),w(Gk,Fk),w(Fk,$k),w($k,Hk),w(Fk,Jk),w(Ik,zk),w(zk,Kk),w(Kk,Yk),w(Yk,Vk),w(Kk,Uk),w(zk,Qk),w(Qk,Xk),w(Ik,Zk),w(Ik,am),w(am,sm),w(sm,tm),w(tm,em),w(sm,om),w(am,nm),w(nm,rm),w(Ik,cm),w(Ik,lm),w(lm,im),w(Ik,pm),w(Ik,hm),w(hm,fm),w(fm,um),w(um,vm),w(fm,dm),w(hm,Em),w(Em,gm),w(Ik,km),w(Ik,mm),w(mm,Sm),w(Sm,Pm),w(Pm,wm),w(Sm,Am),w(mm,Nm),w(Nm,ym),w(Ik,bm),w(bm,xm),w(xm,Om),w(Om,Cm),w(xm,jm),w(Ik,Dm),w(Dm,Tm),w(Tm,Im),w(Im,Mm),w(Tm,qm),w(Dm,Wm),w(Wm,Bm),P(a,Lm,f),P(a,Rm,f),w(Rm,_m),w(Rm,Gm),w(Gm,Fm),w(Rm,$m),P(a,Hm,f),P(a,Jm,f),w(Jm,zm),w(Jm,Km),w(Km,Ym),w(Jm,Vm),w(Jm,Um),w(Um,Qm),w(Jm,Xm),w(Jm,Zm),w(Zm,aS),w(Jm,sS),P(a,tS,f),P(a,eS,f),w(eS,oS),w(oS,nS),w(nS,rS),w(oS,cS),w(oS,lS),w(lS,iS),w(oS,pS),w(oS,hS),w(hS,fS),w(fS,uS),w(hS,vS),w(oS,dS),w(oS,ES),w(ES,gS),w(gS,kS),w(ES,mS),w(oS,SS),P(a,PS,f),P(a,wS,f),w(wS,AS),w(wS,NS),w(NS,yS),w(wS,bS),w(wS,xS),w(xS,OS),w(wS,CS),w(wS,jS),w(jS,DS),w(wS,TS),P(a,IS,f),P(a,MS,f),w(MS,qS),w(MS,WS),w(WS,BS),w(MS,LS),w(MS,RS),w(RS,_S),w(MS,GS),w(MS,FS),w(FS,$S),w(MS,HS),w(MS,JS),w(JS,zS),w(MS,KS),w(MS,YS),w(YS,VS),w(MS,US),w(MS,QS),w(QS,XS),w(MS,ZS),P(a,aP,f),P(a,sP,f),w(sP,tP),w(tP,eP),w(eP,oP),w(tP,nP),w(nP,rP),w(tP,cP),w(tP,lP),w(lP,iP),w(tP,pP),w(pP,hP),P(a,fP,f),P(a,uP,f),w(uP,vP),w(uP,dP),w(dP,EP),w(uP,gP),w(uP,kP),w(kP,mP),w(uP,SP),w(uP,PP),w(PP,wP),w(uP,AP),w(uP,NP),w(NP,yP),w(uP,bP),w(uP,xP),w(xP,OP),w(uP,CP),w(uP,jP),w(jP,DP),w(uP,TP),P(a,IP,f),P(a,MP,f),w(MP,qP),w(qP,WP),w(qP,BP),w(BP,LP),w(qP,RP),w(qP,_P),w(_P,GP),w(qP,FP),w(qP,$P),w($P,HP),w(qP,JP),w(qP,zP),w(zP,KP),w(qP,YP),w(qP,VP),w(VP,UP),w(qP,QP),w(qP,XP),w(XP,ZP),w(qP,aw),w(aw,sw),w(qP,tw),w(tw,ew),w(qP,ow),w(qP,nw),w(nw,rw),w(qP,cw),w(qP,lw),w(lw,iw),w(qP,pw),w(pw,hw),w(qP,fw),w(fw,uw),w(qP,vw),w(qP,dw),w(dw,Ew),w(qP,gw),w(gw,kw),w(qP,mw),w(mw,Sw),w(qP,Pw),w(qP,ww),w(ww,Aw),w(qP,Nw),w(qP,yw),w(yw,bw),w(qP,xw),w(qP,Ow),w(Ow,Cw),w(qP,jw),w(qP,Dw),w(Dw,Tw),w(qP,Iw),w(qP,Mw),w(Mw,qw),w(qP,Ww),w(qP,Bw),w(Bw,Lw),w(qP,Rw),w(qP,_w),w(_w,Gw),w(qP,Fw),w(Fw,$w),w(qP,Hw),w(Hw,Jw),w(qP,zw),w(qP,Kw),w(Kw,Yw),w(qP,Vw),w(qP,Uw),w(Uw,Qw),w(qP,Xw),w(Xw,Zw),w(qP,aA),w(aA,sA),w(qP,tA),w(qP,eA),w(eA,oA),w(qP,nA),w(nA,rA),w(qP,cA),w(cA,lA),w(qP,iA),w(qP,pA),w(pA,hA),P(a,fA,f),P(a,uA,f),w(uA,vA),w(uA,dA),w(dA,EA),w(uA,gA),P(a,kA,f),P(a,mA,f),w(mA,SA),w(mA,PA),w(PA,wA),w(mA,AA),P(a,NA,f),P(a,yA,f),P(a,xA,f),P(a,OA,f),w(OA,CA),w(OA,jA),w(jA,DA),w(OA,TA),w(OA,IA),w(IA,MA),w(OA,qA),w(OA,WA),w(WA,BA),w(OA,LA),P(a,RA,f),P(a,_A,f),w(_A,GA),w(GA,FA),w(FA,$A),w($A,HA),w(HA,JA),w($A,zA),w(FA,KA),w(KA,YA),w(GA,VA),w(VA,UA),w(UA,QA),w(QA,XA),w(UA,ZA),w(UA,aN),w(aN,sN),w(UA,tN),w(UA,eN),w(eN,oN),w(UA,nN),w(GA,rN),w(rN,cN),w(cN,lN),w(lN,iN),w(cN,pN),w(rN,hN),w(hN,fN),w(GA,uN),w(GA,vN),w(vN,dN),w(dN,EN),w(EN,gN),w(dN,kN),w(vN,mN),w(mN,SN),w(GA,PN),w(GA,wN),w(wN,AN),w(AN,NN),w(NN,yN),w(AN,bN),w(wN,xN),w(xN,ON),w(GA,CN),w(CN,jN),w(jN,DN),w(CN,TN),w(CN,IN),w(IN,MN),w(GA,qN),w(qN,WN),w(WN,BN),w(BN,LN),w(WN,RN),w(qN,_N),w(_N,GN),w(GA,FN),w(GA,$N),w($N,HN),w(HN,JN),w(JN,zN),w(HN,KN),w($N,YN),w(YN,VN),w(GA,UN),w(UN,QN),w(QN,XN),w(XN,ZN),w(QN,ay),w(UN,sy),w(sy,ty),w(GA,ey),w(GA,oy),w(oy,ny),w(ny,ry),w(ry,cy),w(ny,ly),w(oy,iy),w(iy,py),w(GA,hy),w(GA,fy),w(fy,uy),w(uy,vy),w(vy,dy),w(uy,Ey),w(fy,gy),w(gy,ky),w(GA,my),w(my,Sy),w(Sy,Py),w(Py,wy),w(Sy,Ay),w(Sy,Ny),w(Ny,yy),w(Sy,by),w(Sy,xy),w(xy,Oy),w(Sy,Cy),w(Cy,jy),w(Sy,Dy),w(Sy,Ty),w(Ty,Iy),w(Sy,My),w(Sy,qy),w(qy,Wy),w(Sy,By),w(By,Ly),w(Sy,Ry),w(Sy,_y),w(_y,Gy),w(Sy,Fy),w(Sy,$y),w($y,Hy),w(Sy,Jy),w(Sy,zy),w(zy,Ky),w(Sy,Yy),w(Sy,Vy),w(Vy,Uy),w(Sy,Qy),w(Sy,Xy),w(Xy,Zy),w(Zy,ab),w(Xy,sb),w(Xy,tb),w(tb,eb),w(Sy,ob),w(Sy,nb),w(nb,rb),w(Sy,cb),w(Sy,lb),w(lb,ib),w(Sy,pb),w(Sy,hb),w(hb,fb),w(Sy,ub),w(Sy,vb),w(vb,db),w(db,Eb),w(vb,gb),w(vb,kb),w(kb,mb),w(Sy,Sb),w(Sy,Pb),w(Pb,wb),w(Sy,Ab),w(Sy,Nb),w(Nb,yb),w(Sy,bb),w(Sy,xb),w(xb,Ob),w(Sy,Cb),w(Sy,jb),w(jb,Db),w(Db,Tb),w(jb,Ib),w(jb,Mb),w(Mb,qb),w(Sy,Wb),w(Sy,Bb),w(Bb,Lb),w(Sy,Rb),w(Sy,_b),w(_b,Gb),w(Sy,Fb),w(Sy,$b),w($b,Hb),w(Sy,Jb),w(Sy,zb),w(zb,Kb),w(Kb,Yb),w(zb,Vb),w(zb,Ub),w(Ub,Qb),w(Sy,Xb),w(Sy,Zb),w(Zb,ax),w(Sy,sx),w(GA,tx),w(tx,ex),w(ex,ox),w(ox,nx),w(ex,rx),w(tx,cx),w(cx,lx),P(a,ix,f),P(a,px,f),P(a,fx,f),P(a,ux,f),w(ux,vx),w(ux,dx),w(dx,Ex),w(ux,gx),w(ux,kx),w(kx,mx),w(ux,Sx),w(ux,Px),w(Px,wx),w(ux,Ax),w(ux,Nx),w(Nx,yx),w(ux,bx),w(ux,xx),w(xx,Ox),w(ux,Cx),w(ux,jx),w(jx,Dx),w(ux,Tx),P(a,Ix,f),P(a,Mx,f),w(Mx,qx)},d(a){a&&k(s),a&&k(e),a&&k(o),a&&k(O),a&&k(C),a&&k(D),a&&k(T),a&&k(q),a&&k(W),a&&k(G),a&&k(F),a&&k(H),a&&k(J),a&&k(ta),a&&k(ea),a&&k(la),a&&k(ia),a&&k(va),a&&k(da),a&&k(qa),a&&k(Wa),a&&k(Ga),a&&k(Fa),a&&k(Ha),a&&k(Ja),a&&k(Ka),a&&k(Ya),a&&k(Ua),a&&k(Qa),a&&k(hs),a&&k(fs),a&&k(vs),a&&k(ds),a&&k(ys),a&&k(bs),a&&k(Ms),a&&k(qs),a&&k(Bs),a&&k(Ls),a&&k(Js),a&&k(zs),a&&k(Ys),a&&k(Vs),a&&k(at),a&&k(st),a&&k(et),a&&k(ot),a&&k(rt),a&&k(ct),a&&k(ft),a&&k(ut),a&&k(dt),a&&k(Et),a&&k(kt),a&&k(mt),a&&k(Nt),a&&k(yt),a&&k(mn),a&&k(Sn),a&&k(On),a&&k(Cn),a&&k(wi),a&&k(Ai),a&&k(xi),a&&k(Oi),a&&k(uv),a&&k(vv),a&&k(yv),a&&k(bv),a&&k(Dv),a&&k(Tv),a&&k(dd),a&&k(Ed),a&&k(kd),a&&k(md),a&&k(Dd),a&&k(Td),a&&k(_d),a&&k(Gd),a&&k($d),a&&k(Hd),a&&k(zd),a&&k(Kd),a&&k(eE),a&&k(oE),a&&k(rE),a&&k(cE),a&&k(dE),a&&k(EE),a&&k(PE),a&&k(wE),a&&k(jE),a&&k(DE),a&&k(HE),a&&k(JE),a&&k(Sg),a&&k(Pg),a&&k(Cg),a&&k(jg),a&&k(qg),a&&k(Wg),a&&k(ck),a&&k(lk),a&&k(Ek),a&&k(gk),a&&k(Ok),a&&k(Ck),a&&k(Dk),a&&k(Tk),a&&k(Lm),a&&k(Rm),a&&k(Hm),a&&k(Jm),a&&k(tS),a&&k(eS),a&&k(PS),a&&k(wS),a&&k(IS),a&&k(MS),a&&k(aP),a&&k(sP),a&&k(fP),a&&k(uP),a&&k(IP),a&&k(MP),a&&k(fA),a&&k(uA),a&&k(kA),a&&k(mA),a&&k(NA),a&&k(yA),a&&k(xA),a&&k(OA),a&&k(RA),a&&k(_A),a&&k(ix),a&&k(px),a&&k(fx),a&&k(ux),a&&k(Ix),a&&k(Mx)}}}function y(a){let s,t;const f=[b];let u={$$slots:{default:[N]},$$scope:{ctx:a}};for(let a=0;a<f.length;a+=1)u=e(u,f[a]);return s=new A({props:u}),{c(){o(s.$$.fragment)},l(a){n(s.$$.fragment,a)},m(a,e){r(s,a,e),t=!0},p(a,[t]){const e=0&t?c(f,[h(b)]):{};1&t&&(e.$$scope={dirty:t,ctx:a}),s.$set(e)},i(a){t||(l(s.$$.fragment,a),t=!0)},o(a){i(s.$$.fragment,a),t=!1},d(a){p(s,a)}}}const b={title:"Blogging with Sapper, Tailwind, and mdsvex: Part 1",subtitle:"How I made this very blog.",author:"Jeff Caldwell",description:"How I made this site using Svelte/Sapper, TailwindCss, and mdsvex",tags:["Svelte","Sapper","TailwindCss","mdsvex","Blog","Markdown","JavaScript","CSS","Tutorial","Web Development","pnpm"],date:"Tuesday, December 15, 2020",layout:"blog",toc:!0};export default class extends a{constructor(a){super(),s(this,a,null,y,t,{})}}export{b as metadata};
