import{S as t,i as a,s as e,J as o,p as i,q as n,r,K as s,u as h,v as l,w as c,C as m,L as u,I as d,b as p,t as f,c as g,f as v,g as w,h as b,d as y,j as E,k as $,a as x,l as I,m as k}from"./client.4febabe9.js";import"./Sidebar.0bbf849d.js";import{B as A}from"./blog.dea5820c.js";import{i as D,s as S,t as P,l as j,e as z,a as H,b as C,c as T,d as M}from"./line.dde9928b.js";function N(t,a,e){t=+t,a=+a,e=(i=arguments.length)<2?(a=t,t=0,1):i<3?1:+e;for(var o=-1,i=0|Math.max(0,Math.ceil((a-t)/e)),n=new Array(i);++o<i;)n[o]=t+o*e;return n}const W=Symbol("implicit");function O(){var t=new Map,a=[],e=[],o=W;function i(i){var n=i+"",r=t.get(n);if(!r){if(o!==W)return o;t.set(n,r=a.push(i))}return e[(r-1)%e.length]}return i.domain=function(e){if(!arguments.length)return a.slice();a=[],t=new Map;for(const o of e){const e=o+"";t.has(e)||t.set(e,a.push(o))}return i},i.range=function(t){return arguments.length?(e=Array.from(t),i):e.slice()},i.unknown=function(t){return arguments.length?(o=t,i):o},i.copy=function(){return O(a,e).unknown(o)},D.apply(i,arguments),i}function R(){var t,a,e=O().unknown(void 0),o=e.domain,i=e.range,n=0,r=1,s=!1,h=0,l=0,c=.5;function m(){var e=o().length,m=r<n,u=m?r:n,d=m?n:r;t=(d-u)/Math.max(1,e-h+2*l),s&&(t=Math.floor(t)),u+=(d-u-t*(e-h))*c,a=t*(1-h),s&&(u=Math.round(u),a=Math.round(a));var p=N(e).map((function(a){return u+t*a}));return i(m?p.reverse():p)}return delete e.unknown,e.domain=function(t){return arguments.length?(o(t),m()):o()},e.range=function(t){return arguments.length?([n,r]=t,n=+n,r=+r,m()):[n,r]},e.rangeRound=function(t){return[n,r]=t,n=+n,r=+r,s=!0,m()},e.bandwidth=function(){return a},e.step=function(){return t},e.round=function(t){return arguments.length?(s=!!t,m()):s},e.padding=function(t){return arguments.length?(h=Math.min(1,l=+t),m()):h},e.paddingInner=function(t){return arguments.length?(h=Math.min(1,t),m()):h},e.paddingOuter=function(t){return arguments.length?(l=+t,m()):l},e.align=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),m()):c},e.copy=function(){return R(o(),[n,r]).round(s).paddingInner(h).paddingOuter(l).align(c)},D.apply(m(),arguments)}function G(t){let a,e,o,i,n,r,s,h,l,c,m,u,d,A,D,S,P,j,z,H,C,T,M,N,W,O,R,G,q,B,L,V,Y,J,K,F,Q,U,X,Z,_,tt,at,et,ot,it,nt,rt,st,ht,lt,ct,mt,ut,dt,pt,ft,gt,vt,wt,bt,yt,Et,$t,xt,It,kt,At,Dt,St=t[4][0]+"",Pt=t[4][t[4].length-1]+"",jt=t[4][0]+"",zt=t[4][t[4].length-1]+"";return{c(){a=p("section"),e=p("h3"),o=p("span"),i=f(t[2]),n=f(" commits in "),r=p("span"),s=f(t[3]),h=f(" repositories from "),l=p("span"),c=f(St),m=f(" to "),u=p("span"),d=f(Pt),A=g(),D=p("section"),S=g(),P=p("p"),j=f("Wow that’s ugly! What happened?"),z=g(),H=p("p"),C=f("The hideous chart above is a consequence of my attempt to improve on the "),T=p("a"),M=f("basic line chart"),N=f(" of GitHub commits I made earlier this month. I foolishly thought that throwing more data at it would be an improvement."),W=g(),O=p("p"),R=f("As you can see, I was wrong. So what’s the problem?"),G=g(),q=p("p"),B=f("I’m trying to use the wrong type of visualization for the data. I want to communicate the variance in my GitHub commit activity over a given period of time. Line charts are good for data that’s more or less continuous. The problem with the data I’m providing is that there are periods of high activity interspersed with periods of no activity at all. A line chart just sort of obfuscates what we’re trying to communicate."),L=g(),V=p("p"),Y=f("What we need is a bar chart."),J=g(),K=p("section"),F=p("h3"),Q=p("span"),U=f(t[2]),X=f(" commits in "),Z=p("span"),_=f(t[3]),tt=f(" repositories from "),at=p("span"),et=f(jt),ot=f(" to "),it=p("span"),nt=f(zt),rt=g(),st=p("section"),ht=g(),lt=p("p"),ct=f("Actually, a bar chart is technically horizontal. This is a column chart or column graph, which is a vertical bar chart."),mt=g(),ut=p("p"),dt=f("Whatever kind of chart it is, it’s important to consider what kind of information and meaning you’re trying to communicate when you make a visualization. The line chart above, aside from being almost totally unappealing, just doesn’t convey the information as well as the column chart."),pt=g(),ft=p("p"),gt=f("Once I’ve gotten some real practice with D3 I’ll start writing some guides to making visualizations, especially within the context of using D3 within a modern framework like Svelte. D3’s been around for a long time and there’s quite a bit of old information available online. A lot of that information doesn’t apply to using it the way someone would want to in this context."),vt=g(),wt=p("h3"),bt=f("Resources"),yt=g(),Et=p("p"),$t=p("a"),xt=f("How to Choose the Right Chart"),It=g(),kt=p("p"),At=p("a"),Dt=f("How to Choose the Right Visualization Type"),this.h()},l(p){a=v(p,"SECTION",{class:!0});var f=w(a);e=v(f,"H3",{});var g=w(e);o=v(g,"SPAN",{class:!0});var $=w(o);i=b($,t[2]),$.forEach(y),n=b(g," commits in "),r=v(g,"SPAN",{class:!0});var x=w(r);s=b(x,t[3]),x.forEach(y),h=b(g," repositories from "),l=v(g,"SPAN",{class:!0});var I=w(l);c=b(I,St),I.forEach(y),m=b(g," to "),u=v(g,"SPAN",{class:!0});var k=w(u);d=b(k,Pt),k.forEach(y),g.forEach(y),A=E(f),D=v(f,"SECTION",{class:!0}),w(D).forEach(y),f.forEach(y),S=E(p),P=v(p,"P",{});var Ht=w(P);j=b(Ht,"Wow that’s ugly! What happened?"),Ht.forEach(y),z=E(p),H=v(p,"P",{});var Ct=w(H);C=b(Ct,"The hideous chart above is a consequence of my attempt to improve on the "),T=v(Ct,"A",{href:!0});var Tt=w(T);M=b(Tt,"basic line chart"),Tt.forEach(y),N=b(Ct," of GitHub commits I made earlier this month. I foolishly thought that throwing more data at it would be an improvement."),Ct.forEach(y),W=E(p),O=v(p,"P",{});var Mt=w(O);R=b(Mt,"As you can see, I was wrong. So what’s the problem?"),Mt.forEach(y),G=E(p),q=v(p,"P",{});var Nt=w(q);B=b(Nt,"I’m trying to use the wrong type of visualization for the data. I want to communicate the variance in my GitHub commit activity over a given period of time. Line charts are good for data that’s more or less continuous. The problem with the data I’m providing is that there are periods of high activity interspersed with periods of no activity at all. A line chart just sort of obfuscates what we’re trying to communicate."),Nt.forEach(y),L=E(p),V=v(p,"P",{});var Wt=w(V);Y=b(Wt,"What we need is a bar chart."),Wt.forEach(y),J=E(p),K=v(p,"SECTION",{class:!0});var Ot=w(K);F=v(Ot,"H3",{});var Rt=w(F);Q=v(Rt,"SPAN",{class:!0});var Gt=w(Q);U=b(Gt,t[2]),Gt.forEach(y),X=b(Rt," commits in "),Z=v(Rt,"SPAN",{class:!0});var qt=w(Z);_=b(qt,t[3]),qt.forEach(y),tt=b(Rt," repositories from "),at=v(Rt,"SPAN",{class:!0});var Bt=w(at);et=b(Bt,jt),Bt.forEach(y),ot=b(Rt," to "),it=v(Rt,"SPAN",{class:!0});var Lt=w(it);nt=b(Lt,zt),Lt.forEach(y),Rt.forEach(y),rt=E(Ot),st=v(Ot,"SECTION",{class:!0}),w(st).forEach(y),Ot.forEach(y),ht=E(p),lt=v(p,"P",{});var Vt=w(lt);ct=b(Vt,"Actually, a bar chart is technically horizontal. This is a column chart or column graph, which is a vertical bar chart."),Vt.forEach(y),mt=E(p),ut=v(p,"P",{});var Yt=w(ut);dt=b(Yt,"Whatever kind of chart it is, it’s important to consider what kind of information and meaning you’re trying to communicate when you make a visualization. The line chart above, aside from being almost totally unappealing, just doesn’t convey the information as well as the column chart."),Yt.forEach(y),pt=E(p),ft=v(p,"P",{});var Jt=w(ft);gt=b(Jt,"Once I’ve gotten some real practice with D3 I’ll start writing some guides to making visualizations, especially within the context of using D3 within a modern framework like Svelte. D3’s been around for a long time and there’s quite a bit of old information available online. A lot of that information doesn’t apply to using it the way someone would want to in this context."),Jt.forEach(y),vt=E(p),wt=v(p,"H3",{id:!0});var Kt=w(wt);bt=b(Kt,"Resources"),Kt.forEach(y),yt=E(p),Et=v(p,"P",{});var Ft=w(Et);$t=v(Ft,"A",{href:!0,rel:!0});var Qt=w($t);xt=b(Qt,"How to Choose the Right Chart"),Qt.forEach(y),Ft.forEach(y),It=E(p),kt=v(p,"P",{});var Ut=w(kt);At=v(Ut,"A",{href:!0,rel:!0});var Xt=w(At);Dt=b(Xt,"How to Choose the Right Visualization Type"),Xt.forEach(y),Ut.forEach(y),this.h()},h(){$(o,"class","highlight svelte-10p1eum"),$(r,"class","highlight svelte-10p1eum"),$(l,"class","highlight svelte-10p1eum"),$(u,"class","highlight svelte-10p1eum"),$(D,"class","chart svelte-10p1eum"),$(a,"class","commits"),$(T,"href","/blog/basic-dataviz-with-d3"),$(Q,"class","highlight svelte-10p1eum"),$(Z,"class","highlight svelte-10p1eum"),$(at,"class","highlight svelte-10p1eum"),$(it,"class","highlight svelte-10p1eum"),$(st,"class","chart svelte-10p1eum"),$(K,"class","commits"),$(wt,"id","resources"),$($t,"href","https://towardsdatascience.com/data-visualization-how-to-choose-the-right-chart-part-1-d4c550085ea7"),$($t,"rel","nofollow"),$(At,"href","https://www.datapine.com/blog/how-to-choose-the-right-data-visualization-types/"),$(At,"rel","nofollow")},m(p,f){x(p,a,f),I(a,e),I(e,o),I(o,i),I(e,n),I(e,r),I(r,s),I(e,h),I(e,l),I(l,c),I(e,m),I(e,u),I(u,d),I(a,A),I(a,D),t[6](D),x(p,S,f),x(p,P,f),I(P,j),x(p,z,f),x(p,H,f),I(H,C),I(H,T),I(T,M),I(H,N),x(p,W,f),x(p,O,f),I(O,R),x(p,G,f),x(p,q,f),I(q,B),x(p,L,f),x(p,V,f),I(V,Y),x(p,J,f),x(p,K,f),I(K,F),I(F,Q),I(Q,U),I(F,X),I(F,Z),I(Z,_),I(F,tt),I(F,at),I(at,et),I(F,ot),I(F,it),I(it,nt),I(K,rt),I(K,st),t[7](st),x(p,ht,f),x(p,lt,f),I(lt,ct),x(p,mt,f),x(p,ut,f),I(ut,dt),x(p,pt,f),x(p,ft,f),I(ft,gt),x(p,vt,f),x(p,wt,f),I(wt,bt),x(p,yt,f),x(p,Et,f),I(Et,$t),I($t,xt),x(p,It,f),x(p,kt,f),I(kt,At),I(At,Dt)},p(t,a){4&a&&k(i,t[2]),8&a&&k(s,t[3]),4&a&&k(U,t[2]),8&a&&k(_,t[3])},d(e){e&&y(a),t[6](null),e&&y(S),e&&y(P),e&&y(z),e&&y(H),e&&y(W),e&&y(O),e&&y(G),e&&y(q),e&&y(L),e&&y(V),e&&y(J),e&&y(K),t[7](null),e&&y(ht),e&&y(lt),e&&y(mt),e&&y(ut),e&&y(pt),e&&y(ft),e&&y(vt),e&&y(wt),e&&y(yt),e&&y(Et),e&&y(It),e&&y(kt)}}}function q(t){let a,e;const m=[B];let d={$$slots:{default:[G]},$$scope:{ctx:t}};for(let t=0;t<m.length;t+=1)d=o(d,m[t]);return a=new A({props:d}),{c(){i(a.$$.fragment)},l(t){n(a.$$.fragment,t)},m(t,o){r(a,t,o),e=!0},p(t,[e]){const o=0&e?s(m,[u(B)]):{};8207&e&&(o.$$scope={dirty:e,ctx:t}),a.$set(o)},i(t){e||(h(a.$$.fragment,t),e=!0)},o(t){l(a.$$.fragment,t),e=!1},d(t){c(a,t)}}}const B={title:"Improved Github Commits Visualization",author:"Jaff Caldwell",date:"Wednesday, December 23, 2020",description:"Improving on my first Github commits visualization.",layout:"blog"};async function L(){return await this.fetch("blog/improved-github-visualization.json").then((t=>t.json())).then((t=>({commitsData:t})))}function V(t,a,e){let o,i,{commitsData:n}=a,r=[],s=[],h=0;n.forEach((t=>{Object.keys(t.commits).forEach((t=>{r[t]||r.push(t)}))}));const l=r.sort(((t,a)=>Date.parse(t)<Date.parse(a)?-1:Date.parse(t)>Date.parse(a)?1:0)),c=(n.map((t=>Object.entries(t.commits).map((t=>({date:t[0],commits:t[1].length}))).forEach((t=>s.push(t))))),s.sort(((t,a)=>Date.parse(t.date)<Date.parse(a.date)?-1:Date.parse(t.date)>Date.parse(a.date)?1:0)).filter((t=>Date.parse(t.date)>Date.parse("12/31/2019"))));function u(t){const a=S(o);console.log("wrapper: ",a);const e={height:600,width:1200,margin:{top:16,right:16,bottom:32,left:32}};e.boundedWidth=e.width-(e.margin.left+e.margin.right),e.boundedHeight=e.height-(e.margin.top+e.margin.bottom);const n=P("%m/%d/%Y"),r=t=>t.commits,s=t=>n(t.date),h=a.append("svg").attr("viewBox",`0 0 ${e.width} ${e.height}`),l=(h.append("rect").attr("fill","none").attr("width",e.width).attr("height",e.height),h.append("g").style("transform",`translate(${e.margin.left}px, ${e.margin.top}px)`)),c=j().domain(z(t,r)).range([e.boundedHeight,0]),m=H().domain(z(t,s)).range([0,e.boundedWidth]),u=C().x((t=>m(s(t)))).y((t=>c(r(t)))),d=(l.append("g").attr("class","grid-lines").selectAll("line").data(c.ticks()).join("line").attr("x1",0).attr("x2",e.width-(e.margin.right+e.margin.left)).attr("y1",(t=>c(t))).attr("y2",(t=>c(t))).attr("stroke","#2d3b52"),l.append("path").attr("d",u(t)).attr("stroke","#ffbb28").attr("fill","none").attr("stroke-width",2),T().scale(c)),p=M().scale(m),f=(l.append("g").call(d),l.append("g").call(p).style("transform",`translateY(${e.boundedHeight}px)`),R().padding(.2).domain(t.map((t=>t.date))).range([0,e.boundedWidth])),g=S(i).append("svg").attr("viewBox",`0 0 ${e.width} ${e.height}`),v=(h.append("rect").attr("fill","none").attr("width",e.width).attr("height",e.height),g.append("g").style("transform",`translate(${e.margin.left}px, ${e.margin.top}px)`));v.append("g").attr("class","grid-lines").selectAll("line").data(c.ticks()).join("line").attr("x1",0).attr("x2",e.width-(e.margin.right+e.margin.left)).attr("y1",(t=>c(t))).attr("y2",(t=>c(t))).attr("stroke","#2d3b52");g.append("g").attr("transform",`translate(${e.margin.left}, ${e.margin.top})`).selectAll("rect").data(t).join("rect").attr("fill","#ffbb28").attr("x",(t=>f(t.date))).attr("y",(t=>c(t.commits))).attr("height",(t=>e.boundedHeight-c(t.commits))).attr("width",f.bandwidth());v.append("g").call(d),v.append("g").call(p).style("transform",`translateY(${e.boundedHeight}px)`)}let p;return c.forEach((t=>{e(2,h+=t.commits)})),console.log("chartElement",o),m((()=>{u(c),console.log("totalCommits",h)})),t.$$set=t=>{"commitsData"in t&&e(5,n=t.commitsData)},t.$$.update=()=>{32&t.$$.dirty&&e(3,p=n.length)},[o,i,h,p,l,n,function(t){d[t?"unshift":"push"]((()=>{o=t,e(0,o)}))},function(t){d[t?"unshift":"push"]((()=>{i=t,e(1,i)}))}]}export default class extends t{constructor(t){super(),a(this,t,V,q,e,{commitsData:5})}}export{B as metadata,L as preload};
