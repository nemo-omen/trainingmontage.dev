import{S as a,i as s,s as t,P as e,x as o,y as n,z as r,Q as c,R as l,A as i,B as p,C as h,h as f,t as u,j as v,k as d,l as E,m as g,g as k,n as m,o as S,f as P,p as w}from"./client.8dae1ab6.js";import"./Sidebar.4debabb3.js";import{B as A}from"./blog.8ba31335.js";function N(a){let s,t,e,o,n,r,c,l,i,p,h,A,N,y,b,x,C,O,j,D,T,I,M,W,q,B,R,_,L,G,F,$,H,J,z,Y,K,V,U,Q,X,Z,aa,sa,ta,ea,oa,na,ra,ca,la,ia,pa,ha,fa,ua,va,da,Ea,ga,ka,ma,Sa,Pa,wa,Aa,Na,ya,ba,xa,Ca,Oa,ja,Da,Ta,Ia,Ma,Wa,qa,Ba,Ra,_a,La,Ga,Fa,$a,Ha,Ja,za,Ya,Ka,Va,Ua,Qa,Xa,Za,as,ss,ts,es,os,ns,rs,cs,ls,is,ps,hs,fs,us,vs,ds,Es,gs,ks,ms,Ss,Ps,ws,As,Ns,ys,bs,xs,Cs,Os,js,Ds,Ts,Is,Ms,Ws,qs,Bs,Rs,_s,Ls,Gs,Fs,$s,Hs,Js,zs,Ys,Ks,Vs,Us,Qs,Xs,Zs,at,st,tt,et,ot,nt,rt,ct,lt,it,pt,ht,ft,ut,vt,dt,Et,gt,kt,mt,St,Pt,wt,At,Nt,yt,bt,xt,Ct,Ot,jt,Dt,Tt,It,Mt,Wt,qt,Bt,Rt,_t,Lt,Gt,Ft,$t,Ht,Jt,zt,Yt,Kt,Vt,Ut,Qt,Xt,Zt,ae,se,te,ee,oe,ne,re,ce,le,ie,pe,he,fe,ue,ve,de,Ee,ge,ke,me,Se,Pe,we,Ae,Ne,ye,be,xe,Ce,Oe,je,De,Te,Ie,Me,We,qe,Be,Re,_e,Le,Ge,Fe,$e,He,Je,ze,Ye,Ke,Ve,Ue,Qe,Xe,Ze,ao,so,to,eo,oo,no,ro,co,lo,io,po,ho,fo,uo,vo,Eo,go,ko,mo,So,Po,wo,Ao,No,yo,bo,xo,Co,Oo,jo,Do,To,Io,Mo,Wo,qo,Bo,Ro,_o,Lo,Go,Fo,$o,Ho,Jo,zo,Yo,Ko,Vo,Uo,Qo,Xo,Zo,an,sn,tn,en,on,nn,rn,cn,ln,pn,hn,fn,un,vn,dn,En,gn,kn,mn,Sn,Pn,wn,An,Nn,yn,bn,xn,Cn,On,jn,Dn,Tn,In,Mn,Wn,qn,Bn,Rn,_n,Ln,Gn,Fn,$n,Hn,Jn,zn,Yn,Kn,Vn,Un,Qn,Xn,Zn,ar,sr,tr,er,or,nr,rr,cr,lr,ir,pr,hr,fr,ur,vr,dr,Er,gr,kr,mr,Sr,Pr,wr,Ar,Nr,yr,br,xr,Cr,Or,jr,Dr,Tr,Ir,Mr,Wr,qr,Br,Rr,_r,Lr,Gr,Fr,$r,Hr,Jr,zr,Yr,Kr,Vr,Ur,Qr,Xr,Zr,ac,sc,tc,ec,oc,nc,rc,cc,lc,ic,pc,hc,fc,uc,vc,dc,Ec,gc,kc,mc,Sc,Pc,wc,Ac,Nc,yc,bc,xc,Cc,Oc,jc,Dc,Tc,Ic,Mc,Wc,qc,Bc,Rc,_c,Lc,Gc,Fc,$c,Hc,Jc,zc,Yc,Kc,Vc,Uc,Qc,Xc,Zc,al,sl,tl,el,ol,nl,rl,cl,ll,il,pl,hl,fl,ul,vl,dl,El,gl,kl,ml,Sl,Pl,wl,Al,Nl,yl,bl,xl,Cl,Ol,jl,Dl,Tl,Il,Ml,Wl,ql,Bl,Rl,_l,Ll,Gl,Fl,$l,Hl,Jl,zl,Yl,Kl,Vl,Ul,Ql,Xl,Zl,ai,si,ti,ei,oi,ni,ri,ci,li,ii,pi,hi,fi,ui,vi,di,Ei,gi,ki,mi,Si,Pi,wi,Ai,Ni,yi,bi,xi,Ci,Oi,ji,Di,Ti,Ii,Mi,Wi,qi,Bi,Ri,_i,Li,Gi,Fi,$i,Hi,Ji,zi,Yi,Ki,Vi,Ui,Qi,Xi,Zi,ap,sp,tp,ep,op,np,rp,cp,lp,ip,pp,hp,fp,up,vp,dp,Ep,gp,kp,mp,Sp,Pp,wp,Ap,Np,yp,bp,xp,Cp,Op,jp,Dp,Tp,Ip,Mp,Wp,qp,Bp,Rp,_p,Lp,Gp,Fp,$p,Hp,Jp,zp,Yp,Kp,Vp,Up,Qp,Xp,Zp,ah,sh,th,eh,oh,nh,rh,ch,lh,ih,ph,hh,fh,uh,vh,dh,Eh,gh,kh,mh,Sh,Ph,wh,Ah,Nh,yh,bh,xh,Ch,Oh,jh,Dh,Th,Ih,Mh,Wh,qh,Bh,Rh,_h,Lh,Gh,Fh,$h,Hh,Jh,zh,Yh,Kh,Vh,Uh,Qh,Xh,Zh,af,sf,tf,ef,of,nf,rf,cf,lf,pf,hf,ff,uf,vf,df,Ef,gf,kf,mf,Sf,Pf,wf,Af,Nf,yf,bf,xf,Cf,Of,jf,Df,Tf,If,Mf,Wf,qf,Bf,Rf,_f,Lf,Gf,Ff,$f,Hf,Jf,zf,Yf,Kf,Vf,Uf,Qf,Xf,Zf,au,su,tu,eu,ou,nu,ru,cu,lu,iu,pu,hu,fu,uu,vu,du,Eu,gu,ku,mu,Su,Pu,wu,Au,Nu,yu,bu,xu,Cu,Ou,ju,Du,Tu,Iu,Mu,Wu,qu,Bu,Ru,_u,Lu,Gu,Fu,$u,Hu,Ju,zu,Yu,Ku,Vu,Uu,Qu,Xu,Zu,av,sv,tv,ev,ov,nv,rv,cv,lv,iv,pv,hv,fv,uv,vv,dv,Ev,gv,kv,mv,Sv,Pv,wv,Av,Nv,yv,bv,xv,Cv,Ov,jv,Dv,Tv,Iv,Mv,Wv,qv,Bv,Rv,_v,Lv,Gv,Fv,$v,Hv,Jv,zv,Yv,Kv,Vv,Uv,Qv,Xv,Zv,ad,sd,td,ed,od,nd,rd,cd,ld,id,pd,hd,fd,ud,vd,dd,Ed,gd,kd,md,Sd,Pd,wd,Ad,Nd,yd,bd,xd,Cd,Od,jd,Dd,Td,Id,Md,Wd,qd,Bd,Rd,_d,Ld,Gd,Fd,$d,Hd,Jd,zd,Yd,Kd,Vd,Ud,Qd,Xd,Zd,aE,sE,tE,eE,oE,nE,rE,cE,lE,iE,pE,hE,fE,uE,vE,dE,EE,gE,kE,mE,SE,PE,wE,AE,NE,yE,bE,xE,CE,OE,jE,DE,TE,IE,ME,WE,qE,BE,RE,_E,LE,GE,FE,$E,HE,JE,zE,YE,KE,VE,UE,QE,XE,ZE,ag,sg,tg,eg,og,ng,rg,cg,lg,ig,pg,hg,fg,ug,vg,dg,Eg,gg,kg,mg,Sg,Pg,wg,Ag,Ng,yg,bg,xg,Cg,Og,jg,Dg,Tg,Ig,Mg,Wg,qg,Bg,Rg,_g,Lg,Gg,Fg,$g,Hg,Jg,zg,Yg,Kg,Vg,Ug,Qg,Xg,Zg,ak,sk,tk,ek,ok,nk,rk,ck,lk,ik,pk,hk,fk,uk,vk,dk,Ek,gk,kk,mk,Sk,Pk,wk,Ak,Nk,yk,bk,xk,Ck,Ok,jk,Dk,Tk,Ik,Mk,Wk,qk,Bk,Rk,_k,Lk,Gk,Fk,$k,Hk,Jk,zk,Yk,Kk,Vk,Uk,Qk,Xk,Zk,am,sm,tm,em,om,nm,rm,cm,lm,im,pm,hm,fm,um,vm,dm,Em,gm,km,mm,Sm,Pm,wm,Am,Nm,ym,bm,xm,Cm,Om,jm,Dm,Tm,Im,Mm,Wm,qm,Bm,Rm,_m,Lm,Gm,Fm,$m,Hm,Jm,zm,Ym,Km,Vm,Um,Qm,Xm,Zm,aS,sS,tS,eS,oS,nS,rS,cS,lS,iS,pS,hS,fS,uS,vS,dS,ES,gS,kS,mS,SS,PS,wS,AS,NS,yS,bS,xS,CS,OS,jS,DS,TS,IS,MS,WS,qS,BS,RS,_S,LS,GS,FS,$S,HS,JS,zS,YS,KS,VS,US,QS,XS,ZS,aP,sP,tP,eP,oP,nP,rP,cP,lP,iP,pP,hP,fP,uP,vP,dP,EP,gP,kP,mP,SP,PP,wP,AP,NP,yP,bP,xP,CP,OP,jP,DP,TP,IP,MP,WP,qP,BP,RP,_P,LP,GP,FP,$P,HP,JP,zP,YP,KP,VP,UP,QP,XP,ZP,aw,sw,tw,ew,ow,nw,rw,cw,lw,iw,pw,hw,fw,uw,vw,dw,Ew,gw,kw,mw,Sw,Pw,ww,Aw,Nw,yw,bw,xw,Cw,Ow,jw,Dw,Tw,Iw,Mw,Ww,qw,Bw,Rw,_w,Lw,Gw,Fw,$w,Hw,Jw,zw,Yw,Kw,Vw,Uw,Qw,Xw,Zw,aA,sA,tA,eA,oA,nA,rA,cA,lA,iA,pA,hA,fA,uA,vA,dA,EA,gA,kA,mA,SA,PA,wA,AA,NA,yA,bA,xA,CA,OA,jA,DA,TA,IA,MA,WA,qA,BA,RA,_A,LA,GA,FA,$A,HA,JA,zA,YA,KA,VA,UA,QA,XA,ZA,aN,sN,tN,eN,oN,nN,rN,cN,lN,iN,pN,hN,fN,uN,vN,dN,EN,gN,kN,mN,SN,PN,wN,AN,NN,yN,bN,xN,CN,ON,jN,DN,TN,IN,MN,WN,qN,BN,RN,_N,LN,GN,FN,$N,HN,JN,zN,YN,KN,VN,UN,QN,XN,ZN,ay,sy,ty,ey,oy,ny,ry,cy,ly,iy,py,hy,fy,uy,vy,dy,Ey,gy,ky,my,Sy,Py,wy,Ay,Ny,yy,by,xy,Cy,Oy,jy,Dy,Ty,Iy,My,Wy,qy,By,Ry,_y,Ly,Gy,Fy,$y,Hy,Jy,zy,Yy,Ky,Vy,Uy,Qy,Xy,Zy,ab,sb,tb,eb,ob,nb,rb,cb,lb,ib,pb,hb,fb,ub,vb,db,Eb,gb,kb,mb,Sb,Pb,wb,Ab,Nb,yb,bb,xb,Cb,Ob,jb,Db,Tb,Ib,Mb,Wb,qb,Bb,Rb,_b,Lb,Gb,Fb,$b,Hb,Jb,zb,Yb,Kb,Vb,Ub,Qb,Xb,Zb,ax,sx,tx,ex,ox,nx,rx,cx,lx,ix,px,hx,fx,ux,vx,dx,Ex,gx,kx,mx,Sx,Px,wx,Ax,Nx,yx,bx,xx,Cx,Ox,jx,Dx,Tx,Ix,Mx,Wx;return{c(){s=f("p"),t=u("Learning frontend web-development can be pretty tough. Aside from the months you have to spend learning all of the basics of CSS, HTML, and JavaScript, you have to contend with a myriad of available frameworks, build tools, hosting, and on, and on. So it’s nice when people make libraries and tools to make that process easier."),e=v(),o=f("p"),n=f("a"),r=u("Svelte"),c=u(", and the framework built on top of it, "),l=f("a"),i=u("Sapper"),p=u(", along with "),h=f("a"),A=u("TailwindCss"),N=u(" and "),y=f("a"),b=u("mdsvex"),x=u(" make the task of creating a markdown blog much easier, though there are still plenty of ways it can go wrong. So, let’s walk through the process I went through to set this site up. Along the way I’ll write about why I made the decisions I did, the mistakes I made, and how I got around them."),C=v(),O=f("p"),j=u("With any luck we’ll both learn something."),D=v(),T=f("p"),I=f("strong"),M=u("But first…"),W=v(),q=f("p"),B=u("Before I start writing about this, let me just say that I know "),R=f("a"),_=u("SvelteKit"),L=u(" is on the way and will most likely make Sapper obsolete. Still, Rich Harris has said that the Svelte contributors are taking pains to make the transition from Sapper to SvelteKit pretty painless. I think this means that learning to use Sapper will transfer over to SvelteKit (as a matter of fact, I’ve tried some of the techniques I’ll go over using SvelteKit, so, with some minor changes in syntax, a lot of this should still apply.)"),G=v(),F=f("h2"),$=u("Getting Started"),H=v(),J=f("p"),z=u("Generally, getting started with a Svelte or Sapper app entails cloning one of their templates using "),Y=f("a"),K=u("Degit"),V=u(", which essentially clones a git repository and removes the "),U=f("code"),Q=u(".git"),X=u(" directory. We’re not going to copy the official "),Z=f("a"),aa=u("sveltejs/sapper template"),sa=u(" for this project, though. Why? Because the process of getting Tailwind, Sapper and mdsvex working together in a way that ensures all the features of each library play well together is a real pain in the butt and someone else has done a fantastic job of figuring it out."),ta=v(),ea=f("p"),oa=u("What we’re going to start with is Jacob Babich’s fantastic "),na=f("a"),ra=u("sapper-postcss-template"),ca=u(". There are other ways to integrate Tailwind with Svelte, some of them are really simple to set up, but they didn’t work with the way I’ve been using Tailwind (which I’ll leave for another discussion). For now, let’s just grab the template and get going."),la=v(),ia=f("pre"),pa=f("code"),ha=u("npx degit babichjacob/sapper-postcss-template"),fa=f("span"),ua=u("#main my-blog"),va=v(),da=f("p"),Ea=u("What this command does is grab whatever repo you provide as the first argument, in this case "),ga=f("code"),ka=u("babichjacob/sapper-postcss-template"),ma=u(", and copy it into whatever directory you provide as the second argument — "),Sa=f("code"),Pa=u("my-blog"),wa=u(" (or whatever you want to name the directory). If the template lives in a different branch than "),Aa=f("code"),Na=u("master"),ya=u(", as many Github repos have started to do this year, you’ll need to append the branch name with a hash — "),ba=f("code"),xa=u("#main"),Ca=u(" for this repo. If you wanted to you could also create a directory first, "),Oa=f("code"),ja=u("cd"),Da=u(" into the "),Ta=f("em"),Ia=u("empty"),Ma=u(" directory and use"),Wa=v(),qa=f("pre"),Ba=f("code"),Ra=u("npx degit babichjacob/sapper-postcss-template"),_a=f("span"),La=u("#main ."),Ga=v(),Fa=f("p"),$a=u("So, now we have a directory full of Jacob Babich’s template files. Let’s take a look at what’s in there."),Ha=v(),Ja=f("img"),Ya=v(),Ka=f("p"),Va=u("Mostly the template is the base Sapper template with some additional files that work to integrate Sapper with PostCss and Tailwind. Let’s spin this sucker up and see what’s what, shall we?"),Ua=v(),Qa=f("p"),Xa=u("First, we need to install all of the dependencies. "),Za=f("a"),as=u("pnpm"),ss=u(" is an alternative to npm that helps save disk space by keeping all of your dependencies on a "),ts=f("em"),es=u("content-addressable filesystem"),os=u(" on your hard drive. It then links to packages in that filesystem from the "),ns=f("code"),rs=u("node_modules"),cs=u(" directory in your project. This way, if you already have a dependency installed from another project, you don’t have to take up more disk space by installing it again. "),ls=f("a"),is=u("It’s pretty cool"),ps=u("!"),hs=v(),fs=f("p"),us=u("If you want to use pnpm and don’t have it installed yet, you can go ahead and install it with"),vs=v(),ds=f("pre"),Es=f("code"),gs=f("span"),ks=u("npm"),ms=u(" "),Ss=f("span"),Ps=u("install"),ws=u(" -g "),As=f("span"),Ns=u("pnpm"),ys=v(),bs=f("p"),xs=u("If you don’t want to use it, you can just follow along using "),Cs=f("code"),Os=u("npm"),js=u(" in place of "),Ds=f("code"),Ts=u("pnpm"),Is=u(" for any of the commands."),Ms=v(),Ws=f("p"),qs=u("Okay, back to the project. Install the dependencies."),Bs=v(),Rs=f("pre"),_s=f("code"),Ls=f("span"),Gs=u("pnpm"),Fs=u(" "),$s=f("span"),Hs=u("install"),Js=v(),zs=f("p"),Ys=u("Now let’s get the dev-server running."),Ks=v(),Vs=f("pre"),Us=f("code"),Qs=f("span"),Xs=u("pnpm"),Zs=u(" run dev"),at=v(),st=f("p"),tt=u("Which will do a bunch of fun stuff in your terminal."),et=v(),ot=f("img"),rt=v(),ct=f("p"),lt=u("If you open your browser to "),it=f("a"),pt=u("http://localhost:3000"),ht=u(" you’ll see the sapper template in all its glory"),ft=v(),ut=f("img"),dt=v(),Et=f("h2"),gt=u("Getting Comfortable"),kt=v(),mt=f("p"),St=u("Now that we have the base template up and running. Let’s take a look at some of the files that make it work. Open up "),Pt=f("code"),wt=u("svelte.config.js"),At=u(", located in the root of your project’s directory."),Nt=v(),yt=f("pre"),bt=f("code"),xt=f("span"),Ct=u("//svelte.config.js"),Ot=u("\n\n"),jt=f("span"),Dt=u("const"),Tt=u(" sveltePreprocess "),It=f("span"),Mt=u("="),Wt=u(" "),qt=f("span"),Bt=u("require"),Rt=f("span"),_t=u("("),Lt=f("span"),Gt=u('"svelte-preprocess"'),Ft=f("span"),$t=u(")"),Ht=f("span"),Jt=u(";"),zt=u("\n"),Yt=f("span"),Kt=u("const"),Vt=u(" postcss "),Ut=f("span"),Qt=u("="),Xt=u(" "),Zt=f("span"),ae=u("require"),se=f("span"),te=u("("),ee=f("span"),oe=u('"./postcss.config"'),ne=f("span"),re=u(")"),ce=f("span"),le=u(";"),ie=u("\n\n"),pe=f("span"),he=u("const"),fe=u(" "),ue=f("span"),ve=u("createPreprocessors"),de=u(" "),Ee=f("span"),ge=u("="),ke=u(" "),me=f("span"),Se=u("("),Pe=f("span"),we=f("span"),Ae=u("{"),Ne=u(" sourceMap "),ye=f("span"),be=u("}"),xe=f("span"),Ce=u(")"),Oe=u(" "),je=f("span"),De=u("=>"),Te=u(" "),Ie=f("span"),Me=u("["),We=u("\n\t"),qe=f("span"),Be=u("sveltePreprocess"),Re=f("span"),_e=u("("),Le=f("span"),Ge=u("{"),Fe=u("\n\t\tsourceMap"),$e=f("span"),He=u(","),Je=u("\n\t\tdefaults"),ze=f("span"),Ye=u(":"),Ke=u(" "),Ve=f("span"),Ue=u("{"),Qe=u("\n\t\t\tstyle"),Xe=f("span"),Ze=u(":"),ao=u(" "),so=f("span"),to=u('"postcss"'),eo=f("span"),oo=u(","),no=u("\n\t\t"),ro=f("span"),co=u("}"),lo=f("span"),io=u(","),po=u("\n\t\tpostcss"),ho=f("span"),fo=u(","),uo=u("\n\t"),vo=f("span"),Eo=u("}"),go=f("span"),ko=u(")"),mo=f("span"),So=u(","),Po=u("\n\t"),wo=f("span"),Ao=u("// You could have more preprocessors, like mdsvex"),No=u("\n"),yo=f("span"),bo=u("]"),xo=f("span"),Co=u(";"),Oo=u("\n\nmodule"),jo=f("span"),Do=u("."),To=u("exports "),Io=f("span"),Mo=u("="),Wo=u(" "),qo=f("span"),Bo=u("{"),Ro=u("\n\tcreatePreprocessors"),_o=f("span"),Lo=u(","),Go=u("\n\t"),Fo=f("span"),$o=u("// Options for `svelte-check` and the VS Code extension"),Ho=u("\n\tpreprocess"),Jo=f("span"),zo=u(":"),Yo=u(" "),Ko=f("span"),Vo=u("createPreprocessors"),Uo=f("span"),Qo=u("("),Xo=f("span"),Zo=u("{"),an=u(" sourceMap"),sn=f("span"),tn=u(":"),en=u(" "),on=f("span"),nn=u("true"),rn=u(" "),cn=f("span"),ln=u("}"),pn=f("span"),hn=u(")"),fn=f("span"),un=u(","),vn=u("\n"),dn=f("span"),En=u("}"),gn=f("span"),kn=u(";"),mn=v(),Sn=f("p"),Pn=u("Normally, this stuff would be in "),wn=f("code"),An=u("rollup.config.js"),Nn=u(", but it’s been separated into its own module here. This is where we’ll add mdsvex later. For now, just know that this is where we’ll be setting up any preprocessors. This file requires "),yn=f("code"),bn=u("postcss.config.js"),xn=u(", so let’s take a look at that file next."),Cn=v(),On=f("pre"),jn=f("code"),Dn=f("span"),Tn=u("//postcss.config.js"),In=u("\n\n"),Mn=f("span"),Wn=u("const"),qn=u(" cssnano "),Bn=f("span"),Rn=u("="),_n=u(" "),Ln=f("span"),Gn=u("require"),Fn=f("span"),$n=u("("),Hn=f("span"),Jn=u('"cssnano"'),zn=f("span"),Yn=u(")"),Kn=f("span"),Vn=u(";"),Un=u("\n"),Qn=f("span"),Xn=u("const"),Zn=u(" postcssImport "),ar=f("span"),sr=u("="),tr=u(" "),er=f("span"),or=u("require"),nr=f("span"),rr=u("("),cr=f("span"),lr=u('"postcss-import"'),ir=f("span"),pr=u(")"),hr=f("span"),fr=u(";"),ur=u("\n"),vr=f("span"),dr=u("const"),Er=u(" tailwindcss "),gr=f("span"),kr=u("="),mr=u(" "),Sr=f("span"),Pr=u("require"),wr=f("span"),Ar=u("("),Nr=f("span"),yr=u('"tailwindcss"'),br=f("span"),xr=u(")"),Cr=f("span"),Or=u(";"),jr=u("\n"),Dr=f("span"),Tr=u("const"),Ir=u(" tailwindcssConfig "),Mr=f("span"),Wr=u("="),qr=u(" "),Br=f("span"),Rr=u("require"),_r=f("span"),Lr=u("("),Gr=f("span"),Fr=u('"./tailwind.config"'),$r=f("span"),Hr=u(")"),Jr=f("span"),zr=u(";"),Yr=u("\n\n"),Kr=f("span"),Vr=u("const"),Ur=u(" mode "),Qr=f("span"),Xr=u("="),Zr=u(" "),ac=f("span"),sc=u('"production"'),tc=f("span"),ec=u(";"),oc=u("\n"),nc=f("span"),rc=u("const"),cc=u(" dev "),lc=f("span"),ic=u("="),pc=u(" mode "),hc=f("span"),fc=u("==="),uc=u(" "),vc=f("span"),dc=u('"development"'),Ec=f("span"),gc=u(";"),kc=u("\n\nmodule"),mc=f("span"),Sc=u("."),Pc=u("exports "),wc=f("span"),Ac=u("="),Nc=u(" "),yc=f("span"),bc=u("{"),xc=u("\n\tplugins"),Cc=f("span"),Oc=u(":"),jc=u(" "),Dc=f("span"),Tc=u("["),Ic=u("\n\t\tpostcssImport"),Mc=f("span"),Wc=u(","),qc=u("\n\n\t\t"),Bc=f("span"),Rc=u("tailwindcss"),_c=f("span"),Lc=u("("),Gc=u("tailwindcssConfig"),Fc=f("span"),$c=u(")"),Hc=f("span"),Jc=u(","),zc=u("\n\n\t\t"),Yc=f("span"),Kc=u("// Plugins for polyfills and the like (such as postcss-preset-env) should generally go here"),Vc=u("\n\t\t"),Uc=f("span"),Qc=u("// but a few have to run *before* Tailwind"),Xc=u("\n\n\t\t"),Zc=f("span"),al=u("!"),sl=u("dev "),tl=f("span"),el=u("&&"),ol=u(" "),nl=f("span"),rl=u("cssnano"),cl=f("span"),ll=u("("),il=f("span"),pl=u("{"),hl=u("\n\t\t\tpreset"),fl=f("span"),ul=u(":"),vl=u(" "),dl=f("span"),El=u("["),gl=u("\n\t\t\t\t"),kl=f("span"),ml=u('"default"'),Sl=f("span"),Pl=u(","),wl=u("\n\t\t\t\t"),Al=f("span"),Nl=u("{"),yl=u(" discardComments"),bl=f("span"),xl=u(":"),Cl=u(" "),Ol=f("span"),jl=u("{"),Dl=u(" removeAll"),Tl=f("span"),Il=u(":"),Ml=u(" "),Wl=f("span"),ql=u("true"),Bl=u(" "),Rl=f("span"),_l=u("}"),Ll=u(" "),Gl=f("span"),Fl=u("}"),$l=f("span"),Hl=u(","),Jl=u("\n\t\t\t"),zl=f("span"),Yl=u("]"),Kl=f("span"),Vl=u(","),Ul=u("\n\t\t"),Ql=f("span"),Xl=u("}"),Zl=f("span"),ai=u(")"),si=f("span"),ti=u(","),ei=u("\n\t"),oi=f("span"),ni=u("]"),ri=f("span"),ci=u("."),li=f("span"),ii=u("filter"),pi=f("span"),hi=u("("),fi=u("Boolean"),ui=f("span"),vi=u(")"),di=f("span"),Ei=u(","),gi=u("\n"),ki=f("span"),mi=u("}"),Si=f("span"),Pi=u(";"),wi=v(),Ai=f("p"),Ni=u("This is where we start getting into the nitty-gritty of making PostCss and Tailwind work with Svelte. If you have PostCss plugins to add, this is the place to do that. Let’s look at the other important config file that this file imports, "),yi=f("code"),bi=u("tailwind.config.js"),xi=v(),Ci=f("pre"),Oi=f("code"),ji=f("span"),Di=u("// tailwind.config.js"),Ti=u("\n\n"),Ii=f("span"),Mi=u("const"),Wi=u(" "),qi=f("span"),Bi=u("{"),Ri=u(" tailwindExtractor "),_i=f("span"),Li=u("}"),Gi=u(" "),Fi=f("span"),$i=u("="),Hi=u(" "),Ji=f("span"),zi=u("require"),Yi=f("span"),Ki=u("("),Vi=f("span"),Ui=u('"tailwindcss/lib/lib/purgeUnusedStyles"'),Qi=f("span"),Xi=u(")"),Zi=f("span"),ap=u(";"),sp=u("\n\nmodule"),tp=f("span"),ep=u("."),op=u("exports "),np=f("span"),rp=u("="),cp=u(" "),lp=f("span"),ip=u("{"),pp=u("\n\tpurge"),hp=f("span"),fp=u(":"),up=u(" "),vp=f("span"),dp=u("{"),Ep=u("\n\t\tcontent"),gp=f("span"),kp=u(":"),mp=u(" "),Sp=f("span"),Pp=u("["),wp=u("\n\t\t\t"),Ap=f("span"),Np=u('"./src/**/*.html"'),yp=f("span"),bp=u(","),xp=u("\n\t\t\t"),Cp=f("span"),Op=u('"./src/**/*.svelte"'),jp=f("span"),Dp=u(","),Tp=u("\n\t\t"),Ip=f("span"),Mp=u("]"),Wp=f("span"),qp=u(","),Bp=u("\n\t\toptions"),Rp=f("span"),_p=u(":"),Lp=u(" "),Gp=f("span"),Fp=u("{"),$p=u("\n\t\t\t"),Hp=f("span"),Jp=u("defaultExtractor"),zp=f("span"),Yp=u(":"),Kp=u(" "),Vp=f("span"),Up=u("("),Qp=f("span"),Xp=u("content"),Zp=f("span"),ah=u(")"),sh=u(" "),th=f("span"),eh=u("=>"),oh=u(" "),nh=f("span"),rh=u("["),ch=u("\n\t\t\t\t"),lh=f("span"),ih=u("// This is an internal Tailwind function that we're not supposed to be allowed to use"),ph=u("\n\t\t\t\t"),hh=f("span"),fh=u("// So if this stops working, please open an issue at"),uh=u("\n\t\t\t\t"),vh=f("span"),dh=u("// https://github.com/babichjacob/sapper-postcss-template/issues"),Eh=u("\n\t\t\t\t"),gh=f("span"),kh=u("// rather than bothering Tailwind Labs about it"),mh=u("\n\t\t\t\t"),Sh=f("span"),Ph=u("..."),wh=f("span"),Ah=u("tailwindExtractor"),Nh=f("span"),yh=u("("),bh=u("content"),xh=f("span"),Ch=u(")"),Oh=f("span"),jh=u(","),Dh=u("\n\t\t\t\t"),Th=f("span"),Ih=u("// Match Svelte class: directives (https://github.com/tailwindlabs/tailwindcss/discussions/1731)"),Mh=u("\n\t\t\t\t"),Wh=f("span"),qh=u("..."),Bh=f("span"),Rh=u("["),_h=f("span"),Lh=u("..."),Gh=u("content"),Fh=f("span"),$h=u("."),Hh=f("span"),Jh=u("matchAll"),zh=f("span"),Yh=u("("),Kh=f("span"),Vh=f("span"),Uh=u("/"),Qh=f("span"),Xh=u("(?:class:)*([\\w\\d-/:%.]+)"),Zh=f("span"),af=u("/"),sf=f("span"),tf=u("gm"),ef=f("span"),of=u(")"),nf=f("span"),rf=u("]"),cf=f("span"),lf=u("."),pf=f("span"),hf=u("map"),ff=f("span"),uf=u("("),vf=f("span"),df=u("("),Ef=f("span"),gf=f("span"),kf=u("["),mf=u("_match"),Sf=f("span"),Pf=u(","),wf=u(" group"),Af=f("span"),Nf=u(","),yf=u(" "),bf=f("span"),xf=u("..."),Cf=u("_rest"),Of=f("span"),jf=u("]"),Df=f("span"),Tf=u(")"),If=u(" "),Mf=f("span"),Wf=u("=>"),qf=u(" group"),Bf=f("span"),Rf=u(")"),_f=f("span"),Lf=u(","),Gf=u("\n\t\t\t"),Ff=f("span"),$f=u("]"),Hf=f("span"),Jf=u(","),zf=u("\n\t\t\tkeyframes"),Yf=f("span"),Kf=u(":"),Vf=u(" "),Uf=f("span"),Qf=u("true"),Xf=f("span"),Zf=u(","),au=u("\n\t\t"),su=f("span"),tu=u("}"),eu=f("span"),ou=u(","),nu=u("\n\t"),ru=f("span"),cu=u("}"),lu=f("span"),iu=u(","),pu=u("\n\ttheme"),hu=f("span"),fu=u(":"),uu=u(" "),vu=f("span"),du=u("{"),Eu=u("\n\t\textend"),gu=f("span"),ku=u(":"),mu=u(" "),Su=f("span"),Pu=u("{"),wu=f("span"),Au=u("}"),Nu=f("span"),yu=u(","),bu=u("\n\t"),xu=f("span"),Cu=u("}"),Ou=f("span"),ju=u(","),Du=u("\n\tvariants"),Tu=f("span"),Iu=u(":"),Mu=u(" "),Wu=f("span"),qu=u("{"),Bu=u("\n\t\textend"),Ru=f("span"),_u=u(":"),Lu=u(" "),Gu=f("span"),Fu=u("{"),$u=f("span"),Hu=u("}"),Ju=f("span"),zu=u(","),Yu=u("\n\t"),Ku=f("span"),Vu=u("}"),Uu=f("span"),Qu=u(","),Xu=u("\n\tplugins"),Zu=f("span"),av=u(":"),sv=u(" "),tv=f("span"),ev=u("["),ov=f("span"),nv=u("]"),rv=f("span"),cv=u(",");lv=u("\n"),iv=f("span"),pv=u("}"),hv=f("span"),fv=u(";"),uv=v(),vv=f("p"),dv=u("For the most part, this file is exactly the same as the default "),Ev=f("code"),gv=u("tailwind.config.js"),kv=u(" that comes when you initialize a new Tailwind project, with one big exception: "),mv=f("code"),Sv=u("defaultExtractor"),Pv=u(". This is a custom function for matching against Svelte "),wv=f("a"),Av=u("class"),Nv=u(" directives. This function is part of the reason this template is so awesome. Don’t mess with that function if you don’t know what you’re doing! Otherwise, this is where you’ll customize your tailwind configuration."),yv=v(),bv=f("p"),xv=u("Okay, so those are the config files. There are two last files of note that we should take a look at. The first is "),Cv=f("code"),Ov=u("src/global.pcss"),jv=u(", which is the file that imports all of Tailwind’s components and compiled css:"),Dv=v(),Tv=f("pre"),Iv=f("code"),Mv=f("span"),Wv=f("span"),qv=u("@import"),Bv=u(" "),Rv=f("span"),_v=u('"tailwindcss/base"'),Lv=f("span"),Gv=u(";"),Fv=u("\n"),$v=f("span"),Hv=u('/* @import "./base.pcss"; */'),Jv=u("\n\n"),zv=f("span"),Yv=f("span"),Kv=u("@import"),Vv=u(" "),Uv=f("span"),Qv=u('"tailwindcss/components"'),Xv=f("span"),Zv=u(";"),ad=u("\n"),sd=f("span"),td=u('/* @import "./components.pcss"; */'),ed=u("\n\n"),od=f("span"),nd=f("span"),rd=u("@import"),cd=u(" "),ld=f("span"),id=u('"tailwindcss/utilities"'),pd=f("span"),hd=u(";"),fd=u("\n"),ud=f("span"),vd=u('/* @import "./utilities.pcss"; */'),dd=v(),Ed=f("p"),gd=u("You can add global styles to this file by adding:"),kd=v(),md=f("pre"),Sd=f("code"),Pd=f("span"),wd=f("span"),Ad=u("@layer"),Nd=u(" base"),yd=u(" "),bd=f("span"),xd=u("{"),Cd=u("\n    // your expert-level css here\n"),Od=f("span"),jd=u("}"),Dd=v(),Td=f("p"),Id=u("Lastly, let’s look at the file that gets compiled by this fantastic Rube Goldberg Machine of config files, "),Md=f("code"),Wd=u("static/global.css"),qd=u(". I’m not going to show you the code here because the file is more than 3MB. This is basically everything that makes Tailwind work while you’re in development. When you eventually build for production this will be whittled down to some small number of kilobytes. What you should remember here is "),Bd=f("strong"),Rd=u("don’t edit this file or add your own styles to it"),_d=u(". It will all be overwritten."),Ld=v(),Gd=f("p"),Fd=u("Okay, enough looking at all of these config files. Let’s actually make a blog!"),$d=v(),Hd=f("h2"),Jd=u("Adding mdsvex"),zd=v(),Yd=f("p"),Kd=f("a"),Vd=u("mdsvex"),Ud=u(" is a project by "),Qd=f("a"),Xd=u("pngwn"),Zd=u(" that aims to introduce some of the functionality of "),aE=f("a"),sE=u("mdx"),tE=u(" to Svelte. Basically, mdsvex, allows you to write Svelte template code and some js in your markdown files. This is super-ideal for a blog made with Svelte/Sapper because you never really know when you’ll want to execute some real code in your markdown posts."),eE=v(),oE=f("p"),nE=u("Let’s install it and start playing around, shall we?"),rE=v(),cE=f("pre"),lE=f("code"),iE=f("span"),pE=u("pnpm"),hE=u(" "),fE=f("span"),uE=u("install"),vE=u(" mdsvex -D"),dE=v(),EE=f("p"),gE=u("We’re installing "),kE=f("code"),mE=u("mdsvex"),SE=u(" as a dev dependency here because we want this blog to be served as a static site. Later, when we export the static site from Sapper or use Netlify’s automated build process, those dev dependencies are what will be used in the build process."),PE=v(),wE=f("p"),AE=u("Once that’s installed, we need to add it to our preprocessors over in "),NE=f("code"),yE=u("svelte/config.js"),bE=u(" open that up again and we’ll import "),xE=f("code"),CE=u("mdsvex"),OE=u(":"),jE=v(),DE=f("pre"),TE=f("code"),IE=u('//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\n'),ME=f("span"),WE=f("span"),qE=u("+"),BE=u(" const { mdsvex } = require('mdsvex');"),RE=u("\n\nconst createPreprocessors = ({ sourceMap }) => [\n"),_E=f("span"),LE=f("span"),GE=u("+"),FE=u("   mdsvex({}),"),$E=u('\n\tsveltePreprocess({\n\t\tsourceMap,\n\t\tdefaults: {\n\t\t\tstyle: "postcss",\n\t\t},\n\t\tpostcss,\n\t}),\n\t// You could have more preprocessors, like mdsvex\n];\n\nmodule.exports = {\n\tcreatePreprocessors,\n\t// Options for `svelte-check` and the VS Code extension\n\tpreprocess: createPreprocessors({ sourceMap: true }),\n};'),HE=v(),JE=f("p"),zE=u("It’s important to add "),YE=f("code"),KE=u("mdsvex({})"),VE=v(),UE=f("em"),QE=u("above"),XE=v(),ZE=f("code"),ag=u("sveltePreprocess"),sg=u(" here. My first mistake when building this blog was to place "),tg=f("code"),eg=u("mdsvex({})"),og=u(" right after the comment "),ng=f("code"),rg=u("//you could have more preprocessors, like mdsvex"),cg=u(". I’m guessing this didn’t work because "),lg=f("code"),ig=u("sveltePreprocess"),pg=u(" works on "),hg=f("code"),fg=u(".svelte"),ug=u(" files, while mdsvex actually builds "),vg=f("code"),dg=u(".svelte"),Eg=u(" files from markdown, metadata, and abstract syntax trees through remark. Basically, if you try to hand "),gg=f("code"),kg=u("sveltePreprocess"),mg=u(" a bunch of markdown it will tell you, cryptically, that it can’t do what you want."),Sg=v(),Pg=f("p"),wg=u("mdsvex, by default, works with the "),Ag=f("code"),Ng=u(".svx"),yg=u(" file extension. We’ll get to writing actual "),bg=f("code"),xg=u(".svx"),Cg=u(" files in a bit. First, let’s look at a feature of mdsvex: layouts."),Og=v(),jg=f("p"),Dg=u("First, add the following to "),Tg=f("code"),Ig=u("svelte.config.js"),Mg=u(":"),Wg=v(),qg=f("pre"),Bg=f("code"),Rg=u('//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\nconst { mdsvex } = require(\'mdsvex\');\n'),_g=f("span"),Lg=f("span"),Gg=u("+"),Fg=u(" const path = require('path');"),$g=u("\nconst createPreprocessors = ({ sourceMap }) => [\n"),Hg=f("span"),Jg=f("span"),zg=u("  mdsvex({\n"),Yg=f("span"),Kg=f("span"),Vg=u("+"),Ug=u("   layout: {\n"),Qg=f("span"),Xg=u("+"),Zg=u("       blog: path.resolve(__dirname, 'src/layouts/blog.svelte'),\n"),ak=f("span"),sk=u("+"),tk=u("       default: path.resolve(__dirname, 'src/layouts/default.svelte'),\n"),ek=f("span"),ok=f("span"),nk=u("   }"),rk=u("\n..."),ck=v(),lk=f("p"),ik=u("We’re specifying two layout files here, one for the blog posts, and one as our default layout. We could just specify the single layout for blog posts if we wanted, but I wanted to highlight that we can specify multiple layouts for our "),pk=f("code"),hk=u(".svx"),fk=u(" files. It’s important to note here that any layout files you specify in this config "),uk=f("em"),vk=u("need to exist at the location you specify"),dk=u(" or you’ll get an ugly error."),Ek=v(),gk=f("p"),kk=u("Now, let’s create the layout files in the directory we specified. Create a directory at "),mk=f("code"),Sk=u("src/layouts"),Pk=u(". Then create two files: "),wk=f("code"),Ak=u("src/layouts/blog.svelte"),Nk=u(" and "),yk=f("code"),bk=u("src/layouts/default.svelte"),xk=u("."),Ck=v(),Ok=f("p"),jk=u("Then, we’ll just put the same code in both for now so we don’t run into any compile-time errors."),Dk=v(),Tk=f("pre"),Ik=f("code"),Mk=f("span"),Wk=f("span"),qk=f("span"),Bk=u("<"),Rk=u("script"),_k=f("span"),Lk=u(">"),Gk=f("span"),Fk=f("span"),$k=f("span"),Hk=u("//script stuff will go here"),Jk=u("\n"),zk=f("span"),Yk=f("span"),Kk=f("span"),Vk=u("</"),Uk=u("script"),Qk=f("span"),Xk=u(">"),Zk=u("\n\n"),am=f("span"),sm=f("span"),tm=f("span"),em=u("<"),om=u("slot"),nm=f("span"),rm=u(">"),cm=u("\n    "),lm=f("span"),im=u("\x3c!-- your mdsvex content will load here --\x3e"),pm=u("\n"),hm=f("span"),fm=f("span"),um=f("span"),vm=u("</"),dm=u("slot"),Em=f("span"),gm=u(">"),km=u("\n\n"),mm=f("span"),Sm=f("span"),Pm=f("span"),wm=u("<"),Am=u("style"),Nm=f("span"),ym=u(">"),bm=f("span"),xm=f("span"),Cm=f("span"),Om=u("/* style stuff will go here */"),jm=u("\n"),Dm=f("span"),Tm=f("span"),Im=f("span"),Mm=u("</"),Wm=u("style"),qm=f("span"),Bm=u(">"),Rm=v(),_m=f("p"),Lm=u("Okay, we have layout files. The next step is to add our "),Gm=f("code"),Fm=u("svx"),$m=u(" files to make sure everything works the way we expect it to."),Hm=v(),Jm=f("p"),zm=u("In your "),Ym=f("code"),Km=u("src/routes"),Vm=u(" directory, create a subdirectory named "),Um=f("code"),Qm=u("mdsvex"),Xm=u(". In that directory create a file called "),Zm=f("code"),aS=u("index.svx"),sS=u(" and put the following in that file:"),tS=v(),eS=f("pre"),oS=f("code"),nS=f("span"),rS=u("---"),cS=u("\nlayout: blog\ntitle: mdsvex test\ngreeting: Hello, Sapper, Tailwind, and mdsvex!\n\n"),lS=f("span"),iS=u("---"),pS=u("\n\n"),hS=f("span"),fS=f("span"),uS=u("##"),vS=u(" {title}"),dS=u("\n\n"),ES=f("span"),gS=f("span"),kS=u("##"),mS=u(" Hey! This is my mdsvex component!"),SS=u("\n\nNow this is some content, just because we need to have some content here."),PS=v(),wS=f("p"),AS=u("mdsvex allows us to use "),NS=f("code"),yS=u(".svx"),bS=u(" files in place of "),xS=f("code"),CS=u(".svelte"),OS=u(" files in our routes and components. So, what we’re doing here is setting up a test route so we can make sure everything’s wired up correctly. Because Sapper uses file-based routing, and once we’re finished with the next step, this file will be available at "),jS=f("a"),DS=u("http://localhost:3000/mdsvex"),TS=u("."),IS=v(),MS=f("p"),WS=u("Okay, there are two small things that we need to take care of to make sure this will run. First, we need to edit "),qS=f("code"),BS=u("package.json"),RS=u(" and modify our "),_S=f("code"),LS=u("dev"),GS=u(" script with an "),FS=f("code"),$S=u("--ext"),HS=u(" argument, telling the sapper command that we want it to look for both "),JS=f("code"),zS=u(".svx"),YS=u(" and "),KS=f("code"),VS=u(".svelte"),US=u(" files. Just replace the entire "),QS=f("code"),XS=u('"dev": "sapper dev",'),ZS=u(" line with:"),aP=v(),sP=f("pre"),tP=f("code"),eP=f("span"),oP=u('"dev"'),nP=f("span"),rP=u(":"),cP=u(" "),lP=f("span"),iP=u("\"sapper dev --ext '.svelte .svx'\""),pP=f("span"),hP=u(","),fP=v(),uP=f("p"),vP=u("We also need to tell "),dP=f("code"),EP=u("rollup-plugin-svelte"),gP=u(" to look for those extensions. Sapper has configurations for both the client and the server, so we need to make sure the code is in both configuration objects. Open up "),kP=f("code"),mP=u("rollup.config.json"),SP=u(" and add "),PP=f("code"),wP=u("extensions: ['.svx', '.svelte'],"),AP=u(" to the svelte plugin config of "),NP=f("strong"),yP=u("both"),bP=u(" the "),xP=f("code"),CP=u("client"),OP=u(" and "),jP=f("code"),DP=u("server"),TP=u(" sections of that config file:"),IP=v(),MP=f("pre"),WP=f("code"),qP=u("client"),BP=f("span"),RP=u(":"),_P=u(" "),LP=f("span"),GP=u("{"),FP=u("\n    plugins"),$P=f("span"),HP=u(":"),JP=u(" "),zP=f("span"),YP=u("["),KP=u("\n\t\t\t"),VP=f("span"),UP=u("// blahblahblah config stuff"),QP=u("\n\t\t\t"),XP=f("span"),ZP=u("svelte"),aw=f("span"),sw=u("("),tw=f("span"),ew=u("{"),ow=u("\n                extensions"),nw=f("span"),rw=u(":"),cw=u(" "),lw=f("span"),iw=u("["),pw=f("span"),hw=u("'.svx'"),fw=f("span"),uw=u(","),vw=u(" "),dw=f("span"),Ew=u("'.svelte'"),gw=f("span"),kw=u("]"),mw=f("span"),Sw=u(","),Pw=u("\n            "),ww=f("span"),Aw=u("// blahblahblah more config stuff"),Nw=u("\nserver"),yw=f("span"),bw=u(":"),xw=u(" "),Cw=f("span"),Ow=u("{"),jw=u("\n    plugins"),Dw=f("span"),Tw=u(":"),Iw=u(" "),Mw=f("span"),Ww=u("["),qw=u("\n\t\t\t"),Bw=f("span"),Rw=u("// blahblahblah config stuff"),_w=u("\n\t\t\t"),Lw=f("span"),Gw=u("svelte"),Fw=f("span"),$w=u("("),Hw=f("span"),Jw=u("{"),zw=u("\n                extensions"),Yw=f("span"),Kw=u(":"),Vw=u(" "),Uw=f("span"),Qw=u("["),Xw=f("span"),Zw=u("'.svx'"),aA=f("span"),sA=u(","),tA=u(" "),eA=f("span"),oA=u("'.svelte'"),nA=f("span"),rA=u("]"),cA=f("span"),lA=u(","),iA=u("\n            "),pA=f("span"),hA=u("// blahblahblah more config stuff"),fA=v(),uA=f("p"),vA=u("Finally! You should be able to run the whole thing with "),dA=f("code"),EA=u("pnpm run dev"),gA=u("."),kA=v(),mA=f("p"),SA=u("Do that and navigate to "),PA=f("a"),wA=u("http://localhost/mdsvex"),AA=u(" to see the glory of what you’ve been working so hard on."),NA=v(),yA=f("img"),xA=v(),CA=f("p"),OA=u("Okay, so it’s ugly. But, hey, it works! Let’s add some stuff to the "),jA=f("code"),DA=u("blog.svelte"),TA=u(" layout file so we can check out how variables in the "),IA=f("code"),MA=u(".svx"),WA=u(" frontmatter can be used by the "),qA=f("code"),BA=u(".svelte"),RA=u(" file. Just replace everything in blog.svelte with the following:"),_A=v(),LA=f("pre"),GA=f("code"),FA=f("span"),$A=f("span"),HA=f("span"),JA=u("<"),zA=u("script"),YA=f("span"),KA=u(">"),VA=f("span"),UA=f("span"),QA=f("span"),XA=u("export"),ZA=u(" "),aN=f("span"),sN=u("let"),tN=u(" greeting"),eN=f("span"),oN=u(";"),nN=u("\n"),rN=f("span"),cN=f("span"),lN=f("span"),iN=u("</"),pN=u("script"),hN=f("span"),fN=u(">"),uN=u("\n\n"),vN=f("span"),dN=f("span"),EN=f("span"),gN=u("<"),kN=u("main"),mN=f("span"),SN=u(">"),PN=u("\n    "),wN=f("span"),AN=f("span"),NN=f("span"),yN=u("<"),bN=u("h1"),xN=f("span"),CN=u(">"),ON=f("span"),jN=f("span"),DN=u("{"),TN=u("greeting"),IN=f("span"),MN=u("}"),WN=f("span"),qN=f("span"),BN=f("span"),RN=u("</"),_N=u("h1"),LN=f("span"),GN=u(">"),FN=u("\n    "),$N=f("span"),HN=f("span"),JN=f("span"),zN=u("<"),YN=u("slot"),KN=f("span"),VN=u(">"),UN=f("span"),QN=f("span"),XN=f("span"),ZN=u("</"),ay=u("slot"),sy=f("span"),ty=u(">"),ey=u("\n"),oy=f("span"),ny=f("span"),ry=f("span"),cy=u("</"),ly=u("main"),iy=f("span"),py=u(">"),hy=u("\n\n"),fy=f("span"),uy=f("span"),vy=f("span"),dy=u("<"),Ey=u("style"),gy=f("span"),ky=u(">"),my=f("span"),Sy=f("span"),Py=f("span"),wy=u("main"),Ay=u(" "),Ny=f("span"),yy=u("{"),by=u("\n\t\t"),xy=f("span"),Cy=u("width"),Oy=f("span"),jy=u(":"),Dy=u(" 50%"),Ty=f("span"),Iy=u(";"),My=u("\n\t\t"),Wy=f("span"),qy=u("margin"),By=f("span"),Ry=u(":"),_y=u(" 3rem auto"),Ly=f("span"),Gy=u(";"),Fy=u("\n\t"),$y=f("span"),Hy=u("}"),Jy=u("\n\t"),zy=f("span"),Yy=u(":global(h1)"),Ky=u(" "),Vy=f("span"),Uy=u("{"),Qy=u("\n\t\t"),Xy=f("span"),Zy=f("span"),ab=u("@apply"),sb=u(" text-3xl font-black text-red-500"),tb=f("span"),eb=u(";"),ob=u("\n\t"),nb=f("span"),rb=u("}"),cb=u("\n\t"),lb=f("span"),ib=u(":global(h2)"),pb=u(" "),hb=f("span"),fb=u("{"),ub=u("\n\t\t"),vb=f("span"),db=f("span"),Eb=u("@apply"),gb=u(" text-2xl font-bold mt-12"),kb=f("span"),mb=u(";"),Sb=u("\n\t"),Pb=f("span"),wb=u("}"),Ab=u("\n\t"),Nb=f("span"),yb=u(":global(h3)"),bb=u(" "),xb=f("span"),Cb=u("{"),Ob=u("\n\t\t"),jb=f("span"),Db=f("span"),Tb=u("@apply"),Ib=u(" text-xl font-bold mt-8"),Mb=f("span"),Wb=u(";"),qb=u("\n\t"),Bb=f("span"),Rb=u("}"),_b=u("\n\t"),Lb=f("span"),Gb=u(":global(p)"),Fb=u(" "),$b=f("span"),Hb=u("{"),Jb=u("\n\t\t"),zb=f("span"),Yb=f("span"),Kb=u("@apply"),Vb=u(" mt-4"),Ub=f("span"),Qb=u(";"),Xb=u("\n\t"),Zb=f("span"),ax=u("}"),sx=u("\n"),tx=f("span"),ex=f("span"),ox=f("span"),nx=u("</"),rx=u("style"),cx=f("span"),lx=u(">"),ix=v(),px=f("img"),fx=v(),ux=f("p"),vx=u("Okay, now you can see that "),dx=f("code"),Ex=u("greeting"),gx=u(", defined in the frontmatter of "),kx=f("code"),mx=u("index.svx"),Sx=u(" can be used as a prop in the "),Px=f("code"),wx=u("blog.svelte"),Ax=u(" layout file. We can also use the frontmatter properties in the "),Nx=f("code"),yx=u(".svx"),bx=u(" file itself. We can also use Tailwind’s "),xx=f("code"),Cx=u("@apply"),Ox=u(" syntax to, well, apply Tailwind class styles to the markdown content that’s added to our layout component. There’s a "),jx=f("em"),Dx=u("lot"),Tx=u(" more you can do with mdsvex, and we’ll get into some of it in the next part."),Ix=v(),Mx=f("p"),Wx=u("That’s enough for one tutorial. We’ll learn how to set up what we’ve got so that we can create a blog with all of these cool libraries in the next part."),this.h()},l(a){s=d(a,"P",{});var f=E(s);t=g(f,"Learning frontend web-development can be pretty tough. Aside from the months you have to spend learning all of the basics of CSS, HTML, and JavaScript, you have to contend with a myriad of available frameworks, build tools, hosting, and on, and on. So it’s nice when people make libraries and tools to make that process easier."),f.forEach(k),e=m(a),o=d(a,"P",{});var u=E(o);n=d(u,"A",{href:!0,rel:!0});var v=E(n);r=g(v,"Svelte"),v.forEach(k),c=g(u,", and the framework built on top of it, "),l=d(u,"A",{href:!0,rel:!0});var S=E(l);i=g(S,"Sapper"),S.forEach(k),p=g(u,", along with "),h=d(u,"A",{href:!0,rel:!0});var P=E(h);A=g(P,"TailwindCss"),P.forEach(k),N=g(u," and "),y=d(u,"A",{href:!0,rel:!0});var w=E(y);b=g(w,"mdsvex"),w.forEach(k),x=g(u," make the task of creating a markdown blog much easier, though there are still plenty of ways it can go wrong. So, let’s walk through the process I went through to set this site up. Along the way I’ll write about why I made the decisions I did, the mistakes I made, and how I got around them."),u.forEach(k),C=m(a),O=d(a,"P",{});var za=E(O);j=g(za,"With any luck we’ll both learn something."),za.forEach(k),D=m(a),T=d(a,"P",{});var nt=E(T);I=d(nt,"STRONG",{});var vt=E(I);M=g(vt,"But first…"),vt.forEach(k),nt.forEach(k),W=m(a),q=d(a,"P",{});var bA=E(q);B=g(bA,"Before I start writing about this, let me just say that I know "),R=d(bA,"A",{href:!0,rel:!0});var hx=E(R);_=g(hx,"SvelteKit"),hx.forEach(k),L=g(bA," is on the way and will most likely make Sapper obsolete. Still, Rich Harris has said that the Svelte contributors are taking pains to make the transition from Sapper to SvelteKit pretty painless. I think this means that learning to use Sapper will transfer over to SvelteKit (as a matter of fact, I’ve tried some of the techniques I’ll go over using SvelteKit, so, with some minor changes in syntax, a lot of this should still apply.)"),bA.forEach(k),G=m(a),F=d(a,"H2",{id:!0});var qx=E(F);$=g(qx,"Getting Started"),qx.forEach(k),H=m(a),J=d(a,"P",{});var Bx=E(J);z=g(Bx,"Generally, getting started with a Svelte or Sapper app entails cloning one of their templates using "),Y=d(Bx,"A",{href:!0,rel:!0});var Rx=E(Y);K=g(Rx,"Degit"),Rx.forEach(k),V=g(Bx,", which essentially clones a git repository and removes the "),U=d(Bx,"CODE",{});var _x=E(U);Q=g(_x,".git"),_x.forEach(k),X=g(Bx," directory. We’re not going to copy the official "),Z=d(Bx,"A",{href:!0,rel:!0});var Lx=E(Z);aa=g(Lx,"sveltejs/sapper template"),Lx.forEach(k),sa=g(Bx," for this project, though. Why? Because the process of getting Tailwind, Sapper and mdsvex working together in a way that ensures all the features of each library play well together is a real pain in the butt and someone else has done a fantastic job of figuring it out."),Bx.forEach(k),ta=m(a),ea=d(a,"P",{});var Gx=E(ea);oa=g(Gx,"What we’re going to start with is Jacob Babich’s fantastic "),na=d(Gx,"A",{href:!0,rel:!0});var Fx=E(na);ra=g(Fx,"sapper-postcss-template"),Fx.forEach(k),ca=g(Gx,". There are other ways to integrate Tailwind with Svelte, some of them are really simple to set up, but they didn’t work with the way I’ve been using Tailwind (which I’ll leave for another discussion). For now, let’s just grab the template and get going."),Gx.forEach(k),la=m(a),ia=d(a,"PRE",{class:!0});var $x=E(ia);pa=d($x,"CODE",{class:!0});var Hx=E(pa);ha=g(Hx,"npx degit babichjacob/sapper-postcss-template"),fa=d(Hx,"SPAN",{class:!0});var Jx=E(fa);ua=g(Jx,"#main my-blog"),Jx.forEach(k),Hx.forEach(k),$x.forEach(k),va=m(a),da=d(a,"P",{});var zx=E(da);Ea=g(zx,"What this command does is grab whatever repo you provide as the first argument, in this case "),ga=d(zx,"CODE",{});var Yx=E(ga);ka=g(Yx,"babichjacob/sapper-postcss-template"),Yx.forEach(k),ma=g(zx,", and copy it into whatever directory you provide as the second argument — "),Sa=d(zx,"CODE",{});var Kx=E(Sa);Pa=g(Kx,"my-blog"),Kx.forEach(k),wa=g(zx," (or whatever you want to name the directory). If the template lives in a different branch than "),Aa=d(zx,"CODE",{});var Vx=E(Aa);Na=g(Vx,"master"),Vx.forEach(k),ya=g(zx,", as many Github repos have started to do this year, you’ll need to append the branch name with a hash — "),ba=d(zx,"CODE",{});var Ux=E(ba);xa=g(Ux,"#main"),Ux.forEach(k),Ca=g(zx," for this repo. If you wanted to you could also create a directory first, "),Oa=d(zx,"CODE",{});var Qx=E(Oa);ja=g(Qx,"cd"),Qx.forEach(k),Da=g(zx," into the "),Ta=d(zx,"EM",{});var Xx=E(Ta);Ia=g(Xx,"empty"),Xx.forEach(k),Ma=g(zx," directory and use"),zx.forEach(k),Wa=m(a),qa=d(a,"PRE",{class:!0});var Zx=E(qa);Ba=d(Zx,"CODE",{class:!0});var aC=E(Ba);Ra=g(aC,"npx degit babichjacob/sapper-postcss-template"),_a=d(aC,"SPAN",{class:!0});var sC=E(_a);La=g(sC,"#main ."),sC.forEach(k),aC.forEach(k),Zx.forEach(k),Ga=m(a),Fa=d(a,"P",{});var tC=E(Fa);$a=g(tC,"So, now we have a directory full of Jacob Babich’s template files. Let’s take a look at what’s in there."),tC.forEach(k),Ha=m(a),Ja=d(a,"IMG",{src:!0,alt:!0,loading:!0,class:!0,width:!0,height:!0}),Ya=m(a),Ka=d(a,"P",{});var eC=E(Ka);Va=g(eC,"Mostly the template is the base Sapper template with some additional files that work to integrate Sapper with PostCss and Tailwind. Let’s spin this sucker up and see what’s what, shall we?"),eC.forEach(k),Ua=m(a),Qa=d(a,"P",{});var oC=E(Qa);Xa=g(oC,"First, we need to install all of the dependencies. "),Za=d(oC,"A",{href:!0,rel:!0});var nC=E(Za);as=g(nC,"pnpm"),nC.forEach(k),ss=g(oC," is an alternative to npm that helps save disk space by keeping all of your dependencies on a "),ts=d(oC,"EM",{});var rC=E(ts);es=g(rC,"content-addressable filesystem"),rC.forEach(k),os=g(oC," on your hard drive. It then links to packages in that filesystem from the "),ns=d(oC,"CODE",{});var cC=E(ns);rs=g(cC,"node_modules"),cC.forEach(k),cs=g(oC," directory in your project. This way, if you already have a dependency installed from another project, you don’t have to take up more disk space by installing it again. "),ls=d(oC,"A",{href:!0,rel:!0});var lC=E(ls);is=g(lC,"It’s pretty cool"),lC.forEach(k),ps=g(oC,"!"),oC.forEach(k),hs=m(a),fs=d(a,"P",{});var iC=E(fs);us=g(iC,"If you want to use pnpm and don’t have it installed yet, you can go ahead and install it with"),iC.forEach(k),vs=m(a),ds=d(a,"PRE",{class:!0});var pC=E(ds);Es=d(pC,"CODE",{class:!0});var hC=E(Es);gs=d(hC,"SPAN",{class:!0});var fC=E(gs);ks=g(fC,"npm"),fC.forEach(k),ms=g(hC," "),Ss=d(hC,"SPAN",{class:!0});var uC=E(Ss);Ps=g(uC,"install"),uC.forEach(k),ws=g(hC," -g "),As=d(hC,"SPAN",{class:!0});var vC=E(As);Ns=g(vC,"pnpm"),vC.forEach(k),hC.forEach(k),pC.forEach(k),ys=m(a),bs=d(a,"P",{});var dC=E(bs);xs=g(dC,"If you don’t want to use it, you can just follow along using "),Cs=d(dC,"CODE",{});var EC=E(Cs);Os=g(EC,"npm"),EC.forEach(k),js=g(dC," in place of "),Ds=d(dC,"CODE",{});var gC=E(Ds);Ts=g(gC,"pnpm"),gC.forEach(k),Is=g(dC," for any of the commands."),dC.forEach(k),Ms=m(a),Ws=d(a,"P",{});var kC=E(Ws);qs=g(kC,"Okay, back to the project. Install the dependencies."),kC.forEach(k),Bs=m(a),Rs=d(a,"PRE",{class:!0});var mC=E(Rs);_s=d(mC,"CODE",{class:!0});var SC=E(_s);Ls=d(SC,"SPAN",{class:!0});var PC=E(Ls);Gs=g(PC,"pnpm"),PC.forEach(k),Fs=g(SC," "),$s=d(SC,"SPAN",{class:!0});var wC=E($s);Hs=g(wC,"install"),wC.forEach(k),SC.forEach(k),mC.forEach(k),Js=m(a),zs=d(a,"P",{});var AC=E(zs);Ys=g(AC,"Now let’s get the dev-server running."),AC.forEach(k),Ks=m(a),Vs=d(a,"PRE",{class:!0});var NC=E(Vs);Us=d(NC,"CODE",{class:!0});var yC=E(Us);Qs=d(yC,"SPAN",{class:!0});var bC=E(Qs);Xs=g(bC,"pnpm"),bC.forEach(k),Zs=g(yC," run dev"),yC.forEach(k),NC.forEach(k),at=m(a),st=d(a,"P",{});var xC=E(st);tt=g(xC,"Which will do a bunch of fun stuff in your terminal."),xC.forEach(k),et=m(a),ot=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),rt=m(a),ct=d(a,"P",{});var CC=E(ct);lt=g(CC,"If you open your browser to "),it=d(CC,"A",{href:!0,rel:!0});var OC=E(it);pt=g(OC,"http://localhost:3000"),OC.forEach(k),ht=g(CC," you’ll see the sapper template in all its glory"),CC.forEach(k),ft=m(a),ut=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),dt=m(a),Et=d(a,"H2",{id:!0});var jC=E(Et);gt=g(jC,"Getting Comfortable"),jC.forEach(k),kt=m(a),mt=d(a,"P",{});var DC=E(mt);St=g(DC,"Now that we have the base template up and running. Let’s take a look at some of the files that make it work. Open up "),Pt=d(DC,"CODE",{});var TC=E(Pt);wt=g(TC,"svelte.config.js"),TC.forEach(k),At=g(DC,", located in the root of your project’s directory."),DC.forEach(k),Nt=m(a),yt=d(a,"PRE",{class:!0});var IC=E(yt);bt=d(IC,"CODE",{class:!0});var MC=E(bt);xt=d(MC,"SPAN",{class:!0});var WC=E(xt);Ct=g(WC,"//svelte.config.js"),WC.forEach(k),Ot=g(MC,"\n\n"),jt=d(MC,"SPAN",{class:!0});var qC=E(jt);Dt=g(qC,"const"),qC.forEach(k),Tt=g(MC," sveltePreprocess "),It=d(MC,"SPAN",{class:!0});var BC=E(It);Mt=g(BC,"="),BC.forEach(k),Wt=g(MC," "),qt=d(MC,"SPAN",{class:!0});var RC=E(qt);Bt=g(RC,"require"),RC.forEach(k),Rt=d(MC,"SPAN",{class:!0});var _C=E(Rt);_t=g(_C,"("),_C.forEach(k),Lt=d(MC,"SPAN",{class:!0});var LC=E(Lt);Gt=g(LC,'"svelte-preprocess"'),LC.forEach(k),Ft=d(MC,"SPAN",{class:!0});var GC=E(Ft);$t=g(GC,")"),GC.forEach(k),Ht=d(MC,"SPAN",{class:!0});var FC=E(Ht);Jt=g(FC,";"),FC.forEach(k),zt=g(MC,"\n"),Yt=d(MC,"SPAN",{class:!0});var $C=E(Yt);Kt=g($C,"const"),$C.forEach(k),Vt=g(MC," postcss "),Ut=d(MC,"SPAN",{class:!0});var HC=E(Ut);Qt=g(HC,"="),HC.forEach(k),Xt=g(MC," "),Zt=d(MC,"SPAN",{class:!0});var JC=E(Zt);ae=g(JC,"require"),JC.forEach(k),se=d(MC,"SPAN",{class:!0});var zC=E(se);te=g(zC,"("),zC.forEach(k),ee=d(MC,"SPAN",{class:!0});var YC=E(ee);oe=g(YC,'"./postcss.config"'),YC.forEach(k),ne=d(MC,"SPAN",{class:!0});var KC=E(ne);re=g(KC,")"),KC.forEach(k),ce=d(MC,"SPAN",{class:!0});var VC=E(ce);le=g(VC,";"),VC.forEach(k),ie=g(MC,"\n\n"),pe=d(MC,"SPAN",{class:!0});var UC=E(pe);he=g(UC,"const"),UC.forEach(k),fe=g(MC," "),ue=d(MC,"SPAN",{class:!0});var QC=E(ue);ve=g(QC,"createPreprocessors"),QC.forEach(k),de=g(MC," "),Ee=d(MC,"SPAN",{class:!0});var XC=E(Ee);ge=g(XC,"="),XC.forEach(k),ke=g(MC," "),me=d(MC,"SPAN",{class:!0});var ZC=E(me);Se=g(ZC,"("),ZC.forEach(k),Pe=d(MC,"SPAN",{class:!0});var aO=E(Pe);we=d(aO,"SPAN",{class:!0});var sO=E(we);Ae=g(sO,"{"),sO.forEach(k),Ne=g(aO," sourceMap "),ye=d(aO,"SPAN",{class:!0});var tO=E(ye);be=g(tO,"}"),tO.forEach(k),aO.forEach(k),xe=d(MC,"SPAN",{class:!0});var eO=E(xe);Ce=g(eO,")"),eO.forEach(k),Oe=g(MC," "),je=d(MC,"SPAN",{class:!0});var oO=E(je);De=g(oO,"=>"),oO.forEach(k),Te=g(MC," "),Ie=d(MC,"SPAN",{class:!0});var nO=E(Ie);Me=g(nO,"["),nO.forEach(k),We=g(MC,"\n\t"),qe=d(MC,"SPAN",{class:!0});var rO=E(qe);Be=g(rO,"sveltePreprocess"),rO.forEach(k),Re=d(MC,"SPAN",{class:!0});var cO=E(Re);_e=g(cO,"("),cO.forEach(k),Le=d(MC,"SPAN",{class:!0});var lO=E(Le);Ge=g(lO,"{"),lO.forEach(k),Fe=g(MC,"\n\t\tsourceMap"),$e=d(MC,"SPAN",{class:!0});var iO=E($e);He=g(iO,","),iO.forEach(k),Je=g(MC,"\n\t\tdefaults"),ze=d(MC,"SPAN",{class:!0});var pO=E(ze);Ye=g(pO,":"),pO.forEach(k),Ke=g(MC," "),Ve=d(MC,"SPAN",{class:!0});var hO=E(Ve);Ue=g(hO,"{"),hO.forEach(k),Qe=g(MC,"\n\t\t\tstyle"),Xe=d(MC,"SPAN",{class:!0});var fO=E(Xe);Ze=g(fO,":"),fO.forEach(k),ao=g(MC," "),so=d(MC,"SPAN",{class:!0});var uO=E(so);to=g(uO,'"postcss"'),uO.forEach(k),eo=d(MC,"SPAN",{class:!0});var vO=E(eo);oo=g(vO,","),vO.forEach(k),no=g(MC,"\n\t\t"),ro=d(MC,"SPAN",{class:!0});var dO=E(ro);co=g(dO,"}"),dO.forEach(k),lo=d(MC,"SPAN",{class:!0});var EO=E(lo);io=g(EO,","),EO.forEach(k),po=g(MC,"\n\t\tpostcss"),ho=d(MC,"SPAN",{class:!0});var gO=E(ho);fo=g(gO,","),gO.forEach(k),uo=g(MC,"\n\t"),vo=d(MC,"SPAN",{class:!0});var kO=E(vo);Eo=g(kO,"}"),kO.forEach(k),go=d(MC,"SPAN",{class:!0});var mO=E(go);ko=g(mO,")"),mO.forEach(k),mo=d(MC,"SPAN",{class:!0});var SO=E(mo);So=g(SO,","),SO.forEach(k),Po=g(MC,"\n\t"),wo=d(MC,"SPAN",{class:!0});var PO=E(wo);Ao=g(PO,"// You could have more preprocessors, like mdsvex"),PO.forEach(k),No=g(MC,"\n"),yo=d(MC,"SPAN",{class:!0});var wO=E(yo);bo=g(wO,"]"),wO.forEach(k),xo=d(MC,"SPAN",{class:!0});var AO=E(xo);Co=g(AO,";"),AO.forEach(k),Oo=g(MC,"\n\nmodule"),jo=d(MC,"SPAN",{class:!0});var NO=E(jo);Do=g(NO,"."),NO.forEach(k),To=g(MC,"exports "),Io=d(MC,"SPAN",{class:!0});var yO=E(Io);Mo=g(yO,"="),yO.forEach(k),Wo=g(MC," "),qo=d(MC,"SPAN",{class:!0});var bO=E(qo);Bo=g(bO,"{"),bO.forEach(k),Ro=g(MC,"\n\tcreatePreprocessors"),_o=d(MC,"SPAN",{class:!0});var xO=E(_o);Lo=g(xO,","),xO.forEach(k),Go=g(MC,"\n\t"),Fo=d(MC,"SPAN",{class:!0});var CO=E(Fo);$o=g(CO,"// Options for `svelte-check` and the VS Code extension"),CO.forEach(k),Ho=g(MC,"\n\tpreprocess"),Jo=d(MC,"SPAN",{class:!0});var OO=E(Jo);zo=g(OO,":"),OO.forEach(k),Yo=g(MC," "),Ko=d(MC,"SPAN",{class:!0});var jO=E(Ko);Vo=g(jO,"createPreprocessors"),jO.forEach(k),Uo=d(MC,"SPAN",{class:!0});var DO=E(Uo);Qo=g(DO,"("),DO.forEach(k),Xo=d(MC,"SPAN",{class:!0});var TO=E(Xo);Zo=g(TO,"{"),TO.forEach(k),an=g(MC," sourceMap"),sn=d(MC,"SPAN",{class:!0});var IO=E(sn);tn=g(IO,":"),IO.forEach(k),en=g(MC," "),on=d(MC,"SPAN",{class:!0});var MO=E(on);nn=g(MO,"true"),MO.forEach(k),rn=g(MC," "),cn=d(MC,"SPAN",{class:!0});var WO=E(cn);ln=g(WO,"}"),WO.forEach(k),pn=d(MC,"SPAN",{class:!0});var qO=E(pn);hn=g(qO,")"),qO.forEach(k),fn=d(MC,"SPAN",{class:!0});var BO=E(fn);un=g(BO,","),BO.forEach(k),vn=g(MC,"\n"),dn=d(MC,"SPAN",{class:!0});var RO=E(dn);En=g(RO,"}"),RO.forEach(k),gn=d(MC,"SPAN",{class:!0});var _O=E(gn);kn=g(_O,";"),_O.forEach(k),MC.forEach(k),IC.forEach(k),mn=m(a),Sn=d(a,"P",{});var LO=E(Sn);Pn=g(LO,"Normally, this stuff would be in "),wn=d(LO,"CODE",{});var GO=E(wn);An=g(GO,"rollup.config.js"),GO.forEach(k),Nn=g(LO,", but it’s been separated into its own module here. This is where we’ll add mdsvex later. For now, just know that this is where we’ll be setting up any preprocessors. This file requires "),yn=d(LO,"CODE",{});var FO=E(yn);bn=g(FO,"postcss.config.js"),FO.forEach(k),xn=g(LO,", so let’s take a look at that file next."),LO.forEach(k),Cn=m(a),On=d(a,"PRE",{class:!0});var $O=E(On);jn=d($O,"CODE",{class:!0});var HO=E(jn);Dn=d(HO,"SPAN",{class:!0});var JO=E(Dn);Tn=g(JO,"//postcss.config.js"),JO.forEach(k),In=g(HO,"\n\n"),Mn=d(HO,"SPAN",{class:!0});var zO=E(Mn);Wn=g(zO,"const"),zO.forEach(k),qn=g(HO," cssnano "),Bn=d(HO,"SPAN",{class:!0});var YO=E(Bn);Rn=g(YO,"="),YO.forEach(k),_n=g(HO," "),Ln=d(HO,"SPAN",{class:!0});var KO=E(Ln);Gn=g(KO,"require"),KO.forEach(k),Fn=d(HO,"SPAN",{class:!0});var VO=E(Fn);$n=g(VO,"("),VO.forEach(k),Hn=d(HO,"SPAN",{class:!0});var UO=E(Hn);Jn=g(UO,'"cssnano"'),UO.forEach(k),zn=d(HO,"SPAN",{class:!0});var QO=E(zn);Yn=g(QO,")"),QO.forEach(k),Kn=d(HO,"SPAN",{class:!0});var XO=E(Kn);Vn=g(XO,";"),XO.forEach(k),Un=g(HO,"\n"),Qn=d(HO,"SPAN",{class:!0});var ZO=E(Qn);Xn=g(ZO,"const"),ZO.forEach(k),Zn=g(HO," postcssImport "),ar=d(HO,"SPAN",{class:!0});var aj=E(ar);sr=g(aj,"="),aj.forEach(k),tr=g(HO," "),er=d(HO,"SPAN",{class:!0});var sj=E(er);or=g(sj,"require"),sj.forEach(k),nr=d(HO,"SPAN",{class:!0});var tj=E(nr);rr=g(tj,"("),tj.forEach(k),cr=d(HO,"SPAN",{class:!0});var ej=E(cr);lr=g(ej,'"postcss-import"'),ej.forEach(k),ir=d(HO,"SPAN",{class:!0});var oj=E(ir);pr=g(oj,")"),oj.forEach(k),hr=d(HO,"SPAN",{class:!0});var nj=E(hr);fr=g(nj,";"),nj.forEach(k),ur=g(HO,"\n"),vr=d(HO,"SPAN",{class:!0});var rj=E(vr);dr=g(rj,"const"),rj.forEach(k),Er=g(HO," tailwindcss "),gr=d(HO,"SPAN",{class:!0});var cj=E(gr);kr=g(cj,"="),cj.forEach(k),mr=g(HO," "),Sr=d(HO,"SPAN",{class:!0});var lj=E(Sr);Pr=g(lj,"require"),lj.forEach(k),wr=d(HO,"SPAN",{class:!0});var ij=E(wr);Ar=g(ij,"("),ij.forEach(k),Nr=d(HO,"SPAN",{class:!0});var pj=E(Nr);yr=g(pj,'"tailwindcss"'),pj.forEach(k),br=d(HO,"SPAN",{class:!0});var hj=E(br);xr=g(hj,")"),hj.forEach(k),Cr=d(HO,"SPAN",{class:!0});var fj=E(Cr);Or=g(fj,";"),fj.forEach(k),jr=g(HO,"\n"),Dr=d(HO,"SPAN",{class:!0});var uj=E(Dr);Tr=g(uj,"const"),uj.forEach(k),Ir=g(HO," tailwindcssConfig "),Mr=d(HO,"SPAN",{class:!0});var vj=E(Mr);Wr=g(vj,"="),vj.forEach(k),qr=g(HO," "),Br=d(HO,"SPAN",{class:!0});var dj=E(Br);Rr=g(dj,"require"),dj.forEach(k),_r=d(HO,"SPAN",{class:!0});var Ej=E(_r);Lr=g(Ej,"("),Ej.forEach(k),Gr=d(HO,"SPAN",{class:!0});var gj=E(Gr);Fr=g(gj,'"./tailwind.config"'),gj.forEach(k),$r=d(HO,"SPAN",{class:!0});var kj=E($r);Hr=g(kj,")"),kj.forEach(k),Jr=d(HO,"SPAN",{class:!0});var mj=E(Jr);zr=g(mj,";"),mj.forEach(k),Yr=g(HO,"\n\n"),Kr=d(HO,"SPAN",{class:!0});var Sj=E(Kr);Vr=g(Sj,"const"),Sj.forEach(k),Ur=g(HO," mode "),Qr=d(HO,"SPAN",{class:!0});var Pj=E(Qr);Xr=g(Pj,"="),Pj.forEach(k),Zr=g(HO," "),ac=d(HO,"SPAN",{class:!0});var wj=E(ac);sc=g(wj,'"production"'),wj.forEach(k),tc=d(HO,"SPAN",{class:!0});var Aj=E(tc);ec=g(Aj,";"),Aj.forEach(k),oc=g(HO,"\n"),nc=d(HO,"SPAN",{class:!0});var Nj=E(nc);rc=g(Nj,"const"),Nj.forEach(k),cc=g(HO," dev "),lc=d(HO,"SPAN",{class:!0});var yj=E(lc);ic=g(yj,"="),yj.forEach(k),pc=g(HO," mode "),hc=d(HO,"SPAN",{class:!0});var bj=E(hc);fc=g(bj,"==="),bj.forEach(k),uc=g(HO," "),vc=d(HO,"SPAN",{class:!0});var xj=E(vc);dc=g(xj,'"development"'),xj.forEach(k),Ec=d(HO,"SPAN",{class:!0});var Cj=E(Ec);gc=g(Cj,";"),Cj.forEach(k),kc=g(HO,"\n\nmodule"),mc=d(HO,"SPAN",{class:!0});var Oj=E(mc);Sc=g(Oj,"."),Oj.forEach(k),Pc=g(HO,"exports "),wc=d(HO,"SPAN",{class:!0});var jj=E(wc);Ac=g(jj,"="),jj.forEach(k),Nc=g(HO," "),yc=d(HO,"SPAN",{class:!0});var Dj=E(yc);bc=g(Dj,"{"),Dj.forEach(k),xc=g(HO,"\n\tplugins"),Cc=d(HO,"SPAN",{class:!0});var Tj=E(Cc);Oc=g(Tj,":"),Tj.forEach(k),jc=g(HO," "),Dc=d(HO,"SPAN",{class:!0});var Ij=E(Dc);Tc=g(Ij,"["),Ij.forEach(k),Ic=g(HO,"\n\t\tpostcssImport"),Mc=d(HO,"SPAN",{class:!0});var Mj=E(Mc);Wc=g(Mj,","),Mj.forEach(k),qc=g(HO,"\n\n\t\t"),Bc=d(HO,"SPAN",{class:!0});var Wj=E(Bc);Rc=g(Wj,"tailwindcss"),Wj.forEach(k),_c=d(HO,"SPAN",{class:!0});var qj=E(_c);Lc=g(qj,"("),qj.forEach(k),Gc=g(HO,"tailwindcssConfig"),Fc=d(HO,"SPAN",{class:!0});var Bj=E(Fc);$c=g(Bj,")"),Bj.forEach(k),Hc=d(HO,"SPAN",{class:!0});var Rj=E(Hc);Jc=g(Rj,","),Rj.forEach(k),zc=g(HO,"\n\n\t\t"),Yc=d(HO,"SPAN",{class:!0});var _j=E(Yc);Kc=g(_j,"// Plugins for polyfills and the like (such as postcss-preset-env) should generally go here"),_j.forEach(k),Vc=g(HO,"\n\t\t"),Uc=d(HO,"SPAN",{class:!0});var Lj=E(Uc);Qc=g(Lj,"// but a few have to run *before* Tailwind"),Lj.forEach(k),Xc=g(HO,"\n\n\t\t"),Zc=d(HO,"SPAN",{class:!0});var Gj=E(Zc);al=g(Gj,"!"),Gj.forEach(k),sl=g(HO,"dev "),tl=d(HO,"SPAN",{class:!0});var Fj=E(tl);el=g(Fj,"&&"),Fj.forEach(k),ol=g(HO," "),nl=d(HO,"SPAN",{class:!0});var $j=E(nl);rl=g($j,"cssnano"),$j.forEach(k),cl=d(HO,"SPAN",{class:!0});var Hj=E(cl);ll=g(Hj,"("),Hj.forEach(k),il=d(HO,"SPAN",{class:!0});var Jj=E(il);pl=g(Jj,"{"),Jj.forEach(k),hl=g(HO,"\n\t\t\tpreset"),fl=d(HO,"SPAN",{class:!0});var zj=E(fl);ul=g(zj,":"),zj.forEach(k),vl=g(HO," "),dl=d(HO,"SPAN",{class:!0});var Yj=E(dl);El=g(Yj,"["),Yj.forEach(k),gl=g(HO,"\n\t\t\t\t"),kl=d(HO,"SPAN",{class:!0});var Kj=E(kl);ml=g(Kj,'"default"'),Kj.forEach(k),Sl=d(HO,"SPAN",{class:!0});var Vj=E(Sl);Pl=g(Vj,","),Vj.forEach(k),wl=g(HO,"\n\t\t\t\t"),Al=d(HO,"SPAN",{class:!0});var Uj=E(Al);Nl=g(Uj,"{"),Uj.forEach(k),yl=g(HO," discardComments"),bl=d(HO,"SPAN",{class:!0});var Qj=E(bl);xl=g(Qj,":"),Qj.forEach(k),Cl=g(HO," "),Ol=d(HO,"SPAN",{class:!0});var Xj=E(Ol);jl=g(Xj,"{"),Xj.forEach(k),Dl=g(HO," removeAll"),Tl=d(HO,"SPAN",{class:!0});var Zj=E(Tl);Il=g(Zj,":"),Zj.forEach(k),Ml=g(HO," "),Wl=d(HO,"SPAN",{class:!0});var aD=E(Wl);ql=g(aD,"true"),aD.forEach(k),Bl=g(HO," "),Rl=d(HO,"SPAN",{class:!0});var sD=E(Rl);_l=g(sD,"}"),sD.forEach(k),Ll=g(HO," "),Gl=d(HO,"SPAN",{class:!0});var tD=E(Gl);Fl=g(tD,"}"),tD.forEach(k),$l=d(HO,"SPAN",{class:!0});var eD=E($l);Hl=g(eD,","),eD.forEach(k),Jl=g(HO,"\n\t\t\t"),zl=d(HO,"SPAN",{class:!0});var oD=E(zl);Yl=g(oD,"]"),oD.forEach(k),Kl=d(HO,"SPAN",{class:!0});var nD=E(Kl);Vl=g(nD,","),nD.forEach(k),Ul=g(HO,"\n\t\t"),Ql=d(HO,"SPAN",{class:!0});var rD=E(Ql);Xl=g(rD,"}"),rD.forEach(k),Zl=d(HO,"SPAN",{class:!0});var cD=E(Zl);ai=g(cD,")"),cD.forEach(k),si=d(HO,"SPAN",{class:!0});var lD=E(si);ti=g(lD,","),lD.forEach(k),ei=g(HO,"\n\t"),oi=d(HO,"SPAN",{class:!0});var iD=E(oi);ni=g(iD,"]"),iD.forEach(k),ri=d(HO,"SPAN",{class:!0});var pD=E(ri);ci=g(pD,"."),pD.forEach(k),li=d(HO,"SPAN",{class:!0});var hD=E(li);ii=g(hD,"filter"),hD.forEach(k),pi=d(HO,"SPAN",{class:!0});var fD=E(pi);hi=g(fD,"("),fD.forEach(k),fi=g(HO,"Boolean"),ui=d(HO,"SPAN",{class:!0});var uD=E(ui);vi=g(uD,")"),uD.forEach(k),di=d(HO,"SPAN",{class:!0});var vD=E(di);Ei=g(vD,","),vD.forEach(k),gi=g(HO,"\n"),ki=d(HO,"SPAN",{class:!0});var dD=E(ki);mi=g(dD,"}"),dD.forEach(k),Si=d(HO,"SPAN",{class:!0});var ED=E(Si);Pi=g(ED,";"),ED.forEach(k),HO.forEach(k),$O.forEach(k),wi=m(a),Ai=d(a,"P",{});var gD=E(Ai);Ni=g(gD,"This is where we start getting into the nitty-gritty of making PostCss and Tailwind work with Svelte. If you have PostCss plugins to add, this is the place to do that. Let’s look at the other important config file that this file imports, "),yi=d(gD,"CODE",{});var kD=E(yi);bi=g(kD,"tailwind.config.js"),kD.forEach(k),gD.forEach(k),xi=m(a),Ci=d(a,"PRE",{class:!0});var mD=E(Ci);Oi=d(mD,"CODE",{class:!0});var SD=E(Oi);ji=d(SD,"SPAN",{class:!0});var PD=E(ji);Di=g(PD,"// tailwind.config.js"),PD.forEach(k),Ti=g(SD,"\n\n"),Ii=d(SD,"SPAN",{class:!0});var wD=E(Ii);Mi=g(wD,"const"),wD.forEach(k),Wi=g(SD," "),qi=d(SD,"SPAN",{class:!0});var AD=E(qi);Bi=g(AD,"{"),AD.forEach(k),Ri=g(SD," tailwindExtractor "),_i=d(SD,"SPAN",{class:!0});var ND=E(_i);Li=g(ND,"}"),ND.forEach(k),Gi=g(SD," "),Fi=d(SD,"SPAN",{class:!0});var yD=E(Fi);$i=g(yD,"="),yD.forEach(k),Hi=g(SD," "),Ji=d(SD,"SPAN",{class:!0});var bD=E(Ji);zi=g(bD,"require"),bD.forEach(k),Yi=d(SD,"SPAN",{class:!0});var xD=E(Yi);Ki=g(xD,"("),xD.forEach(k),Vi=d(SD,"SPAN",{class:!0});var CD=E(Vi);Ui=g(CD,'"tailwindcss/lib/lib/purgeUnusedStyles"'),CD.forEach(k),Qi=d(SD,"SPAN",{class:!0});var OD=E(Qi);Xi=g(OD,")"),OD.forEach(k),Zi=d(SD,"SPAN",{class:!0});var jD=E(Zi);ap=g(jD,";"),jD.forEach(k),sp=g(SD,"\n\nmodule"),tp=d(SD,"SPAN",{class:!0});var DD=E(tp);ep=g(DD,"."),DD.forEach(k),op=g(SD,"exports "),np=d(SD,"SPAN",{class:!0});var TD=E(np);rp=g(TD,"="),TD.forEach(k),cp=g(SD," "),lp=d(SD,"SPAN",{class:!0});var ID=E(lp);ip=g(ID,"{"),ID.forEach(k),pp=g(SD,"\n\tpurge"),hp=d(SD,"SPAN",{class:!0});var MD=E(hp);fp=g(MD,":"),MD.forEach(k),up=g(SD," "),vp=d(SD,"SPAN",{class:!0});var WD=E(vp);dp=g(WD,"{"),WD.forEach(k),Ep=g(SD,"\n\t\tcontent"),gp=d(SD,"SPAN",{class:!0});var qD=E(gp);kp=g(qD,":"),qD.forEach(k),mp=g(SD," "),Sp=d(SD,"SPAN",{class:!0});var BD=E(Sp);Pp=g(BD,"["),BD.forEach(k),wp=g(SD,"\n\t\t\t"),Ap=d(SD,"SPAN",{class:!0});var RD=E(Ap);Np=g(RD,'"./src/**/*.html"'),RD.forEach(k),yp=d(SD,"SPAN",{class:!0});var _D=E(yp);bp=g(_D,","),_D.forEach(k),xp=g(SD,"\n\t\t\t"),Cp=d(SD,"SPAN",{class:!0});var LD=E(Cp);Op=g(LD,'"./src/**/*.svelte"'),LD.forEach(k),jp=d(SD,"SPAN",{class:!0});var GD=E(jp);Dp=g(GD,","),GD.forEach(k),Tp=g(SD,"\n\t\t"),Ip=d(SD,"SPAN",{class:!0});var FD=E(Ip);Mp=g(FD,"]"),FD.forEach(k),Wp=d(SD,"SPAN",{class:!0});var $D=E(Wp);qp=g($D,","),$D.forEach(k),Bp=g(SD,"\n\t\toptions"),Rp=d(SD,"SPAN",{class:!0});var HD=E(Rp);_p=g(HD,":"),HD.forEach(k),Lp=g(SD," "),Gp=d(SD,"SPAN",{class:!0});var JD=E(Gp);Fp=g(JD,"{"),JD.forEach(k),$p=g(SD,"\n\t\t\t"),Hp=d(SD,"SPAN",{class:!0});var zD=E(Hp);Jp=g(zD,"defaultExtractor"),zD.forEach(k),zp=d(SD,"SPAN",{class:!0});var YD=E(zp);Yp=g(YD,":"),YD.forEach(k),Kp=g(SD," "),Vp=d(SD,"SPAN",{class:!0});var KD=E(Vp);Up=g(KD,"("),KD.forEach(k),Qp=d(SD,"SPAN",{class:!0});var VD=E(Qp);Xp=g(VD,"content"),VD.forEach(k),Zp=d(SD,"SPAN",{class:!0});var UD=E(Zp);ah=g(UD,")"),UD.forEach(k),sh=g(SD," "),th=d(SD,"SPAN",{class:!0});var QD=E(th);eh=g(QD,"=>"),QD.forEach(k),oh=g(SD," "),nh=d(SD,"SPAN",{class:!0});var XD=E(nh);rh=g(XD,"["),XD.forEach(k),ch=g(SD,"\n\t\t\t\t"),lh=d(SD,"SPAN",{class:!0});var ZD=E(lh);ih=g(ZD,"// This is an internal Tailwind function that we're not supposed to be allowed to use"),ZD.forEach(k),ph=g(SD,"\n\t\t\t\t"),hh=d(SD,"SPAN",{class:!0});var aT=E(hh);fh=g(aT,"// So if this stops working, please open an issue at"),aT.forEach(k),uh=g(SD,"\n\t\t\t\t"),vh=d(SD,"SPAN",{class:!0});var sT=E(vh);dh=g(sT,"// https://github.com/babichjacob/sapper-postcss-template/issues"),sT.forEach(k),Eh=g(SD,"\n\t\t\t\t"),gh=d(SD,"SPAN",{class:!0});var tT=E(gh);kh=g(tT,"// rather than bothering Tailwind Labs about it"),tT.forEach(k),mh=g(SD,"\n\t\t\t\t"),Sh=d(SD,"SPAN",{class:!0});var eT=E(Sh);Ph=g(eT,"..."),eT.forEach(k),wh=d(SD,"SPAN",{class:!0});var oT=E(wh);Ah=g(oT,"tailwindExtractor"),oT.forEach(k),Nh=d(SD,"SPAN",{class:!0});var nT=E(Nh);yh=g(nT,"("),nT.forEach(k),bh=g(SD,"content"),xh=d(SD,"SPAN",{class:!0});var rT=E(xh);Ch=g(rT,")"),rT.forEach(k),Oh=d(SD,"SPAN",{class:!0});var cT=E(Oh);jh=g(cT,","),cT.forEach(k),Dh=g(SD,"\n\t\t\t\t"),Th=d(SD,"SPAN",{class:!0});var lT=E(Th);Ih=g(lT,"// Match Svelte class: directives (https://github.com/tailwindlabs/tailwindcss/discussions/1731)"),lT.forEach(k),Mh=g(SD,"\n\t\t\t\t"),Wh=d(SD,"SPAN",{class:!0});var iT=E(Wh);qh=g(iT,"..."),iT.forEach(k),Bh=d(SD,"SPAN",{class:!0});var pT=E(Bh);Rh=g(pT,"["),pT.forEach(k),_h=d(SD,"SPAN",{class:!0});var hT=E(_h);Lh=g(hT,"..."),hT.forEach(k),Gh=g(SD,"content"),Fh=d(SD,"SPAN",{class:!0});var fT=E(Fh);$h=g(fT,"."),fT.forEach(k),Hh=d(SD,"SPAN",{class:!0});var uT=E(Hh);Jh=g(uT,"matchAll"),uT.forEach(k),zh=d(SD,"SPAN",{class:!0});var vT=E(zh);Yh=g(vT,"("),vT.forEach(k),Kh=d(SD,"SPAN",{class:!0});var dT=E(Kh);Vh=d(dT,"SPAN",{class:!0});var ET=E(Vh);Uh=g(ET,"/"),ET.forEach(k),Qh=d(dT,"SPAN",{class:!0});var gT=E(Qh);Xh=g(gT,"(?:class:)*([\\w\\d-/:%.]+)"),gT.forEach(k),Zh=d(dT,"SPAN",{class:!0});var kT=E(Zh);af=g(kT,"/"),kT.forEach(k),sf=d(dT,"SPAN",{class:!0});var mT=E(sf);tf=g(mT,"gm"),mT.forEach(k),dT.forEach(k),ef=d(SD,"SPAN",{class:!0});var ST=E(ef);of=g(ST,")"),ST.forEach(k),nf=d(SD,"SPAN",{class:!0});var PT=E(nf);rf=g(PT,"]"),PT.forEach(k),cf=d(SD,"SPAN",{class:!0});var wT=E(cf);lf=g(wT,"."),wT.forEach(k),pf=d(SD,"SPAN",{class:!0});var AT=E(pf);hf=g(AT,"map"),AT.forEach(k),ff=d(SD,"SPAN",{class:!0});var NT=E(ff);uf=g(NT,"("),NT.forEach(k),vf=d(SD,"SPAN",{class:!0});var yT=E(vf);df=g(yT,"("),yT.forEach(k),Ef=d(SD,"SPAN",{class:!0});var bT=E(Ef);gf=d(bT,"SPAN",{class:!0});var xT=E(gf);kf=g(xT,"["),xT.forEach(k),mf=g(bT,"_match"),Sf=d(bT,"SPAN",{class:!0});var CT=E(Sf);Pf=g(CT,","),CT.forEach(k),wf=g(bT," group"),Af=d(bT,"SPAN",{class:!0});var OT=E(Af);Nf=g(OT,","),OT.forEach(k),yf=g(bT," "),bf=d(bT,"SPAN",{class:!0});var jT=E(bf);xf=g(jT,"..."),jT.forEach(k),Cf=g(bT,"_rest"),Of=d(bT,"SPAN",{class:!0});var DT=E(Of);jf=g(DT,"]"),DT.forEach(k),bT.forEach(k),Df=d(SD,"SPAN",{class:!0});var TT=E(Df);Tf=g(TT,")"),TT.forEach(k),If=g(SD," "),Mf=d(SD,"SPAN",{class:!0});var IT=E(Mf);Wf=g(IT,"=>"),IT.forEach(k),qf=g(SD," group"),Bf=d(SD,"SPAN",{class:!0});var MT=E(Bf);Rf=g(MT,")"),MT.forEach(k),_f=d(SD,"SPAN",{class:!0});var WT=E(_f);Lf=g(WT,","),WT.forEach(k),Gf=g(SD,"\n\t\t\t"),Ff=d(SD,"SPAN",{class:!0});var qT=E(Ff);$f=g(qT,"]"),qT.forEach(k),Hf=d(SD,"SPAN",{class:!0});var BT=E(Hf);Jf=g(BT,","),BT.forEach(k),zf=g(SD,"\n\t\t\tkeyframes"),Yf=d(SD,"SPAN",{class:!0});var RT=E(Yf);Kf=g(RT,":"),RT.forEach(k),Vf=g(SD," "),Uf=d(SD,"SPAN",{class:!0});var _T=E(Uf);Qf=g(_T,"true"),_T.forEach(k),Xf=d(SD,"SPAN",{class:!0});var LT=E(Xf);Zf=g(LT,","),LT.forEach(k),au=g(SD,"\n\t\t"),su=d(SD,"SPAN",{class:!0});var GT=E(su);tu=g(GT,"}"),GT.forEach(k),eu=d(SD,"SPAN",{class:!0});var FT=E(eu);ou=g(FT,","),FT.forEach(k),nu=g(SD,"\n\t"),ru=d(SD,"SPAN",{class:!0});var $T=E(ru);cu=g($T,"}"),$T.forEach(k),lu=d(SD,"SPAN",{class:!0});var HT=E(lu);iu=g(HT,","),HT.forEach(k),pu=g(SD,"\n\ttheme"),hu=d(SD,"SPAN",{class:!0});var JT=E(hu);fu=g(JT,":"),JT.forEach(k),uu=g(SD," "),vu=d(SD,"SPAN",{class:!0});var zT=E(vu);du=g(zT,"{"),zT.forEach(k),Eu=g(SD,"\n\t\textend"),gu=d(SD,"SPAN",{class:!0});var YT=E(gu);ku=g(YT,":"),YT.forEach(k),mu=g(SD," "),Su=d(SD,"SPAN",{class:!0});var KT=E(Su);Pu=g(KT,"{"),KT.forEach(k),wu=d(SD,"SPAN",{class:!0});var VT=E(wu);Au=g(VT,"}"),VT.forEach(k),Nu=d(SD,"SPAN",{class:!0});var UT=E(Nu);yu=g(UT,","),UT.forEach(k),bu=g(SD,"\n\t"),xu=d(SD,"SPAN",{class:!0});var QT=E(xu);Cu=g(QT,"}"),QT.forEach(k),Ou=d(SD,"SPAN",{class:!0});var XT=E(Ou);ju=g(XT,","),XT.forEach(k),Du=g(SD,"\n\tvariants"),Tu=d(SD,"SPAN",{class:!0});var ZT=E(Tu);Iu=g(ZT,":"),ZT.forEach(k),Mu=g(SD," "),Wu=d(SD,"SPAN",{class:!0});var aI=E(Wu);qu=g(aI,"{"),aI.forEach(k),Bu=g(SD,"\n\t\textend"),Ru=d(SD,"SPAN",{class:!0});var sI=E(Ru);_u=g(sI,":"),sI.forEach(k),Lu=g(SD," "),Gu=d(SD,"SPAN",{class:!0});var tI=E(Gu);Fu=g(tI,"{"),tI.forEach(k),$u=d(SD,"SPAN",{class:!0});var eI=E($u);Hu=g(eI,"}"),eI.forEach(k),Ju=d(SD,"SPAN",{class:!0});var oI=E(Ju);zu=g(oI,","),oI.forEach(k),Yu=g(SD,"\n\t"),Ku=d(SD,"SPAN",{class:!0});var nI=E(Ku);Vu=g(nI,"}"),nI.forEach(k),Uu=d(SD,"SPAN",{class:!0});var rI=E(Uu);Qu=g(rI,","),rI.forEach(k),Xu=g(SD,"\n\tplugins"),Zu=d(SD,"SPAN",{class:!0});var cI=E(Zu);av=g(cI,":"),cI.forEach(k),sv=g(SD," "),tv=d(SD,"SPAN",{class:!0});var lI=E(tv);ev=g(lI,"["),lI.forEach(k),ov=d(SD,"SPAN",{class:!0});var iI=E(ov);nv=g(iI,"]"),iI.forEach(k),rv=d(SD,"SPAN",{class:!0});var pI=E(rv);cv=g(pI,","),pI.forEach(k),lv=g(SD,"\n"),iv=d(SD,"SPAN",{class:!0});var hI=E(iv);pv=g(hI,"}"),hI.forEach(k),hv=d(SD,"SPAN",{class:!0});var fI=E(hv);fv=g(fI,";"),fI.forEach(k),SD.forEach(k),mD.forEach(k),uv=m(a),vv=d(a,"P",{});var uI=E(vv);dv=g(uI,"For the most part, this file is exactly the same as the default "),Ev=d(uI,"CODE",{});var vI=E(Ev);gv=g(vI,"tailwind.config.js"),vI.forEach(k),kv=g(uI," that comes when you initialize a new Tailwind project, with one big exception: "),mv=d(uI,"CODE",{});var dI=E(mv);Sv=g(dI,"defaultExtractor"),dI.forEach(k),Pv=g(uI,". This is a custom function for matching against Svelte "),wv=d(uI,"A",{href:!0,rel:!0});var EI=E(wv);Av=g(EI,"class"),EI.forEach(k),Nv=g(uI," directives. This function is part of the reason this template is so awesome. Don’t mess with that function if you don’t know what you’re doing! Otherwise, this is where you’ll customize your tailwind configuration."),uI.forEach(k),yv=m(a),bv=d(a,"P",{});var gI=E(bv);xv=g(gI,"Okay, so those are the config files. There are two last files of note that we should take a look at. The first is "),Cv=d(gI,"CODE",{});var kI=E(Cv);Ov=g(kI,"src/global.pcss"),kI.forEach(k),jv=g(gI,", which is the file that imports all of Tailwind’s components and compiled css:"),gI.forEach(k),Dv=m(a),Tv=d(a,"PRE",{class:!0});var mI=E(Tv);Iv=d(mI,"CODE",{class:!0});var SI=E(Iv);Mv=d(SI,"SPAN",{class:!0});var PI=E(Mv);Wv=d(PI,"SPAN",{class:!0});var wI=E(Wv);qv=g(wI,"@import"),wI.forEach(k),Bv=g(PI," "),Rv=d(PI,"SPAN",{class:!0});var AI=E(Rv);_v=g(AI,'"tailwindcss/base"'),AI.forEach(k),Lv=d(PI,"SPAN",{class:!0});var NI=E(Lv);Gv=g(NI,";"),NI.forEach(k),PI.forEach(k),Fv=g(SI,"\n"),$v=d(SI,"SPAN",{class:!0});var yI=E($v);Hv=g(yI,'/* @import "./base.pcss"; */'),yI.forEach(k),Jv=g(SI,"\n\n"),zv=d(SI,"SPAN",{class:!0});var bI=E(zv);Yv=d(bI,"SPAN",{class:!0});var xI=E(Yv);Kv=g(xI,"@import"),xI.forEach(k),Vv=g(bI," "),Uv=d(bI,"SPAN",{class:!0});var CI=E(Uv);Qv=g(CI,'"tailwindcss/components"'),CI.forEach(k),Xv=d(bI,"SPAN",{class:!0});var OI=E(Xv);Zv=g(OI,";"),OI.forEach(k),bI.forEach(k),ad=g(SI,"\n"),sd=d(SI,"SPAN",{class:!0});var jI=E(sd);td=g(jI,'/* @import "./components.pcss"; */'),jI.forEach(k),ed=g(SI,"\n\n"),od=d(SI,"SPAN",{class:!0});var DI=E(od);nd=d(DI,"SPAN",{class:!0});var TI=E(nd);rd=g(TI,"@import"),TI.forEach(k),cd=g(DI," "),ld=d(DI,"SPAN",{class:!0});var II=E(ld);id=g(II,'"tailwindcss/utilities"'),II.forEach(k),pd=d(DI,"SPAN",{class:!0});var MI=E(pd);hd=g(MI,";"),MI.forEach(k),DI.forEach(k),fd=g(SI,"\n"),ud=d(SI,"SPAN",{class:!0});var WI=E(ud);vd=g(WI,'/* @import "./utilities.pcss"; */'),WI.forEach(k),SI.forEach(k),mI.forEach(k),dd=m(a),Ed=d(a,"P",{});var qI=E(Ed);gd=g(qI,"You can add global styles to this file by adding:"),qI.forEach(k),kd=m(a),md=d(a,"PRE",{class:!0});var BI=E(md);Sd=d(BI,"CODE",{class:!0});var RI=E(Sd);Pd=d(RI,"SPAN",{class:!0});var _I=E(Pd);wd=d(_I,"SPAN",{class:!0});var LI=E(wd);Ad=g(LI,"@layer"),LI.forEach(k),Nd=g(_I," base"),_I.forEach(k),yd=g(RI," "),bd=d(RI,"SPAN",{class:!0});var GI=E(bd);xd=g(GI,"{"),GI.forEach(k),Cd=g(RI,"\n    // your expert-level css here\n"),Od=d(RI,"SPAN",{class:!0});var FI=E(Od);jd=g(FI,"}"),FI.forEach(k),RI.forEach(k),BI.forEach(k),Dd=m(a),Td=d(a,"P",{});var $I=E(Td);Id=g($I,"Lastly, let’s look at the file that gets compiled by this fantastic Rube Goldberg Machine of config files, "),Md=d($I,"CODE",{});var HI=E(Md);Wd=g(HI,"static/global.css"),HI.forEach(k),qd=g($I,". I’m not going to show you the code here because the file is more than 3MB. This is basically everything that makes Tailwind work while you’re in development. When you eventually build for production this will be whittled down to some small number of kilobytes. What you should remember here is "),Bd=d($I,"STRONG",{});var JI=E(Bd);Rd=g(JI,"don’t edit this file or add your own styles to it"),JI.forEach(k),_d=g($I,". It will all be overwritten."),$I.forEach(k),Ld=m(a),Gd=d(a,"P",{});var zI=E(Gd);Fd=g(zI,"Okay, enough looking at all of these config files. Let’s actually make a blog!"),zI.forEach(k),$d=m(a),Hd=d(a,"H2",{id:!0});var YI=E(Hd);Jd=g(YI,"Adding mdsvex"),YI.forEach(k),zd=m(a),Yd=d(a,"P",{});var KI=E(Yd);Kd=d(KI,"A",{href:!0,rel:!0});var VI=E(Kd);Vd=g(VI,"mdsvex"),VI.forEach(k),Ud=g(KI," is a project by "),Qd=d(KI,"A",{href:!0,rel:!0});var UI=E(Qd);Xd=g(UI,"pngwn"),UI.forEach(k),Zd=g(KI," that aims to introduce some of the functionality of "),aE=d(KI,"A",{href:!0,rel:!0});var QI=E(aE);sE=g(QI,"mdx"),QI.forEach(k),tE=g(KI," to Svelte. Basically, mdsvex, allows you to write Svelte template code and some js in your markdown files. This is super-ideal for a blog made with Svelte/Sapper because you never really know when you’ll want to execute some real code in your markdown posts."),KI.forEach(k),eE=m(a),oE=d(a,"P",{});var XI=E(oE);nE=g(XI,"Let’s install it and start playing around, shall we?"),XI.forEach(k),rE=m(a),cE=d(a,"PRE",{class:!0});var ZI=E(cE);lE=d(ZI,"CODE",{class:!0});var aM=E(lE);iE=d(aM,"SPAN",{class:!0});var sM=E(iE);pE=g(sM,"pnpm"),sM.forEach(k),hE=g(aM," "),fE=d(aM,"SPAN",{class:!0});var tM=E(fE);uE=g(tM,"install"),tM.forEach(k),vE=g(aM," mdsvex -D"),aM.forEach(k),ZI.forEach(k),dE=m(a),EE=d(a,"P",{});var eM=E(EE);gE=g(eM,"We’re installing "),kE=d(eM,"CODE",{});var oM=E(kE);mE=g(oM,"mdsvex"),oM.forEach(k),SE=g(eM," as a dev dependency here because we want this blog to be served as a static site. Later, when we export the static site from Sapper or use Netlify’s automated build process, those dev dependencies are what will be used in the build process."),eM.forEach(k),PE=m(a),wE=d(a,"P",{});var nM=E(wE);AE=g(nM,"Once that’s installed, we need to add it to our preprocessors over in "),NE=d(nM,"CODE",{});var rM=E(NE);yE=g(rM,"svelte/config.js"),rM.forEach(k),bE=g(nM," open that up again and we’ll import "),xE=d(nM,"CODE",{});var cM=E(xE);CE=g(cM,"mdsvex"),cM.forEach(k),OE=g(nM,":"),nM.forEach(k),jE=m(a),DE=d(a,"PRE",{class:!0});var lM=E(DE);TE=d(lM,"CODE",{class:!0});var iM=E(TE);IE=g(iM,'//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\n'),ME=d(iM,"SPAN",{class:!0});var pM=E(ME);WE=d(pM,"SPAN",{class:!0});var hM=E(WE);qE=g(hM,"+"),hM.forEach(k),BE=g(pM," const { mdsvex } = require('mdsvex');"),pM.forEach(k),RE=g(iM,"\n\nconst createPreprocessors = ({ sourceMap }) => [\n"),_E=d(iM,"SPAN",{class:!0});var fM=E(_E);LE=d(fM,"SPAN",{class:!0});var uM=E(LE);GE=g(uM,"+"),uM.forEach(k),FE=g(fM,"   mdsvex({}),"),fM.forEach(k),$E=g(iM,'\n\tsveltePreprocess({\n\t\tsourceMap,\n\t\tdefaults: {\n\t\t\tstyle: "postcss",\n\t\t},\n\t\tpostcss,\n\t}),\n\t// You could have more preprocessors, like mdsvex\n];\n\nmodule.exports = {\n\tcreatePreprocessors,\n\t// Options for `svelte-check` and the VS Code extension\n\tpreprocess: createPreprocessors({ sourceMap: true }),\n};'),iM.forEach(k),lM.forEach(k),HE=m(a),JE=d(a,"P",{});var vM=E(JE);zE=g(vM,"It’s important to add "),YE=d(vM,"CODE",{});var dM=E(YE);KE=g(dM,"mdsvex({})"),dM.forEach(k),VE=m(vM),UE=d(vM,"EM",{});var EM=E(UE);QE=g(EM,"above"),EM.forEach(k),XE=m(vM),ZE=d(vM,"CODE",{});var gM=E(ZE);ag=g(gM,"sveltePreprocess"),gM.forEach(k),sg=g(vM," here. My first mistake when building this blog was to place "),tg=d(vM,"CODE",{});var kM=E(tg);eg=g(kM,"mdsvex({})"),kM.forEach(k),og=g(vM," right after the comment "),ng=d(vM,"CODE",{});var mM=E(ng);rg=g(mM,"//you could have more preprocessors, like mdsvex"),mM.forEach(k),cg=g(vM,". I’m guessing this didn’t work because "),lg=d(vM,"CODE",{});var SM=E(lg);ig=g(SM,"sveltePreprocess"),SM.forEach(k),pg=g(vM," works on "),hg=d(vM,"CODE",{});var PM=E(hg);fg=g(PM,".svelte"),PM.forEach(k),ug=g(vM," files, while mdsvex actually builds "),vg=d(vM,"CODE",{});var wM=E(vg);dg=g(wM,".svelte"),wM.forEach(k),Eg=g(vM," files from markdown, metadata, and abstract syntax trees through remark. Basically, if you try to hand "),gg=d(vM,"CODE",{});var AM=E(gg);kg=g(AM,"sveltePreprocess"),AM.forEach(k),mg=g(vM," a bunch of markdown it will tell you, cryptically, that it can’t do what you want."),vM.forEach(k),Sg=m(a),Pg=d(a,"P",{});var NM=E(Pg);wg=g(NM,"mdsvex, by default, works with the "),Ag=d(NM,"CODE",{});var yM=E(Ag);Ng=g(yM,".svx"),yM.forEach(k),yg=g(NM," file extension. We’ll get to writing actual "),bg=d(NM,"CODE",{});var bM=E(bg);xg=g(bM,".svx"),bM.forEach(k),Cg=g(NM," files in a bit. First, let’s look at a feature of mdsvex: layouts."),NM.forEach(k),Og=m(a),jg=d(a,"P",{});var xM=E(jg);Dg=g(xM,"First, add the following to "),Tg=d(xM,"CODE",{});var CM=E(Tg);Ig=g(CM,"svelte.config.js"),CM.forEach(k),Mg=g(xM,":"),xM.forEach(k),Wg=m(a),qg=d(a,"PRE",{class:!0});var OM=E(qg);Bg=d(OM,"CODE",{class:!0});var jM=E(Bg);Rg=g(jM,'//svelte.config.js\n\nconst sveltePreprocess = require("svelte-preprocess");\nconst postcss = require("./postcss.config");\nconst { mdsvex } = require(\'mdsvex\');\n'),_g=d(jM,"SPAN",{class:!0});var DM=E(_g);Lg=d(DM,"SPAN",{class:!0});var TM=E(Lg);Gg=g(TM,"+"),TM.forEach(k),Fg=g(DM," const path = require('path');"),DM.forEach(k),$g=g(jM,"\nconst createPreprocessors = ({ sourceMap }) => [\n"),Hg=d(jM,"SPAN",{class:!0});var IM=E(Hg);Jg=d(IM,"SPAN",{class:!0}),E(Jg).forEach(k),zg=g(IM,"  mdsvex({\n"),IM.forEach(k),Yg=d(jM,"SPAN",{class:!0});var MM=E(Yg);Kg=d(MM,"SPAN",{class:!0});var WM=E(Kg);Vg=g(WM,"+"),WM.forEach(k),Ug=g(MM,"   layout: {\n"),Qg=d(MM,"SPAN",{class:!0});var qM=E(Qg);Xg=g(qM,"+"),qM.forEach(k),Zg=g(MM,"       blog: path.resolve(__dirname, 'src/layouts/blog.svelte'),\n"),ak=d(MM,"SPAN",{class:!0});var BM=E(ak);sk=g(BM,"+"),BM.forEach(k),tk=g(MM,"       default: path.resolve(__dirname, 'src/layouts/default.svelte'),\n"),MM.forEach(k),ek=d(jM,"SPAN",{class:!0});var RM=E(ek);ok=d(RM,"SPAN",{class:!0}),E(ok).forEach(k),nk=g(RM,"   }"),RM.forEach(k),rk=g(jM,"\n..."),jM.forEach(k),OM.forEach(k),ck=m(a),lk=d(a,"P",{});var _M=E(lk);ik=g(_M,"We’re specifying two layout files here, one for the blog posts, and one as our default layout. We could just specify the single layout for blog posts if we wanted, but I wanted to highlight that we can specify multiple layouts for our "),pk=d(_M,"CODE",{});var LM=E(pk);hk=g(LM,".svx"),LM.forEach(k),fk=g(_M," files. It’s important to note here that any layout files you specify in this config "),uk=d(_M,"EM",{});var GM=E(uk);vk=g(GM,"need to exist at the location you specify"),GM.forEach(k),dk=g(_M," or you’ll get an ugly error."),_M.forEach(k),Ek=m(a),gk=d(a,"P",{});var FM=E(gk);kk=g(FM,"Now, let’s create the layout files in the directory we specified. Create a directory at "),mk=d(FM,"CODE",{});var $M=E(mk);Sk=g($M,"src/layouts"),$M.forEach(k),Pk=g(FM,". Then create two files: "),wk=d(FM,"CODE",{});var HM=E(wk);Ak=g(HM,"src/layouts/blog.svelte"),HM.forEach(k),Nk=g(FM," and "),yk=d(FM,"CODE",{});var JM=E(yk);bk=g(JM,"src/layouts/default.svelte"),JM.forEach(k),xk=g(FM,"."),FM.forEach(k),Ck=m(a),Ok=d(a,"P",{});var zM=E(Ok);jk=g(zM,"Then, we’ll just put the same code in both for now so we don’t run into any compile-time errors."),zM.forEach(k),Dk=m(a),Tk=d(a,"PRE",{class:!0});var YM=E(Tk);Ik=d(YM,"CODE",{class:!0});var KM=E(Ik);Mk=d(KM,"SPAN",{class:!0});var VM=E(Mk);Wk=d(VM,"SPAN",{class:!0});var UM=E(Wk);qk=d(UM,"SPAN",{class:!0});var QM=E(qk);Bk=g(QM,"<"),QM.forEach(k),Rk=g(UM,"script"),UM.forEach(k),_k=d(VM,"SPAN",{class:!0});var XM=E(_k);Lk=g(XM,">"),XM.forEach(k),VM.forEach(k),Gk=d(KM,"SPAN",{class:!0});var ZM=E(Gk);Fk=d(ZM,"SPAN",{class:!0});var aW=E(Fk);$k=d(aW,"SPAN",{class:!0});var sW=E($k);Hk=g(sW,"//script stuff will go here"),sW.forEach(k),Jk=g(aW,"\n"),aW.forEach(k),ZM.forEach(k),zk=d(KM,"SPAN",{class:!0});var tW=E(zk);Yk=d(tW,"SPAN",{class:!0});var eW=E(Yk);Kk=d(eW,"SPAN",{class:!0});var oW=E(Kk);Vk=g(oW,"</"),oW.forEach(k),Uk=g(eW,"script"),eW.forEach(k),Qk=d(tW,"SPAN",{class:!0});var nW=E(Qk);Xk=g(nW,">"),nW.forEach(k),tW.forEach(k),Zk=g(KM,"\n\n"),am=d(KM,"SPAN",{class:!0});var rW=E(am);sm=d(rW,"SPAN",{class:!0});var cW=E(sm);tm=d(cW,"SPAN",{class:!0});var lW=E(tm);em=g(lW,"<"),lW.forEach(k),om=g(cW,"slot"),cW.forEach(k),nm=d(rW,"SPAN",{class:!0});var iW=E(nm);rm=g(iW,">"),iW.forEach(k),rW.forEach(k),cm=g(KM,"\n    "),lm=d(KM,"SPAN",{class:!0});var pW=E(lm);im=g(pW,"\x3c!-- your mdsvex content will load here --\x3e"),pW.forEach(k),pm=g(KM,"\n"),hm=d(KM,"SPAN",{class:!0});var hW=E(hm);fm=d(hW,"SPAN",{class:!0});var fW=E(fm);um=d(fW,"SPAN",{class:!0});var uW=E(um);vm=g(uW,"</"),uW.forEach(k),dm=g(fW,"slot"),fW.forEach(k),Em=d(hW,"SPAN",{class:!0});var vW=E(Em);gm=g(vW,">"),vW.forEach(k),hW.forEach(k),km=g(KM,"\n\n"),mm=d(KM,"SPAN",{class:!0});var dW=E(mm);Sm=d(dW,"SPAN",{class:!0});var EW=E(Sm);Pm=d(EW,"SPAN",{class:!0});var gW=E(Pm);wm=g(gW,"<"),gW.forEach(k),Am=g(EW,"style"),EW.forEach(k),Nm=d(dW,"SPAN",{class:!0});var kW=E(Nm);ym=g(kW,">"),kW.forEach(k),dW.forEach(k),bm=d(KM,"SPAN",{class:!0});var mW=E(bm);xm=d(mW,"SPAN",{class:!0});var SW=E(xm);Cm=d(SW,"SPAN",{class:!0});var PW=E(Cm);Om=g(PW,"/* style stuff will go here */"),PW.forEach(k),jm=g(SW,"\n"),SW.forEach(k),mW.forEach(k),Dm=d(KM,"SPAN",{class:!0});var wW=E(Dm);Tm=d(wW,"SPAN",{class:!0});var AW=E(Tm);Im=d(AW,"SPAN",{class:!0});var NW=E(Im);Mm=g(NW,"</"),NW.forEach(k),Wm=g(AW,"style"),AW.forEach(k),qm=d(wW,"SPAN",{class:!0});var yW=E(qm);Bm=g(yW,">"),yW.forEach(k),wW.forEach(k),KM.forEach(k),YM.forEach(k),Rm=m(a),_m=d(a,"P",{});var bW=E(_m);Lm=g(bW,"Okay, we have layout files. The next step is to add our "),Gm=d(bW,"CODE",{});var xW=E(Gm);Fm=g(xW,"svx"),xW.forEach(k),$m=g(bW," files to make sure everything works the way we expect it to."),bW.forEach(k),Hm=m(a),Jm=d(a,"P",{});var CW=E(Jm);zm=g(CW,"In your "),Ym=d(CW,"CODE",{});var OW=E(Ym);Km=g(OW,"src/routes"),OW.forEach(k),Vm=g(CW," directory, create a subdirectory named "),Um=d(CW,"CODE",{});var jW=E(Um);Qm=g(jW,"mdsvex"),jW.forEach(k),Xm=g(CW,". In that directory create a file called "),Zm=d(CW,"CODE",{});var DW=E(Zm);aS=g(DW,"index.svx"),DW.forEach(k),sS=g(CW," and put the following in that file:"),CW.forEach(k),tS=m(a),eS=d(a,"PRE",{class:!0});var TW=E(eS);oS=d(TW,"CODE",{class:!0});var IW=E(oS);nS=d(IW,"SPAN",{class:!0});var MW=E(nS);rS=g(MW,"---"),MW.forEach(k),cS=g(IW,"\nlayout: blog\ntitle: mdsvex test\ngreeting: Hello, Sapper, Tailwind, and mdsvex!\n\n"),lS=d(IW,"SPAN",{class:!0});var WW=E(lS);iS=g(WW,"---"),WW.forEach(k),pS=g(IW,"\n\n"),hS=d(IW,"SPAN",{class:!0});var qW=E(hS);fS=d(qW,"SPAN",{class:!0});var BW=E(fS);uS=g(BW,"##"),BW.forEach(k),vS=g(qW," {title}"),qW.forEach(k),dS=g(IW,"\n\n"),ES=d(IW,"SPAN",{class:!0});var RW=E(ES);gS=d(RW,"SPAN",{class:!0});var _W=E(gS);kS=g(_W,"##"),_W.forEach(k),mS=g(RW," Hey! This is my mdsvex component!"),RW.forEach(k),SS=g(IW,"\n\nNow this is some content, just because we need to have some content here."),IW.forEach(k),TW.forEach(k),PS=m(a),wS=d(a,"P",{});var LW=E(wS);AS=g(LW,"mdsvex allows us to use "),NS=d(LW,"CODE",{});var GW=E(NS);yS=g(GW,".svx"),GW.forEach(k),bS=g(LW," files in place of "),xS=d(LW,"CODE",{});var FW=E(xS);CS=g(FW,".svelte"),FW.forEach(k),OS=g(LW," files in our routes and components. So, what we’re doing here is setting up a test route so we can make sure everything’s wired up correctly. Because Sapper uses file-based routing, and once we’re finished with the next step, this file will be available at "),jS=d(LW,"A",{href:!0,rel:!0});var $W=E(jS);DS=g($W,"http://localhost:3000/mdsvex"),$W.forEach(k),TS=g(LW,"."),LW.forEach(k),IS=m(a),MS=d(a,"P",{});var HW=E(MS);WS=g(HW,"Okay, there are two small things that we need to take care of to make sure this will run. First, we need to edit "),qS=d(HW,"CODE",{});var JW=E(qS);BS=g(JW,"package.json"),JW.forEach(k),RS=g(HW," and modify our "),_S=d(HW,"CODE",{});var zW=E(_S);LS=g(zW,"dev"),zW.forEach(k),GS=g(HW," script with an "),FS=d(HW,"CODE",{});var YW=E(FS);$S=g(YW,"--ext"),YW.forEach(k),HS=g(HW," argument, telling the sapper command that we want it to look for both "),JS=d(HW,"CODE",{});var KW=E(JS);zS=g(KW,".svx"),KW.forEach(k),YS=g(HW," and "),KS=d(HW,"CODE",{});var VW=E(KS);VS=g(VW,".svelte"),VW.forEach(k),US=g(HW," files. Just replace the entire "),QS=d(HW,"CODE",{});var UW=E(QS);XS=g(UW,'"dev": "sapper dev",'),UW.forEach(k),ZS=g(HW," line with:"),HW.forEach(k),aP=m(a),sP=d(a,"PRE",{class:!0});var QW=E(sP);tP=d(QW,"CODE",{class:!0});var XW=E(tP);eP=d(XW,"SPAN",{class:!0});var ZW=E(eP);oP=g(ZW,'"dev"'),ZW.forEach(k),nP=d(XW,"SPAN",{class:!0});var aq=E(nP);rP=g(aq,":"),aq.forEach(k),cP=g(XW," "),lP=d(XW,"SPAN",{class:!0});var sq=E(lP);iP=g(sq,"\"sapper dev --ext '.svelte .svx'\""),sq.forEach(k),pP=d(XW,"SPAN",{class:!0});var tq=E(pP);hP=g(tq,","),tq.forEach(k),XW.forEach(k),QW.forEach(k),fP=m(a),uP=d(a,"P",{});var eq=E(uP);vP=g(eq,"We also need to tell "),dP=d(eq,"CODE",{});var oq=E(dP);EP=g(oq,"rollup-plugin-svelte"),oq.forEach(k),gP=g(eq," to look for those extensions. Sapper has configurations for both the client and the server, so we need to make sure the code is in both configuration objects. Open up "),kP=d(eq,"CODE",{});var nq=E(kP);mP=g(nq,"rollup.config.json"),nq.forEach(k),SP=g(eq," and add "),PP=d(eq,"CODE",{});var rq=E(PP);wP=g(rq,"extensions: ['.svx', '.svelte'],"),rq.forEach(k),AP=g(eq," to the svelte plugin config of "),NP=d(eq,"STRONG",{});var cq=E(NP);yP=g(cq,"both"),cq.forEach(k),bP=g(eq," the "),xP=d(eq,"CODE",{});var lq=E(xP);CP=g(lq,"client"),lq.forEach(k),OP=g(eq," and "),jP=d(eq,"CODE",{});var iq=E(jP);DP=g(iq,"server"),iq.forEach(k),TP=g(eq," sections of that config file:"),eq.forEach(k),IP=m(a),MP=d(a,"PRE",{class:!0});var pq=E(MP);WP=d(pq,"CODE",{class:!0});var hq=E(WP);qP=g(hq,"client"),BP=d(hq,"SPAN",{class:!0});var fq=E(BP);RP=g(fq,":"),fq.forEach(k),_P=g(hq," "),LP=d(hq,"SPAN",{class:!0});var uq=E(LP);GP=g(uq,"{"),uq.forEach(k),FP=g(hq,"\n    plugins"),$P=d(hq,"SPAN",{class:!0});var vq=E($P);HP=g(vq,":"),vq.forEach(k),JP=g(hq," "),zP=d(hq,"SPAN",{class:!0});var dq=E(zP);YP=g(dq,"["),dq.forEach(k),KP=g(hq,"\n\t\t\t"),VP=d(hq,"SPAN",{class:!0});var Eq=E(VP);UP=g(Eq,"// blahblahblah config stuff"),Eq.forEach(k),QP=g(hq,"\n\t\t\t"),XP=d(hq,"SPAN",{class:!0});var gq=E(XP);ZP=g(gq,"svelte"),gq.forEach(k),aw=d(hq,"SPAN",{class:!0});var kq=E(aw);sw=g(kq,"("),kq.forEach(k),tw=d(hq,"SPAN",{class:!0});var mq=E(tw);ew=g(mq,"{"),mq.forEach(k),ow=g(hq,"\n                extensions"),nw=d(hq,"SPAN",{class:!0});var Sq=E(nw);rw=g(Sq,":"),Sq.forEach(k),cw=g(hq," "),lw=d(hq,"SPAN",{class:!0});var Pq=E(lw);iw=g(Pq,"["),Pq.forEach(k),pw=d(hq,"SPAN",{class:!0});var wq=E(pw);hw=g(wq,"'.svx'"),wq.forEach(k),fw=d(hq,"SPAN",{class:!0});var Aq=E(fw);uw=g(Aq,","),Aq.forEach(k),vw=g(hq," "),dw=d(hq,"SPAN",{class:!0});var Nq=E(dw);Ew=g(Nq,"'.svelte'"),Nq.forEach(k),gw=d(hq,"SPAN",{class:!0});var yq=E(gw);kw=g(yq,"]"),yq.forEach(k),mw=d(hq,"SPAN",{class:!0});var bq=E(mw);Sw=g(bq,","),bq.forEach(k),Pw=g(hq,"\n            "),ww=d(hq,"SPAN",{class:!0});var xq=E(ww);Aw=g(xq,"// blahblahblah more config stuff"),xq.forEach(k),Nw=g(hq,"\nserver"),yw=d(hq,"SPAN",{class:!0});var Cq=E(yw);bw=g(Cq,":"),Cq.forEach(k),xw=g(hq," "),Cw=d(hq,"SPAN",{class:!0});var Oq=E(Cw);Ow=g(Oq,"{"),Oq.forEach(k),jw=g(hq,"\n    plugins"),Dw=d(hq,"SPAN",{class:!0});var jq=E(Dw);Tw=g(jq,":"),jq.forEach(k),Iw=g(hq," "),Mw=d(hq,"SPAN",{class:!0});var Dq=E(Mw);Ww=g(Dq,"["),Dq.forEach(k),qw=g(hq,"\n\t\t\t"),Bw=d(hq,"SPAN",{class:!0});var Tq=E(Bw);Rw=g(Tq,"// blahblahblah config stuff"),Tq.forEach(k),_w=g(hq,"\n\t\t\t"),Lw=d(hq,"SPAN",{class:!0});var Iq=E(Lw);Gw=g(Iq,"svelte"),Iq.forEach(k),Fw=d(hq,"SPAN",{class:!0});var Mq=E(Fw);$w=g(Mq,"("),Mq.forEach(k),Hw=d(hq,"SPAN",{class:!0});var Wq=E(Hw);Jw=g(Wq,"{"),Wq.forEach(k),zw=g(hq,"\n                extensions"),Yw=d(hq,"SPAN",{class:!0});var qq=E(Yw);Kw=g(qq,":"),qq.forEach(k),Vw=g(hq," "),Uw=d(hq,"SPAN",{class:!0});var Bq=E(Uw);Qw=g(Bq,"["),Bq.forEach(k),Xw=d(hq,"SPAN",{class:!0});var Rq=E(Xw);Zw=g(Rq,"'.svx'"),Rq.forEach(k),aA=d(hq,"SPAN",{class:!0});var _q=E(aA);sA=g(_q,","),_q.forEach(k),tA=g(hq," "),eA=d(hq,"SPAN",{class:!0});var Lq=E(eA);oA=g(Lq,"'.svelte'"),Lq.forEach(k),nA=d(hq,"SPAN",{class:!0});var Gq=E(nA);rA=g(Gq,"]"),Gq.forEach(k),cA=d(hq,"SPAN",{class:!0});var Fq=E(cA);lA=g(Fq,","),Fq.forEach(k),iA=g(hq,"\n            "),pA=d(hq,"SPAN",{class:!0});var $q=E(pA);hA=g($q,"// blahblahblah more config stuff"),$q.forEach(k),hq.forEach(k),pq.forEach(k),fA=m(a),uA=d(a,"P",{});var Hq=E(uA);vA=g(Hq,"Finally! You should be able to run the whole thing with "),dA=d(Hq,"CODE",{});var Jq=E(dA);EA=g(Jq,"pnpm run dev"),Jq.forEach(k),gA=g(Hq,"."),Hq.forEach(k),kA=m(a),mA=d(a,"P",{});var zq=E(mA);SA=g(zq,"Do that and navigate to "),PA=d(zq,"A",{href:!0,rel:!0});var Yq=E(PA);wA=g(Yq,"http://localhost/mdsvex"),Yq.forEach(k),AA=g(zq," to see the glory of what you’ve been working so hard on."),zq.forEach(k),NA=m(a),yA=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),xA=m(a),CA=d(a,"P",{});var Kq=E(CA);OA=g(Kq,"Okay, so it’s ugly. But, hey, it works! Let’s add some stuff to the "),jA=d(Kq,"CODE",{});var Vq=E(jA);DA=g(Vq,"blog.svelte"),Vq.forEach(k),TA=g(Kq," layout file so we can check out how variables in the "),IA=d(Kq,"CODE",{});var Uq=E(IA);MA=g(Uq,".svx"),Uq.forEach(k),WA=g(Kq," frontmatter can be used by the "),qA=d(Kq,"CODE",{});var Qq=E(qA);BA=g(Qq,".svelte"),Qq.forEach(k),RA=g(Kq," file. Just replace everything in blog.svelte with the following:"),Kq.forEach(k),_A=m(a),LA=d(a,"PRE",{class:!0});var Xq=E(LA);GA=d(Xq,"CODE",{class:!0});var Zq=E(GA);FA=d(Zq,"SPAN",{class:!0});var aB=E(FA);$A=d(aB,"SPAN",{class:!0});var sB=E($A);HA=d(sB,"SPAN",{class:!0});var tB=E(HA);JA=g(tB,"<"),tB.forEach(k),zA=g(sB,"script"),sB.forEach(k),YA=d(aB,"SPAN",{class:!0});var eB=E(YA);KA=g(eB,">"),eB.forEach(k),aB.forEach(k),VA=d(Zq,"SPAN",{class:!0});var oB=E(VA);UA=d(oB,"SPAN",{class:!0});var nB=E(UA);QA=d(nB,"SPAN",{class:!0});var rB=E(QA);XA=g(rB,"export"),rB.forEach(k),ZA=g(nB," "),aN=d(nB,"SPAN",{class:!0});var cB=E(aN);sN=g(cB,"let"),cB.forEach(k),tN=g(nB," greeting"),eN=d(nB,"SPAN",{class:!0});var lB=E(eN);oN=g(lB,";"),lB.forEach(k),nN=g(nB,"\n"),nB.forEach(k),oB.forEach(k),rN=d(Zq,"SPAN",{class:!0});var iB=E(rN);cN=d(iB,"SPAN",{class:!0});var pB=E(cN);lN=d(pB,"SPAN",{class:!0});var hB=E(lN);iN=g(hB,"</"),hB.forEach(k),pN=g(pB,"script"),pB.forEach(k),hN=d(iB,"SPAN",{class:!0});var fB=E(hN);fN=g(fB,">"),fB.forEach(k),iB.forEach(k),uN=g(Zq,"\n\n"),vN=d(Zq,"SPAN",{class:!0});var uB=E(vN);dN=d(uB,"SPAN",{class:!0});var vB=E(dN);EN=d(vB,"SPAN",{class:!0});var dB=E(EN);gN=g(dB,"<"),dB.forEach(k),kN=g(vB,"main"),vB.forEach(k),mN=d(uB,"SPAN",{class:!0});var EB=E(mN);SN=g(EB,">"),EB.forEach(k),uB.forEach(k),PN=g(Zq,"\n    "),wN=d(Zq,"SPAN",{class:!0});var gB=E(wN);AN=d(gB,"SPAN",{class:!0});var kB=E(AN);NN=d(kB,"SPAN",{class:!0});var mB=E(NN);yN=g(mB,"<"),mB.forEach(k),bN=g(kB,"h1"),kB.forEach(k),xN=d(gB,"SPAN",{class:!0});var SB=E(xN);CN=g(SB,">"),SB.forEach(k),gB.forEach(k),ON=d(Zq,"SPAN",{class:!0});var PB=E(ON);jN=d(PB,"SPAN",{class:!0});var wB=E(jN);DN=g(wB,"{"),wB.forEach(k),TN=g(PB,"greeting"),IN=d(PB,"SPAN",{class:!0});var AB=E(IN);MN=g(AB,"}"),AB.forEach(k),PB.forEach(k),WN=d(Zq,"SPAN",{class:!0});var NB=E(WN);qN=d(NB,"SPAN",{class:!0});var yB=E(qN);BN=d(yB,"SPAN",{class:!0});var bB=E(BN);RN=g(bB,"</"),bB.forEach(k),_N=g(yB,"h1"),yB.forEach(k),LN=d(NB,"SPAN",{class:!0});var xB=E(LN);GN=g(xB,">"),xB.forEach(k),NB.forEach(k),FN=g(Zq,"\n    "),$N=d(Zq,"SPAN",{class:!0});var CB=E($N);HN=d(CB,"SPAN",{class:!0});var OB=E(HN);JN=d(OB,"SPAN",{class:!0});var jB=E(JN);zN=g(jB,"<"),jB.forEach(k),YN=g(OB,"slot"),OB.forEach(k),KN=d(CB,"SPAN",{class:!0});var DB=E(KN);VN=g(DB,">"),DB.forEach(k),CB.forEach(k),UN=d(Zq,"SPAN",{class:!0});var TB=E(UN);QN=d(TB,"SPAN",{class:!0});var IB=E(QN);XN=d(IB,"SPAN",{class:!0});var MB=E(XN);ZN=g(MB,"</"),MB.forEach(k),ay=g(IB,"slot"),IB.forEach(k),sy=d(TB,"SPAN",{class:!0});var WB=E(sy);ty=g(WB,">"),WB.forEach(k),TB.forEach(k),ey=g(Zq,"\n"),oy=d(Zq,"SPAN",{class:!0});var qB=E(oy);ny=d(qB,"SPAN",{class:!0});var BB=E(ny);ry=d(BB,"SPAN",{class:!0});var RB=E(ry);cy=g(RB,"</"),RB.forEach(k),ly=g(BB,"main"),BB.forEach(k),iy=d(qB,"SPAN",{class:!0});var _B=E(iy);py=g(_B,">"),_B.forEach(k),qB.forEach(k),hy=g(Zq,"\n\n"),fy=d(Zq,"SPAN",{class:!0});var LB=E(fy);uy=d(LB,"SPAN",{class:!0});var GB=E(uy);vy=d(GB,"SPAN",{class:!0});var FB=E(vy);dy=g(FB,"<"),FB.forEach(k),Ey=g(GB,"style"),GB.forEach(k),gy=d(LB,"SPAN",{class:!0});var $B=E(gy);ky=g($B,">"),$B.forEach(k),LB.forEach(k),my=d(Zq,"SPAN",{class:!0});var HB=E(my);Sy=d(HB,"SPAN",{class:!0});var JB=E(Sy);Py=d(JB,"SPAN",{class:!0});var zB=E(Py);wy=g(zB,"main"),zB.forEach(k),Ay=g(JB," "),Ny=d(JB,"SPAN",{class:!0});var YB=E(Ny);yy=g(YB,"{"),YB.forEach(k),by=g(JB,"\n\t\t"),xy=d(JB,"SPAN",{class:!0});var KB=E(xy);Cy=g(KB,"width"),KB.forEach(k),Oy=d(JB,"SPAN",{class:!0});var VB=E(Oy);jy=g(VB,":"),VB.forEach(k),Dy=g(JB," 50%"),Ty=d(JB,"SPAN",{class:!0});var UB=E(Ty);Iy=g(UB,";"),UB.forEach(k),My=g(JB,"\n\t\t"),Wy=d(JB,"SPAN",{class:!0});var QB=E(Wy);qy=g(QB,"margin"),QB.forEach(k),By=d(JB,"SPAN",{class:!0});var XB=E(By);Ry=g(XB,":"),XB.forEach(k),_y=g(JB," 3rem auto"),Ly=d(JB,"SPAN",{class:!0});var ZB=E(Ly);Gy=g(ZB,";"),ZB.forEach(k),Fy=g(JB,"\n\t"),$y=d(JB,"SPAN",{class:!0});var aR=E($y);Hy=g(aR,"}"),aR.forEach(k),Jy=g(JB,"\n\t"),zy=d(JB,"SPAN",{class:!0});var sR=E(zy);Yy=g(sR,":global(h1)"),sR.forEach(k),Ky=g(JB," "),Vy=d(JB,"SPAN",{class:!0});var tR=E(Vy);Uy=g(tR,"{"),tR.forEach(k),Qy=g(JB,"\n\t\t"),Xy=d(JB,"SPAN",{class:!0});var eR=E(Xy);Zy=d(eR,"SPAN",{class:!0});var oR=E(Zy);ab=g(oR,"@apply"),oR.forEach(k),sb=g(eR," text-3xl font-black text-red-500"),tb=d(eR,"SPAN",{class:!0});var nR=E(tb);eb=g(nR,";"),nR.forEach(k),eR.forEach(k),ob=g(JB,"\n\t"),nb=d(JB,"SPAN",{class:!0});var rR=E(nb);rb=g(rR,"}"),rR.forEach(k),cb=g(JB,"\n\t"),lb=d(JB,"SPAN",{class:!0});var cR=E(lb);ib=g(cR,":global(h2)"),cR.forEach(k),pb=g(JB," "),hb=d(JB,"SPAN",{class:!0});var lR=E(hb);fb=g(lR,"{"),lR.forEach(k),ub=g(JB,"\n\t\t"),vb=d(JB,"SPAN",{class:!0});var iR=E(vb);db=d(iR,"SPAN",{class:!0});var pR=E(db);Eb=g(pR,"@apply"),pR.forEach(k),gb=g(iR," text-2xl font-bold mt-12"),kb=d(iR,"SPAN",{class:!0});var hR=E(kb);mb=g(hR,";"),hR.forEach(k),iR.forEach(k),Sb=g(JB,"\n\t"),Pb=d(JB,"SPAN",{class:!0});var fR=E(Pb);wb=g(fR,"}"),fR.forEach(k),Ab=g(JB,"\n\t"),Nb=d(JB,"SPAN",{class:!0});var uR=E(Nb);yb=g(uR,":global(h3)"),uR.forEach(k),bb=g(JB," "),xb=d(JB,"SPAN",{class:!0});var vR=E(xb);Cb=g(vR,"{"),vR.forEach(k),Ob=g(JB,"\n\t\t"),jb=d(JB,"SPAN",{class:!0});var dR=E(jb);Db=d(dR,"SPAN",{class:!0});var ER=E(Db);Tb=g(ER,"@apply"),ER.forEach(k),Ib=g(dR," text-xl font-bold mt-8"),Mb=d(dR,"SPAN",{class:!0});var gR=E(Mb);Wb=g(gR,";"),gR.forEach(k),dR.forEach(k),qb=g(JB,"\n\t"),Bb=d(JB,"SPAN",{class:!0});var kR=E(Bb);Rb=g(kR,"}"),kR.forEach(k),_b=g(JB,"\n\t"),Lb=d(JB,"SPAN",{class:!0});var mR=E(Lb);Gb=g(mR,":global(p)"),mR.forEach(k),Fb=g(JB," "),$b=d(JB,"SPAN",{class:!0});var SR=E($b);Hb=g(SR,"{"),SR.forEach(k),Jb=g(JB,"\n\t\t"),zb=d(JB,"SPAN",{class:!0});var PR=E(zb);Yb=d(PR,"SPAN",{class:!0});var wR=E(Yb);Kb=g(wR,"@apply"),wR.forEach(k),Vb=g(PR," mt-4"),Ub=d(PR,"SPAN",{class:!0});var AR=E(Ub);Qb=g(AR,";"),AR.forEach(k),PR.forEach(k),Xb=g(JB,"\n\t"),Zb=d(JB,"SPAN",{class:!0});var NR=E(Zb);ax=g(NR,"}"),NR.forEach(k),sx=g(JB,"\n"),JB.forEach(k),HB.forEach(k),tx=d(Zq,"SPAN",{class:!0});var yR=E(tx);ex=d(yR,"SPAN",{class:!0});var bR=E(ex);ox=d(bR,"SPAN",{class:!0});var xR=E(ox);nx=g(xR,"</"),xR.forEach(k),rx=g(bR,"style"),bR.forEach(k),cx=d(yR,"SPAN",{class:!0});var CR=E(cx);lx=g(CR,">"),CR.forEach(k),yR.forEach(k),Zq.forEach(k),Xq.forEach(k),ix=m(a),px=d(a,"IMG",{src:!0,alt:!0,loading:!0,width:!0,height:!0}),fx=m(a),ux=d(a,"P",{});var OR=E(ux);vx=g(OR,"Okay, now you can see that "),dx=d(OR,"CODE",{});var jR=E(dx);Ex=g(jR,"greeting"),jR.forEach(k),gx=g(OR,", defined in the frontmatter of "),kx=d(OR,"CODE",{});var DR=E(kx);mx=g(DR,"index.svx"),DR.forEach(k),Sx=g(OR," can be used as a prop in the "),Px=d(OR,"CODE",{});var TR=E(Px);wx=g(TR,"blog.svelte"),TR.forEach(k),Ax=g(OR," layout file. We can also use the frontmatter properties in the "),Nx=d(OR,"CODE",{});var IR=E(Nx);yx=g(IR,".svx"),IR.forEach(k),bx=g(OR," file itself. We can also use Tailwind’s "),xx=d(OR,"CODE",{});var MR=E(xx);Cx=g(MR,"@apply"),MR.forEach(k),Ox=g(OR," syntax to, well, apply Tailwind class styles to the markdown content that’s added to our layout component. There’s a "),jx=d(OR,"EM",{});var WR=E(jx);Dx=g(WR,"lot"),WR.forEach(k),Tx=g(OR," more you can do with mdsvex, and we’ll get into some of it in the next part."),OR.forEach(k),Ix=m(a),Mx=d(a,"P",{});var qR=E(Mx);Wx=g(qR,"That’s enough for one tutorial. We’ll learn how to set up what we’ve got so that we can create a blog with all of these cool libraries in the next part."),qR.forEach(k),this.h()},h(){S(n,"href","https://svelte.dev/"),S(n,"rel","nofollow"),S(l,"href","https://sapper.svelte.dev/"),S(l,"rel","nofollow"),S(h,"href","https://tailwindcss.com/"),S(h,"rel","nofollow"),S(y,"href","https://mdsvex.pngwn.io/"),S(y,"rel","nofollow"),S(R,"href","https://svelte.dev/blog/whats-the-deal-with-sveltekit"),S(R,"rel","nofollow"),S(F,"id","getting-started"),S(Y,"href","https://www.npmjs.com/package/degit"),S(Y,"rel","nofollow"),S(Z,"href","https://github.com/sveltejs/sapper-template"),S(Z,"rel","nofollow"),S(na,"href","https://github.com/babichjacob/sapper-postcss-template"),S(na,"rel","nofollow"),S(fa,"class","token comment"),S(pa,"class","language-bash"),S(ia,"class","language-bash code-pre line-numbers"),S(_a,"class","token comment"),S(Ba,"class","language-bash"),S(qa,"class","language-bash code-pre line-numbers"),Ja.src!==(za="img/posts/12-15-20/12-15-20_Screenshot01.png")&&S(Ja,"src","img/posts/12-15-20/12-15-20_Screenshot01.png"),S(Ja,"alt","my-blog directory structure"),S(Ja,"loading","lazy"),S(Ja,"class","small-img"),S(Ja,"width","225"),S(Ja,"height","450"),S(Za,"href","https://pnpm.js.org/en/"),S(Za,"rel","nofollow"),S(ls,"href","https://pnpm.js.org/en/motivation"),S(ls,"rel","nofollow"),S(gs,"class","token function"),S(Ss,"class","token function"),S(As,"class","token function"),S(Es,"class","language-bash"),S(ds,"class","language-bash code-pre line-numbers"),S(Ls,"class","token function"),S($s,"class","token function"),S(_s,"class","language-bash"),S(Rs,"class","language-bash code-pre line-numbers"),S(Qs,"class","token function"),S(Us,"class","language-bash"),S(Vs,"class","language-bash code-pre line-numbers"),ot.src!==(nt="img/posts/12-15-20/12-15-20_Screenshot02.png")&&S(ot,"src","img/posts/12-15-20/12-15-20_Screenshot02.png"),S(ot,"alt","Terminal output of pnpm run dev command"),S(ot,"loading","lazy"),S(ot,"width","800"),S(ot,"height","450"),S(it,"href","http://localhost:3000"),S(it,"rel","nofollow"),ut.src!==(vt="img/posts/12-15-20/12-15-20_Screenshot03.png")&&S(ut,"src","img/posts/12-15-20/12-15-20_Screenshot03.png"),S(ut,"alt","Heeey! It's Sapper with Tailwind!"),S(ut,"loading","lazy"),S(ut,"width","800"),S(ut,"height","450"),S(Et,"id","getting-comfortable"),S(xt,"class","token comment"),S(jt,"class","token keyword"),S(It,"class","token operator"),S(qt,"class","token function"),S(Rt,"class","token punctuation"),S(Lt,"class","token string"),S(Ft,"class","token punctuation"),S(Ht,"class","token punctuation"),S(Yt,"class","token keyword"),S(Ut,"class","token operator"),S(Zt,"class","token function"),S(se,"class","token punctuation"),S(ee,"class","token string"),S(ne,"class","token punctuation"),S(ce,"class","token punctuation"),S(pe,"class","token keyword"),S(ue,"class","token function-variable function"),S(Ee,"class","token operator"),S(me,"class","token punctuation"),S(we,"class","token punctuation"),S(ye,"class","token punctuation"),S(Pe,"class","token parameter"),S(xe,"class","token punctuation"),S(je,"class","token operator"),S(Ie,"class","token punctuation"),S(qe,"class","token function"),S(Re,"class","token punctuation"),S(Le,"class","token punctuation"),S($e,"class","token punctuation"),S(ze,"class","token operator"),S(Ve,"class","token punctuation"),S(Xe,"class","token operator"),S(so,"class","token string"),S(eo,"class","token punctuation"),S(ro,"class","token punctuation"),S(lo,"class","token punctuation"),S(ho,"class","token punctuation"),S(vo,"class","token punctuation"),S(go,"class","token punctuation"),S(mo,"class","token punctuation"),S(wo,"class","token comment"),S(yo,"class","token punctuation"),S(xo,"class","token punctuation"),S(jo,"class","token punctuation"),S(Io,"class","token operator"),S(qo,"class","token punctuation"),S(_o,"class","token punctuation"),S(Fo,"class","token comment"),S(Jo,"class","token operator"),S(Ko,"class","token function"),S(Uo,"class","token punctuation"),S(Xo,"class","token punctuation"),S(sn,"class","token operator"),S(on,"class","token boolean"),S(cn,"class","token punctuation"),S(pn,"class","token punctuation"),S(fn,"class","token punctuation"),S(dn,"class","token punctuation"),S(gn,"class","token punctuation"),S(bt,"class","language-js"),S(yt,"class","language-js code-pre line-numbers"),S(Dn,"class","token comment"),S(Mn,"class","token keyword"),S(Bn,"class","token operator"),S(Ln,"class","token function"),S(Fn,"class","token punctuation"),S(Hn,"class","token string"),S(zn,"class","token punctuation"),S(Kn,"class","token punctuation"),S(Qn,"class","token keyword"),S(ar,"class","token operator"),S(er,"class","token function"),S(nr,"class","token punctuation"),S(cr,"class","token string"),S(ir,"class","token punctuation"),S(hr,"class","token punctuation"),S(vr,"class","token keyword"),S(gr,"class","token operator"),S(Sr,"class","token function"),S(wr,"class","token punctuation"),S(Nr,"class","token string"),S(br,"class","token punctuation"),S(Cr,"class","token punctuation"),S(Dr,"class","token keyword"),S(Mr,"class","token operator"),S(Br,"class","token function"),S(_r,"class","token punctuation"),S(Gr,"class","token string"),S($r,"class","token punctuation"),S(Jr,"class","token punctuation"),S(Kr,"class","token keyword"),S(Qr,"class","token operator"),S(ac,"class","token string"),S(tc,"class","token punctuation"),S(nc,"class","token keyword"),S(lc,"class","token operator"),S(hc,"class","token operator"),S(vc,"class","token string"),S(Ec,"class","token punctuation"),S(mc,"class","token punctuation"),S(wc,"class","token operator"),S(yc,"class","token punctuation"),S(Cc,"class","token operator"),S(Dc,"class","token punctuation"),S(Mc,"class","token punctuation"),S(Bc,"class","token function"),S(_c,"class","token punctuation"),S(Fc,"class","token punctuation"),S(Hc,"class","token punctuation"),S(Yc,"class","token comment"),S(Uc,"class","token comment"),S(Zc,"class","token operator"),S(tl,"class","token operator"),S(nl,"class","token function"),S(cl,"class","token punctuation"),S(il,"class","token punctuation"),S(fl,"class","token operator"),S(dl,"class","token punctuation"),S(kl,"class","token string"),S(Sl,"class","token punctuation"),S(Al,"class","token punctuation"),S(bl,"class","token operator"),S(Ol,"class","token punctuation"),S(Tl,"class","token operator"),S(Wl,"class","token boolean"),S(Rl,"class","token punctuation"),S(Gl,"class","token punctuation"),S($l,"class","token punctuation"),S(zl,"class","token punctuation"),S(Kl,"class","token punctuation"),S(Ql,"class","token punctuation"),S(Zl,"class","token punctuation"),S(si,"class","token punctuation"),S(oi,"class","token punctuation"),S(ri,"class","token punctuation"),S(li,"class","token function"),S(pi,"class","token punctuation"),S(ui,"class","token punctuation"),S(di,"class","token punctuation"),S(ki,"class","token punctuation"),S(Si,"class","token punctuation"),S(jn,"class","language-js"),S(On,"class","language-js code-pre line-numbers"),S(ji,"class","token comment"),S(Ii,"class","token keyword"),S(qi,"class","token punctuation"),S(_i,"class","token punctuation"),S(Fi,"class","token operator"),S(Ji,"class","token function"),S(Yi,"class","token punctuation"),S(Vi,"class","token string"),S(Qi,"class","token punctuation"),S(Zi,"class","token punctuation"),S(tp,"class","token punctuation"),S(np,"class","token operator"),S(lp,"class","token punctuation"),S(hp,"class","token operator"),S(vp,"class","token punctuation"),S(gp,"class","token operator"),S(Sp,"class","token punctuation"),S(Ap,"class","token string"),S(yp,"class","token punctuation"),S(Cp,"class","token string"),S(jp,"class","token punctuation"),S(Ip,"class","token punctuation"),S(Wp,"class","token punctuation"),S(Rp,"class","token operator"),S(Gp,"class","token punctuation"),S(Hp,"class","token function-variable function"),S(zp,"class","token operator"),S(Vp,"class","token punctuation"),S(Qp,"class","token parameter"),S(Zp,"class","token punctuation"),S(th,"class","token operator"),S(nh,"class","token punctuation"),S(lh,"class","token comment"),S(hh,"class","token comment"),S(vh,"class","token comment"),S(gh,"class","token comment"),S(Sh,"class","token operator"),S(wh,"class","token function"),S(Nh,"class","token punctuation"),S(xh,"class","token punctuation"),S(Oh,"class","token punctuation"),S(Th,"class","token comment"),S(Wh,"class","token operator"),S(Bh,"class","token punctuation"),S(_h,"class","token operator"),S(Fh,"class","token punctuation"),S(Hh,"class","token function"),S(zh,"class","token punctuation"),S(Vh,"class","token regex-delimiter"),S(Qh,"class","token regex-source language-regex"),S(Zh,"class","token regex-delimiter"),S(sf,"class","token regex-flags"),S(Kh,"class","token regex"),S(ef,"class","token punctuation"),S(nf,"class","token punctuation"),S(cf,"class","token punctuation"),S(pf,"class","token function"),S(ff,"class","token punctuation"),S(vf,"class","token punctuation"),S(gf,"class","token punctuation"),S(Sf,"class","token punctuation"),S(Af,"class","token punctuation"),S(bf,"class","token operator"),S(Of,"class","token punctuation"),S(Ef,"class","token parameter"),S(Df,"class","token punctuation"),S(Mf,"class","token operator"),S(Bf,"class","token punctuation"),S(_f,"class","token punctuation"),S(Ff,"class","token punctuation"),S(Hf,"class","token punctuation"),S(Yf,"class","token operator"),S(Uf,"class","token boolean"),S(Xf,"class","token punctuation"),S(su,"class","token punctuation"),S(eu,"class","token punctuation"),S(ru,"class","token punctuation"),S(lu,"class","token punctuation"),S(hu,"class","token operator"),S(vu,"class","token punctuation"),S(gu,"class","token operator"),S(Su,"class","token punctuation"),S(wu,"class","token punctuation"),S(Nu,"class","token punctuation"),S(xu,"class","token punctuation"),S(Ou,"class","token punctuation"),S(Tu,"class","token operator"),S(Wu,"class","token punctuation"),S(Ru,"class","token operator"),S(Gu,"class","token punctuation"),S($u,"class","token punctuation"),S(Ju,"class","token punctuation"),S(Ku,"class","token punctuation"),S(Uu,"class","token punctuation"),S(Zu,"class","token operator"),S(tv,"class","token punctuation"),S(ov,"class","token punctuation"),S(rv,"class","token punctuation"),S(iv,"class","token punctuation"),S(hv,"class","token punctuation"),S(Oi,"class","language-js"),S(Ci,"class","language-js code-pre line-numbers"),S(wv,"href","https://svelte.dev/docs#class_name"),S(wv,"rel","nofollow"),S(Wv,"class","token rule"),S(Rv,"class","token string"),S(Lv,"class","token punctuation"),S(Mv,"class","token atrule"),S($v,"class","token comment"),S(Yv,"class","token rule"),S(Uv,"class","token string"),S(Xv,"class","token punctuation"),S(zv,"class","token atrule"),S(sd,"class","token comment"),S(nd,"class","token rule"),S(ld,"class","token string"),S(pd,"class","token punctuation"),S(od,"class","token atrule"),S(ud,"class","token comment"),S(Iv,"class","language-css"),S(Tv,"class","language-css code-pre line-numbers"),S(wd,"class","token rule"),S(Pd,"class","token atrule"),S(bd,"class","token punctuation"),S(Od,"class","token punctuation"),S(Sd,"class","language-css"),S(md,"class","language-css code-pre line-numbers"),S(Hd,"id","adding-mdsvex"),S(Kd,"href","https://mdsvex.pngwn.io/"),S(Kd,"rel","nofollow"),S(Qd,"href","https://twitter.com/evilpingwin"),S(Qd,"rel","nofollow"),S(aE,"href","https://mdxjs.com/"),S(aE,"rel","nofollow"),S(iE,"class","token function"),S(fE,"class","token function"),S(lE,"class","language-bash"),S(cE,"class","language-bash code-pre line-numbers"),S(WE,"class","token prefix inserted"),S(ME,"class","token inserted-sign inserted"),S(LE,"class","token prefix inserted"),S(_E,"class","token inserted-sign inserted"),S(TE,"class","language-diff"),S(DE,"class","language-diff code-pre line-numbers"),S(Lg,"class","token prefix inserted"),S(_g,"class","token inserted-sign inserted"),S(Jg,"class","token prefix unchanged"),S(Hg,"class","token unchanged"),S(Kg,"class","token prefix inserted"),S(Qg,"class","token prefix inserted"),S(ak,"class","token prefix inserted"),S(Yg,"class","token inserted-sign inserted"),S(ok,"class","token prefix unchanged"),S(ek,"class","token unchanged"),S(Bg,"class","language-diff"),S(qg,"class","language-diff code-pre line-numbers"),S(qk,"class","token punctuation"),S(Wk,"class","token tag"),S(_k,"class","token punctuation"),S(Mk,"class","token tag"),S($k,"class","token comment"),S(Fk,"class","token language-javascript"),S(Gk,"class","token script"),S(Kk,"class","token punctuation"),S(Yk,"class","token tag"),S(Qk,"class","token punctuation"),S(zk,"class","token tag"),S(tm,"class","token punctuation"),S(sm,"class","token tag"),S(nm,"class","token punctuation"),S(am,"class","token tag"),S(lm,"class","token comment"),S(um,"class","token punctuation"),S(fm,"class","token tag"),S(Em,"class","token punctuation"),S(hm,"class","token tag"),S(Pm,"class","token punctuation"),S(Sm,"class","token tag"),S(Nm,"class","token punctuation"),S(mm,"class","token tag"),S(Cm,"class","token comment"),S(xm,"class","token language-css"),S(bm,"class","token style"),S(Im,"class","token punctuation"),S(Tm,"class","token tag"),S(qm,"class","token punctuation"),S(Dm,"class","token tag"),S(Ik,"class","language-svelte"),S(Tk,"class","language-svelte code-pre line-numbers"),S(nS,"class","token hr punctuation"),S(lS,"class","token hr punctuation"),S(fS,"class","token punctuation"),S(hS,"class","token title important"),S(gS,"class","token punctuation"),S(ES,"class","token title important"),S(oS,"class","language-markdown"),S(eS,"class","language-markdown code-pre line-numbers"),S(jS,"href","http://localhost:3000/mdsvex"),S(jS,"rel","nofollow"),S(eP,"class","token property"),S(nP,"class","token operator"),S(lP,"class","token string"),S(pP,"class","token punctuation"),S(tP,"class","language-json"),S(sP,"class","language-json code-pre line-numbers"),S(BP,"class","token operator"),S(LP,"class","token punctuation"),S($P,"class","token operator"),S(zP,"class","token punctuation"),S(VP,"class","token comment"),S(XP,"class","token function"),S(aw,"class","token punctuation"),S(tw,"class","token punctuation"),S(nw,"class","token operator"),S(lw,"class","token punctuation"),S(pw,"class","token string"),S(fw,"class","token punctuation"),S(dw,"class","token string"),S(gw,"class","token punctuation"),S(mw,"class","token punctuation"),S(ww,"class","token comment"),S(yw,"class","token operator"),S(Cw,"class","token punctuation"),S(Dw,"class","token operator"),S(Mw,"class","token punctuation"),S(Bw,"class","token comment"),S(Lw,"class","token function"),S(Fw,"class","token punctuation"),S(Hw,"class","token punctuation"),S(Yw,"class","token operator"),S(Uw,"class","token punctuation"),S(Xw,"class","token string"),S(aA,"class","token punctuation"),S(eA,"class","token string"),S(nA,"class","token punctuation"),S(cA,"class","token punctuation"),S(pA,"class","token comment"),S(WP,"class","language-js"),S(MP,"class","language-js code-pre line-numbers"),S(PA,"href","http://localhost/mdsvex"),S(PA,"rel","nofollow"),yA.src!==(bA="img/posts/12-15-20/12-15-20_Screenshot04.png")&&S(yA,"src","img/posts/12-15-20/12-15-20_Screenshot04.png"),S(yA,"alt","Behold! Your mdsvex component in action!"),S(yA,"loading","lazy"),S(yA,"width","800"),S(yA,"height","450"),S(HA,"class","token punctuation"),S($A,"class","token tag"),S(YA,"class","token punctuation"),S(FA,"class","token tag"),S(QA,"class","token keyword"),S(aN,"class","token keyword"),S(eN,"class","token punctuation"),S(UA,"class","token language-javascript"),S(VA,"class","token script"),S(lN,"class","token punctuation"),S(cN,"class","token tag"),S(hN,"class","token punctuation"),S(rN,"class","token tag"),S(EN,"class","token punctuation"),S(dN,"class","token tag"),S(mN,"class","token punctuation"),S(vN,"class","token tag"),S(NN,"class","token punctuation"),S(AN,"class","token tag"),S(xN,"class","token punctuation"),S(wN,"class","token tag"),S(jN,"class","token punctuation"),S(IN,"class","token punctuation"),S(ON,"class","token language-javascript"),S(BN,"class","token punctuation"),S(qN,"class","token tag"),S(LN,"class","token punctuation"),S(WN,"class","token tag"),S(JN,"class","token punctuation"),S(HN,"class","token tag"),S(KN,"class","token punctuation"),S($N,"class","token tag"),S(XN,"class","token punctuation"),S(QN,"class","token tag"),S(sy,"class","token punctuation"),S(UN,"class","token tag"),S(ry,"class","token punctuation"),S(ny,"class","token tag"),S(iy,"class","token punctuation"),S(oy,"class","token tag"),S(vy,"class","token punctuation"),S(uy,"class","token tag"),S(gy,"class","token punctuation"),S(fy,"class","token tag"),S(Py,"class","token selector"),S(Ny,"class","token punctuation"),S(xy,"class","token property"),S(Oy,"class","token punctuation"),S(Ty,"class","token punctuation"),S(Wy,"class","token property"),S(By,"class","token punctuation"),S(Ly,"class","token punctuation"),S($y,"class","token punctuation"),S(zy,"class","token selector"),S(Vy,"class","token punctuation"),S(Zy,"class","token rule"),S(tb,"class","token punctuation"),S(Xy,"class","token atrule"),S(nb,"class","token punctuation"),S(lb,"class","token selector"),S(hb,"class","token punctuation"),S(db,"class","token rule"),S(kb,"class","token punctuation"),S(vb,"class","token atrule"),S(Pb,"class","token punctuation"),S(Nb,"class","token selector"),S(xb,"class","token punctuation"),S(Db,"class","token rule"),S(Mb,"class","token punctuation"),S(jb,"class","token atrule"),S(Bb,"class","token punctuation"),S(Lb,"class","token selector"),S($b,"class","token punctuation"),S(Yb,"class","token rule"),S(Ub,"class","token punctuation"),S(zb,"class","token atrule"),S(Zb,"class","token punctuation"),S(Sy,"class","token language-css"),S(my,"class","token style"),S(ox,"class","token punctuation"),S(ex,"class","token tag"),S(cx,"class","token punctuation"),S(tx,"class","token tag"),S(GA,"class","language-svelte"),S(LA,"class","language-svelte code-pre line-numbers"),px.src!==(hx="img/posts/12-15-20/12-15-20_Screenshot05.png")&&S(px,"src","img/posts/12-15-20/12-15-20_Screenshot05.png"),S(px,"alt","Very stylish version of an mdsvex component"),S(px,"loading","lazy"),S(px,"width","800"),S(px,"height","450")},m(a,f){P(a,s,f),w(s,t),P(a,e,f),P(a,o,f),w(o,n),w(n,r),w(o,c),w(o,l),w(l,i),w(o,p),w(o,h),w(h,A),w(o,N),w(o,y),w(y,b),w(o,x),P(a,C,f),P(a,O,f),w(O,j),P(a,D,f),P(a,T,f),w(T,I),w(I,M),P(a,W,f),P(a,q,f),w(q,B),w(q,R),w(R,_),w(q,L),P(a,G,f),P(a,F,f),w(F,$),P(a,H,f),P(a,J,f),w(J,z),w(J,Y),w(Y,K),w(J,V),w(J,U),w(U,Q),w(J,X),w(J,Z),w(Z,aa),w(J,sa),P(a,ta,f),P(a,ea,f),w(ea,oa),w(ea,na),w(na,ra),w(ea,ca),P(a,la,f),P(a,ia,f),w(ia,pa),w(pa,ha),w(pa,fa),w(fa,ua),P(a,va,f),P(a,da,f),w(da,Ea),w(da,ga),w(ga,ka),w(da,ma),w(da,Sa),w(Sa,Pa),w(da,wa),w(da,Aa),w(Aa,Na),w(da,ya),w(da,ba),w(ba,xa),w(da,Ca),w(da,Oa),w(Oa,ja),w(da,Da),w(da,Ta),w(Ta,Ia),w(da,Ma),P(a,Wa,f),P(a,qa,f),w(qa,Ba),w(Ba,Ra),w(Ba,_a),w(_a,La),P(a,Ga,f),P(a,Fa,f),w(Fa,$a),P(a,Ha,f),P(a,Ja,f),P(a,Ya,f),P(a,Ka,f),w(Ka,Va),P(a,Ua,f),P(a,Qa,f),w(Qa,Xa),w(Qa,Za),w(Za,as),w(Qa,ss),w(Qa,ts),w(ts,es),w(Qa,os),w(Qa,ns),w(ns,rs),w(Qa,cs),w(Qa,ls),w(ls,is),w(Qa,ps),P(a,hs,f),P(a,fs,f),w(fs,us),P(a,vs,f),P(a,ds,f),w(ds,Es),w(Es,gs),w(gs,ks),w(Es,ms),w(Es,Ss),w(Ss,Ps),w(Es,ws),w(Es,As),w(As,Ns),P(a,ys,f),P(a,bs,f),w(bs,xs),w(bs,Cs),w(Cs,Os),w(bs,js),w(bs,Ds),w(Ds,Ts),w(bs,Is),P(a,Ms,f),P(a,Ws,f),w(Ws,qs),P(a,Bs,f),P(a,Rs,f),w(Rs,_s),w(_s,Ls),w(Ls,Gs),w(_s,Fs),w(_s,$s),w($s,Hs),P(a,Js,f),P(a,zs,f),w(zs,Ys),P(a,Ks,f),P(a,Vs,f),w(Vs,Us),w(Us,Qs),w(Qs,Xs),w(Us,Zs),P(a,at,f),P(a,st,f),w(st,tt),P(a,et,f),P(a,ot,f),P(a,rt,f),P(a,ct,f),w(ct,lt),w(ct,it),w(it,pt),w(ct,ht),P(a,ft,f),P(a,ut,f),P(a,dt,f),P(a,Et,f),w(Et,gt),P(a,kt,f),P(a,mt,f),w(mt,St),w(mt,Pt),w(Pt,wt),w(mt,At),P(a,Nt,f),P(a,yt,f),w(yt,bt),w(bt,xt),w(xt,Ct),w(bt,Ot),w(bt,jt),w(jt,Dt),w(bt,Tt),w(bt,It),w(It,Mt),w(bt,Wt),w(bt,qt),w(qt,Bt),w(bt,Rt),w(Rt,_t),w(bt,Lt),w(Lt,Gt),w(bt,Ft),w(Ft,$t),w(bt,Ht),w(Ht,Jt),w(bt,zt),w(bt,Yt),w(Yt,Kt),w(bt,Vt),w(bt,Ut),w(Ut,Qt),w(bt,Xt),w(bt,Zt),w(Zt,ae),w(bt,se),w(se,te),w(bt,ee),w(ee,oe),w(bt,ne),w(ne,re),w(bt,ce),w(ce,le),w(bt,ie),w(bt,pe),w(pe,he),w(bt,fe),w(bt,ue),w(ue,ve),w(bt,de),w(bt,Ee),w(Ee,ge),w(bt,ke),w(bt,me),w(me,Se),w(bt,Pe),w(Pe,we),w(we,Ae),w(Pe,Ne),w(Pe,ye),w(ye,be),w(bt,xe),w(xe,Ce),w(bt,Oe),w(bt,je),w(je,De),w(bt,Te),w(bt,Ie),w(Ie,Me),w(bt,We),w(bt,qe),w(qe,Be),w(bt,Re),w(Re,_e),w(bt,Le),w(Le,Ge),w(bt,Fe),w(bt,$e),w($e,He),w(bt,Je),w(bt,ze),w(ze,Ye),w(bt,Ke),w(bt,Ve),w(Ve,Ue),w(bt,Qe),w(bt,Xe),w(Xe,Ze),w(bt,ao),w(bt,so),w(so,to),w(bt,eo),w(eo,oo),w(bt,no),w(bt,ro),w(ro,co),w(bt,lo),w(lo,io),w(bt,po),w(bt,ho),w(ho,fo),w(bt,uo),w(bt,vo),w(vo,Eo),w(bt,go),w(go,ko),w(bt,mo),w(mo,So),w(bt,Po),w(bt,wo),w(wo,Ao),w(bt,No),w(bt,yo),w(yo,bo),w(bt,xo),w(xo,Co),w(bt,Oo),w(bt,jo),w(jo,Do),w(bt,To),w(bt,Io),w(Io,Mo),w(bt,Wo),w(bt,qo),w(qo,Bo),w(bt,Ro),w(bt,_o),w(_o,Lo),w(bt,Go),w(bt,Fo),w(Fo,$o),w(bt,Ho),w(bt,Jo),w(Jo,zo),w(bt,Yo),w(bt,Ko),w(Ko,Vo),w(bt,Uo),w(Uo,Qo),w(bt,Xo),w(Xo,Zo),w(bt,an),w(bt,sn),w(sn,tn),w(bt,en),w(bt,on),w(on,nn),w(bt,rn),w(bt,cn),w(cn,ln),w(bt,pn),w(pn,hn),w(bt,fn),w(fn,un),w(bt,vn),w(bt,dn),w(dn,En),w(bt,gn),w(gn,kn),P(a,mn,f),P(a,Sn,f),w(Sn,Pn),w(Sn,wn),w(wn,An),w(Sn,Nn),w(Sn,yn),w(yn,bn),w(Sn,xn),P(a,Cn,f),P(a,On,f),w(On,jn),w(jn,Dn),w(Dn,Tn),w(jn,In),w(jn,Mn),w(Mn,Wn),w(jn,qn),w(jn,Bn),w(Bn,Rn),w(jn,_n),w(jn,Ln),w(Ln,Gn),w(jn,Fn),w(Fn,$n),w(jn,Hn),w(Hn,Jn),w(jn,zn),w(zn,Yn),w(jn,Kn),w(Kn,Vn),w(jn,Un),w(jn,Qn),w(Qn,Xn),w(jn,Zn),w(jn,ar),w(ar,sr),w(jn,tr),w(jn,er),w(er,or),w(jn,nr),w(nr,rr),w(jn,cr),w(cr,lr),w(jn,ir),w(ir,pr),w(jn,hr),w(hr,fr),w(jn,ur),w(jn,vr),w(vr,dr),w(jn,Er),w(jn,gr),w(gr,kr),w(jn,mr),w(jn,Sr),w(Sr,Pr),w(jn,wr),w(wr,Ar),w(jn,Nr),w(Nr,yr),w(jn,br),w(br,xr),w(jn,Cr),w(Cr,Or),w(jn,jr),w(jn,Dr),w(Dr,Tr),w(jn,Ir),w(jn,Mr),w(Mr,Wr),w(jn,qr),w(jn,Br),w(Br,Rr),w(jn,_r),w(_r,Lr),w(jn,Gr),w(Gr,Fr),w(jn,$r),w($r,Hr),w(jn,Jr),w(Jr,zr),w(jn,Yr),w(jn,Kr),w(Kr,Vr),w(jn,Ur),w(jn,Qr),w(Qr,Xr),w(jn,Zr),w(jn,ac),w(ac,sc),w(jn,tc),w(tc,ec),w(jn,oc),w(jn,nc),w(nc,rc),w(jn,cc),w(jn,lc),w(lc,ic),w(jn,pc),w(jn,hc),w(hc,fc),w(jn,uc),w(jn,vc),w(vc,dc),w(jn,Ec),w(Ec,gc),w(jn,kc),w(jn,mc),w(mc,Sc),w(jn,Pc),w(jn,wc),w(wc,Ac),w(jn,Nc),w(jn,yc),w(yc,bc),w(jn,xc),w(jn,Cc),w(Cc,Oc),w(jn,jc),w(jn,Dc),w(Dc,Tc),w(jn,Ic),w(jn,Mc),w(Mc,Wc),w(jn,qc),w(jn,Bc),w(Bc,Rc),w(jn,_c),w(_c,Lc),w(jn,Gc),w(jn,Fc),w(Fc,$c),w(jn,Hc),w(Hc,Jc),w(jn,zc),w(jn,Yc),w(Yc,Kc),w(jn,Vc),w(jn,Uc),w(Uc,Qc),w(jn,Xc),w(jn,Zc),w(Zc,al),w(jn,sl),w(jn,tl),w(tl,el),w(jn,ol),w(jn,nl),w(nl,rl),w(jn,cl),w(cl,ll),w(jn,il),w(il,pl),w(jn,hl),w(jn,fl),w(fl,ul),w(jn,vl),w(jn,dl),w(dl,El),w(jn,gl),w(jn,kl),w(kl,ml),w(jn,Sl),w(Sl,Pl),w(jn,wl),w(jn,Al),w(Al,Nl),w(jn,yl),w(jn,bl),w(bl,xl),w(jn,Cl),w(jn,Ol),w(Ol,jl),w(jn,Dl),w(jn,Tl),w(Tl,Il),w(jn,Ml),w(jn,Wl),w(Wl,ql),w(jn,Bl),w(jn,Rl),w(Rl,_l),w(jn,Ll),w(jn,Gl),w(Gl,Fl),w(jn,$l),w($l,Hl),w(jn,Jl),w(jn,zl),w(zl,Yl),w(jn,Kl),w(Kl,Vl),w(jn,Ul),w(jn,Ql),w(Ql,Xl),w(jn,Zl),w(Zl,ai),w(jn,si),w(si,ti),w(jn,ei),w(jn,oi),w(oi,ni),w(jn,ri),w(ri,ci),w(jn,li),w(li,ii),w(jn,pi),w(pi,hi),w(jn,fi),w(jn,ui),w(ui,vi),w(jn,di),w(di,Ei),w(jn,gi),w(jn,ki),w(ki,mi),w(jn,Si),w(Si,Pi),P(a,wi,f),P(a,Ai,f),w(Ai,Ni),w(Ai,yi),w(yi,bi),P(a,xi,f),P(a,Ci,f),w(Ci,Oi),w(Oi,ji),w(ji,Di),w(Oi,Ti),w(Oi,Ii),w(Ii,Mi),w(Oi,Wi),w(Oi,qi),w(qi,Bi),w(Oi,Ri),w(Oi,_i),w(_i,Li),w(Oi,Gi),w(Oi,Fi),w(Fi,$i),w(Oi,Hi),w(Oi,Ji),w(Ji,zi),w(Oi,Yi),w(Yi,Ki),w(Oi,Vi),w(Vi,Ui),w(Oi,Qi),w(Qi,Xi),w(Oi,Zi),w(Zi,ap),w(Oi,sp),w(Oi,tp),w(tp,ep),w(Oi,op),w(Oi,np),w(np,rp),w(Oi,cp),w(Oi,lp),w(lp,ip),w(Oi,pp),w(Oi,hp),w(hp,fp),w(Oi,up),w(Oi,vp),w(vp,dp),w(Oi,Ep),w(Oi,gp),w(gp,kp),w(Oi,mp),w(Oi,Sp),w(Sp,Pp),w(Oi,wp),w(Oi,Ap),w(Ap,Np),w(Oi,yp),w(yp,bp),w(Oi,xp),w(Oi,Cp),w(Cp,Op),w(Oi,jp),w(jp,Dp),w(Oi,Tp),w(Oi,Ip),w(Ip,Mp),w(Oi,Wp),w(Wp,qp),w(Oi,Bp),w(Oi,Rp),w(Rp,_p),w(Oi,Lp),w(Oi,Gp),w(Gp,Fp),w(Oi,$p),w(Oi,Hp),w(Hp,Jp),w(Oi,zp),w(zp,Yp),w(Oi,Kp),w(Oi,Vp),w(Vp,Up),w(Oi,Qp),w(Qp,Xp),w(Oi,Zp),w(Zp,ah),w(Oi,sh),w(Oi,th),w(th,eh),w(Oi,oh),w(Oi,nh),w(nh,rh),w(Oi,ch),w(Oi,lh),w(lh,ih),w(Oi,ph),w(Oi,hh),w(hh,fh),w(Oi,uh),w(Oi,vh),w(vh,dh),w(Oi,Eh),w(Oi,gh),w(gh,kh),w(Oi,mh),w(Oi,Sh),w(Sh,Ph),w(Oi,wh),w(wh,Ah),w(Oi,Nh),w(Nh,yh),w(Oi,bh),w(Oi,xh),w(xh,Ch),w(Oi,Oh),w(Oh,jh),w(Oi,Dh),w(Oi,Th),w(Th,Ih),w(Oi,Mh),w(Oi,Wh),w(Wh,qh),w(Oi,Bh),w(Bh,Rh),w(Oi,_h),w(_h,Lh),w(Oi,Gh),w(Oi,Fh),w(Fh,$h),w(Oi,Hh),w(Hh,Jh),w(Oi,zh),w(zh,Yh),w(Oi,Kh),w(Kh,Vh),w(Vh,Uh),w(Kh,Qh),w(Qh,Xh),w(Kh,Zh),w(Zh,af),w(Kh,sf),w(sf,tf),w(Oi,ef),w(ef,of),w(Oi,nf),w(nf,rf),w(Oi,cf),w(cf,lf),w(Oi,pf),w(pf,hf),w(Oi,ff),w(ff,uf),w(Oi,vf),w(vf,df),w(Oi,Ef),w(Ef,gf),w(gf,kf),w(Ef,mf),w(Ef,Sf),w(Sf,Pf),w(Ef,wf),w(Ef,Af),w(Af,Nf),w(Ef,yf),w(Ef,bf),w(bf,xf),w(Ef,Cf),w(Ef,Of),w(Of,jf),w(Oi,Df),w(Df,Tf),w(Oi,If),w(Oi,Mf),w(Mf,Wf),w(Oi,qf),w(Oi,Bf),w(Bf,Rf),w(Oi,_f),w(_f,Lf),w(Oi,Gf),w(Oi,Ff),w(Ff,$f),w(Oi,Hf),w(Hf,Jf),w(Oi,zf),w(Oi,Yf),w(Yf,Kf),w(Oi,Vf),w(Oi,Uf),w(Uf,Qf),w(Oi,Xf),w(Xf,Zf),w(Oi,au),w(Oi,su),w(su,tu),w(Oi,eu),w(eu,ou),w(Oi,nu),w(Oi,ru),w(ru,cu),w(Oi,lu),w(lu,iu),w(Oi,pu),w(Oi,hu),w(hu,fu),w(Oi,uu),w(Oi,vu),w(vu,du),w(Oi,Eu),w(Oi,gu),w(gu,ku),w(Oi,mu),w(Oi,Su),w(Su,Pu),w(Oi,wu),w(wu,Au),w(Oi,Nu),w(Nu,yu),w(Oi,bu),w(Oi,xu),w(xu,Cu),w(Oi,Ou),w(Ou,ju),w(Oi,Du),w(Oi,Tu),w(Tu,Iu),w(Oi,Mu),w(Oi,Wu),w(Wu,qu),w(Oi,Bu),w(Oi,Ru),w(Ru,_u),w(Oi,Lu),w(Oi,Gu),w(Gu,Fu),w(Oi,$u),w($u,Hu),w(Oi,Ju),w(Ju,zu),w(Oi,Yu),w(Oi,Ku),w(Ku,Vu),w(Oi,Uu),w(Uu,Qu),w(Oi,Xu),w(Oi,Zu),w(Zu,av),w(Oi,sv),w(Oi,tv),w(tv,ev),w(Oi,ov),w(ov,nv),w(Oi,rv),w(rv,cv);w(Oi,lv),w(Oi,iv),w(iv,pv),w(Oi,hv),w(hv,fv),P(a,uv,f),P(a,vv,f),w(vv,dv),w(vv,Ev),w(Ev,gv),w(vv,kv),w(vv,mv),w(mv,Sv),w(vv,Pv),w(vv,wv),w(wv,Av),w(vv,Nv),P(a,yv,f),P(a,bv,f),w(bv,xv),w(bv,Cv),w(Cv,Ov),w(bv,jv),P(a,Dv,f),P(a,Tv,f),w(Tv,Iv),w(Iv,Mv),w(Mv,Wv),w(Wv,qv),w(Mv,Bv),w(Mv,Rv),w(Rv,_v),w(Mv,Lv),w(Lv,Gv),w(Iv,Fv),w(Iv,$v),w($v,Hv),w(Iv,Jv),w(Iv,zv),w(zv,Yv),w(Yv,Kv),w(zv,Vv),w(zv,Uv),w(Uv,Qv),w(zv,Xv),w(Xv,Zv),w(Iv,ad),w(Iv,sd),w(sd,td),w(Iv,ed),w(Iv,od),w(od,nd),w(nd,rd),w(od,cd),w(od,ld),w(ld,id),w(od,pd),w(pd,hd),w(Iv,fd),w(Iv,ud),w(ud,vd),P(a,dd,f),P(a,Ed,f),w(Ed,gd),P(a,kd,f),P(a,md,f),w(md,Sd),w(Sd,Pd),w(Pd,wd),w(wd,Ad),w(Pd,Nd),w(Sd,yd),w(Sd,bd),w(bd,xd),w(Sd,Cd),w(Sd,Od),w(Od,jd),P(a,Dd,f),P(a,Td,f),w(Td,Id),w(Td,Md),w(Md,Wd),w(Td,qd),w(Td,Bd),w(Bd,Rd),w(Td,_d),P(a,Ld,f),P(a,Gd,f),w(Gd,Fd),P(a,$d,f),P(a,Hd,f),w(Hd,Jd),P(a,zd,f),P(a,Yd,f),w(Yd,Kd),w(Kd,Vd),w(Yd,Ud),w(Yd,Qd),w(Qd,Xd),w(Yd,Zd),w(Yd,aE),w(aE,sE),w(Yd,tE),P(a,eE,f),P(a,oE,f),w(oE,nE),P(a,rE,f),P(a,cE,f),w(cE,lE),w(lE,iE),w(iE,pE),w(lE,hE),w(lE,fE),w(fE,uE),w(lE,vE),P(a,dE,f),P(a,EE,f),w(EE,gE),w(EE,kE),w(kE,mE),w(EE,SE),P(a,PE,f),P(a,wE,f),w(wE,AE),w(wE,NE),w(NE,yE),w(wE,bE),w(wE,xE),w(xE,CE),w(wE,OE),P(a,jE,f),P(a,DE,f),w(DE,TE),w(TE,IE),w(TE,ME),w(ME,WE),w(WE,qE),w(ME,BE),w(TE,RE),w(TE,_E),w(_E,LE),w(LE,GE),w(_E,FE),w(TE,$E),P(a,HE,f),P(a,JE,f),w(JE,zE),w(JE,YE),w(YE,KE),w(JE,VE),w(JE,UE),w(UE,QE),w(JE,XE),w(JE,ZE),w(ZE,ag),w(JE,sg),w(JE,tg),w(tg,eg),w(JE,og),w(JE,ng),w(ng,rg),w(JE,cg),w(JE,lg),w(lg,ig),w(JE,pg),w(JE,hg),w(hg,fg),w(JE,ug),w(JE,vg),w(vg,dg),w(JE,Eg),w(JE,gg),w(gg,kg),w(JE,mg),P(a,Sg,f),P(a,Pg,f),w(Pg,wg),w(Pg,Ag),w(Ag,Ng),w(Pg,yg),w(Pg,bg),w(bg,xg),w(Pg,Cg),P(a,Og,f),P(a,jg,f),w(jg,Dg),w(jg,Tg),w(Tg,Ig),w(jg,Mg),P(a,Wg,f),P(a,qg,f),w(qg,Bg),w(Bg,Rg),w(Bg,_g),w(_g,Lg),w(Lg,Gg),w(_g,Fg),w(Bg,$g),w(Bg,Hg),w(Hg,Jg),w(Hg,zg),w(Bg,Yg),w(Yg,Kg),w(Kg,Vg),w(Yg,Ug),w(Yg,Qg),w(Qg,Xg),w(Yg,Zg),w(Yg,ak),w(ak,sk),w(Yg,tk),w(Bg,ek),w(ek,ok),w(ek,nk),w(Bg,rk),P(a,ck,f),P(a,lk,f),w(lk,ik),w(lk,pk),w(pk,hk),w(lk,fk),w(lk,uk),w(uk,vk),w(lk,dk),P(a,Ek,f),P(a,gk,f),w(gk,kk),w(gk,mk),w(mk,Sk),w(gk,Pk),w(gk,wk),w(wk,Ak),w(gk,Nk),w(gk,yk),w(yk,bk),w(gk,xk),P(a,Ck,f),P(a,Ok,f),w(Ok,jk),P(a,Dk,f),P(a,Tk,f),w(Tk,Ik),w(Ik,Mk),w(Mk,Wk),w(Wk,qk),w(qk,Bk),w(Wk,Rk),w(Mk,_k),w(_k,Lk),w(Ik,Gk),w(Gk,Fk),w(Fk,$k),w($k,Hk),w(Fk,Jk),w(Ik,zk),w(zk,Yk),w(Yk,Kk),w(Kk,Vk),w(Yk,Uk),w(zk,Qk),w(Qk,Xk),w(Ik,Zk),w(Ik,am),w(am,sm),w(sm,tm),w(tm,em),w(sm,om),w(am,nm),w(nm,rm),w(Ik,cm),w(Ik,lm),w(lm,im),w(Ik,pm),w(Ik,hm),w(hm,fm),w(fm,um),w(um,vm),w(fm,dm),w(hm,Em),w(Em,gm),w(Ik,km),w(Ik,mm),w(mm,Sm),w(Sm,Pm),w(Pm,wm),w(Sm,Am),w(mm,Nm),w(Nm,ym),w(Ik,bm),w(bm,xm),w(xm,Cm),w(Cm,Om),w(xm,jm),w(Ik,Dm),w(Dm,Tm),w(Tm,Im),w(Im,Mm),w(Tm,Wm),w(Dm,qm),w(qm,Bm),P(a,Rm,f),P(a,_m,f),w(_m,Lm),w(_m,Gm),w(Gm,Fm),w(_m,$m),P(a,Hm,f),P(a,Jm,f),w(Jm,zm),w(Jm,Ym),w(Ym,Km),w(Jm,Vm),w(Jm,Um),w(Um,Qm),w(Jm,Xm),w(Jm,Zm),w(Zm,aS),w(Jm,sS),P(a,tS,f),P(a,eS,f),w(eS,oS),w(oS,nS),w(nS,rS),w(oS,cS),w(oS,lS),w(lS,iS),w(oS,pS),w(oS,hS),w(hS,fS),w(fS,uS),w(hS,vS),w(oS,dS),w(oS,ES),w(ES,gS),w(gS,kS),w(ES,mS),w(oS,SS),P(a,PS,f),P(a,wS,f),w(wS,AS),w(wS,NS),w(NS,yS),w(wS,bS),w(wS,xS),w(xS,CS),w(wS,OS),w(wS,jS),w(jS,DS),w(wS,TS),P(a,IS,f),P(a,MS,f),w(MS,WS),w(MS,qS),w(qS,BS),w(MS,RS),w(MS,_S),w(_S,LS),w(MS,GS),w(MS,FS),w(FS,$S),w(MS,HS),w(MS,JS),w(JS,zS),w(MS,YS),w(MS,KS),w(KS,VS),w(MS,US),w(MS,QS),w(QS,XS),w(MS,ZS),P(a,aP,f),P(a,sP,f),w(sP,tP),w(tP,eP),w(eP,oP),w(tP,nP),w(nP,rP),w(tP,cP),w(tP,lP),w(lP,iP),w(tP,pP),w(pP,hP),P(a,fP,f),P(a,uP,f),w(uP,vP),w(uP,dP),w(dP,EP),w(uP,gP),w(uP,kP),w(kP,mP),w(uP,SP),w(uP,PP),w(PP,wP),w(uP,AP),w(uP,NP),w(NP,yP),w(uP,bP),w(uP,xP),w(xP,CP),w(uP,OP),w(uP,jP),w(jP,DP),w(uP,TP),P(a,IP,f),P(a,MP,f),w(MP,WP),w(WP,qP),w(WP,BP),w(BP,RP),w(WP,_P),w(WP,LP),w(LP,GP),w(WP,FP),w(WP,$P),w($P,HP),w(WP,JP),w(WP,zP),w(zP,YP),w(WP,KP),w(WP,VP),w(VP,UP),w(WP,QP),w(WP,XP),w(XP,ZP),w(WP,aw),w(aw,sw),w(WP,tw),w(tw,ew),w(WP,ow),w(WP,nw),w(nw,rw),w(WP,cw),w(WP,lw),w(lw,iw),w(WP,pw),w(pw,hw),w(WP,fw),w(fw,uw),w(WP,vw),w(WP,dw),w(dw,Ew),w(WP,gw),w(gw,kw),w(WP,mw),w(mw,Sw),w(WP,Pw),w(WP,ww),w(ww,Aw),w(WP,Nw),w(WP,yw),w(yw,bw),w(WP,xw),w(WP,Cw),w(Cw,Ow),w(WP,jw),w(WP,Dw),w(Dw,Tw),w(WP,Iw),w(WP,Mw),w(Mw,Ww),w(WP,qw),w(WP,Bw),w(Bw,Rw),w(WP,_w),w(WP,Lw),w(Lw,Gw),w(WP,Fw),w(Fw,$w),w(WP,Hw),w(Hw,Jw),w(WP,zw),w(WP,Yw),w(Yw,Kw),w(WP,Vw),w(WP,Uw),w(Uw,Qw),w(WP,Xw),w(Xw,Zw),w(WP,aA),w(aA,sA),w(WP,tA),w(WP,eA),w(eA,oA),w(WP,nA),w(nA,rA),w(WP,cA),w(cA,lA),w(WP,iA),w(WP,pA),w(pA,hA),P(a,fA,f),P(a,uA,f),w(uA,vA),w(uA,dA),w(dA,EA),w(uA,gA),P(a,kA,f),P(a,mA,f),w(mA,SA),w(mA,PA),w(PA,wA),w(mA,AA),P(a,NA,f),P(a,yA,f),P(a,xA,f),P(a,CA,f),w(CA,OA),w(CA,jA),w(jA,DA),w(CA,TA),w(CA,IA),w(IA,MA),w(CA,WA),w(CA,qA),w(qA,BA),w(CA,RA),P(a,_A,f),P(a,LA,f),w(LA,GA),w(GA,FA),w(FA,$A),w($A,HA),w(HA,JA),w($A,zA),w(FA,YA),w(YA,KA),w(GA,VA),w(VA,UA),w(UA,QA),w(QA,XA),w(UA,ZA),w(UA,aN),w(aN,sN),w(UA,tN),w(UA,eN),w(eN,oN),w(UA,nN),w(GA,rN),w(rN,cN),w(cN,lN),w(lN,iN),w(cN,pN),w(rN,hN),w(hN,fN),w(GA,uN),w(GA,vN),w(vN,dN),w(dN,EN),w(EN,gN),w(dN,kN),w(vN,mN),w(mN,SN),w(GA,PN),w(GA,wN),w(wN,AN),w(AN,NN),w(NN,yN),w(AN,bN),w(wN,xN),w(xN,CN),w(GA,ON),w(ON,jN),w(jN,DN),w(ON,TN),w(ON,IN),w(IN,MN),w(GA,WN),w(WN,qN),w(qN,BN),w(BN,RN),w(qN,_N),w(WN,LN),w(LN,GN),w(GA,FN),w(GA,$N),w($N,HN),w(HN,JN),w(JN,zN),w(HN,YN),w($N,KN),w(KN,VN),w(GA,UN),w(UN,QN),w(QN,XN),w(XN,ZN),w(QN,ay),w(UN,sy),w(sy,ty),w(GA,ey),w(GA,oy),w(oy,ny),w(ny,ry),w(ry,cy),w(ny,ly),w(oy,iy),w(iy,py),w(GA,hy),w(GA,fy),w(fy,uy),w(uy,vy),w(vy,dy),w(uy,Ey),w(fy,gy),w(gy,ky),w(GA,my),w(my,Sy),w(Sy,Py),w(Py,wy),w(Sy,Ay),w(Sy,Ny),w(Ny,yy),w(Sy,by),w(Sy,xy),w(xy,Cy),w(Sy,Oy),w(Oy,jy),w(Sy,Dy),w(Sy,Ty),w(Ty,Iy),w(Sy,My),w(Sy,Wy),w(Wy,qy),w(Sy,By),w(By,Ry),w(Sy,_y),w(Sy,Ly),w(Ly,Gy),w(Sy,Fy),w(Sy,$y),w($y,Hy),w(Sy,Jy),w(Sy,zy),w(zy,Yy),w(Sy,Ky),w(Sy,Vy),w(Vy,Uy),w(Sy,Qy),w(Sy,Xy),w(Xy,Zy),w(Zy,ab),w(Xy,sb),w(Xy,tb),w(tb,eb),w(Sy,ob),w(Sy,nb),w(nb,rb),w(Sy,cb),w(Sy,lb),w(lb,ib),w(Sy,pb),w(Sy,hb),w(hb,fb),w(Sy,ub),w(Sy,vb),w(vb,db),w(db,Eb),w(vb,gb),w(vb,kb),w(kb,mb),w(Sy,Sb),w(Sy,Pb),w(Pb,wb),w(Sy,Ab),w(Sy,Nb),w(Nb,yb),w(Sy,bb),w(Sy,xb),w(xb,Cb),w(Sy,Ob),w(Sy,jb),w(jb,Db),w(Db,Tb),w(jb,Ib),w(jb,Mb),w(Mb,Wb),w(Sy,qb),w(Sy,Bb),w(Bb,Rb),w(Sy,_b),w(Sy,Lb),w(Lb,Gb),w(Sy,Fb),w(Sy,$b),w($b,Hb),w(Sy,Jb),w(Sy,zb),w(zb,Yb),w(Yb,Kb),w(zb,Vb),w(zb,Ub),w(Ub,Qb),w(Sy,Xb),w(Sy,Zb),w(Zb,ax),w(Sy,sx),w(GA,tx),w(tx,ex),w(ex,ox),w(ox,nx),w(ex,rx),w(tx,cx),w(cx,lx),P(a,ix,f),P(a,px,f),P(a,fx,f),P(a,ux,f),w(ux,vx),w(ux,dx),w(dx,Ex),w(ux,gx),w(ux,kx),w(kx,mx),w(ux,Sx),w(ux,Px),w(Px,wx),w(ux,Ax),w(ux,Nx),w(Nx,yx),w(ux,bx),w(ux,xx),w(xx,Cx),w(ux,Ox),w(ux,jx),w(jx,Dx),w(ux,Tx),P(a,Ix,f),P(a,Mx,f),w(Mx,Wx)},d(a){a&&k(s),a&&k(e),a&&k(o),a&&k(C),a&&k(O),a&&k(D),a&&k(T),a&&k(W),a&&k(q),a&&k(G),a&&k(F),a&&k(H),a&&k(J),a&&k(ta),a&&k(ea),a&&k(la),a&&k(ia),a&&k(va),a&&k(da),a&&k(Wa),a&&k(qa),a&&k(Ga),a&&k(Fa),a&&k(Ha),a&&k(Ja),a&&k(Ya),a&&k(Ka),a&&k(Ua),a&&k(Qa),a&&k(hs),a&&k(fs),a&&k(vs),a&&k(ds),a&&k(ys),a&&k(bs),a&&k(Ms),a&&k(Ws),a&&k(Bs),a&&k(Rs),a&&k(Js),a&&k(zs),a&&k(Ks),a&&k(Vs),a&&k(at),a&&k(st),a&&k(et),a&&k(ot),a&&k(rt),a&&k(ct),a&&k(ft),a&&k(ut),a&&k(dt),a&&k(Et),a&&k(kt),a&&k(mt),a&&k(Nt),a&&k(yt),a&&k(mn),a&&k(Sn),a&&k(Cn),a&&k(On),a&&k(wi),a&&k(Ai),a&&k(xi),a&&k(Ci),a&&k(uv),a&&k(vv),a&&k(yv),a&&k(bv),a&&k(Dv),a&&k(Tv),a&&k(dd),a&&k(Ed),a&&k(kd),a&&k(md),a&&k(Dd),a&&k(Td),a&&k(Ld),a&&k(Gd),a&&k($d),a&&k(Hd),a&&k(zd),a&&k(Yd),a&&k(eE),a&&k(oE),a&&k(rE),a&&k(cE),a&&k(dE),a&&k(EE),a&&k(PE),a&&k(wE),a&&k(jE),a&&k(DE),a&&k(HE),a&&k(JE),a&&k(Sg),a&&k(Pg),a&&k(Og),a&&k(jg),a&&k(Wg),a&&k(qg),a&&k(ck),a&&k(lk),a&&k(Ek),a&&k(gk),a&&k(Ck),a&&k(Ok),a&&k(Dk),a&&k(Tk),a&&k(Rm),a&&k(_m),a&&k(Hm),a&&k(Jm),a&&k(tS),a&&k(eS),a&&k(PS),a&&k(wS),a&&k(IS),a&&k(MS),a&&k(aP),a&&k(sP),a&&k(fP),a&&k(uP),a&&k(IP),a&&k(MP),a&&k(fA),a&&k(uA),a&&k(kA),a&&k(mA),a&&k(NA),a&&k(yA),a&&k(xA),a&&k(CA),a&&k(_A),a&&k(LA),a&&k(ix),a&&k(px),a&&k(fx),a&&k(ux),a&&k(Ix),a&&k(Mx)}}}function y(a){let s,t;const f=[b];let u={$$slots:{default:[N]},$$scope:{ctx:a}};for(let a=0;a<f.length;a+=1)u=e(u,f[a]);return s=new A({props:u}),{c(){o(s.$$.fragment)},l(a){n(s.$$.fragment,a)},m(a,e){r(s,a,e),t=!0},p(a,[t]){const e=0&t?c(f,[l(b)]):{};1&t&&(e.$$scope={dirty:t,ctx:a}),s.$set(e)},i(a){t||(i(s.$$.fragment,a),t=!0)},o(a){p(s.$$.fragment,a),t=!1},d(a){h(s,a)}}}const b={title:"Blogging with Sapper, Tailwind, and mdsvex: Part 1",subtitle:"How I made this very blog.",author:"Jeff Caldwell",description:"How I made this site using Svelte/Sapper, TailwindCss, and mdsvex",tags:["Svelte","Sapper","TailwindCss","mdsvex","Blog","Markdown","JavaScript","CSS","Tutorial","Web Development","pnpm"],date:"Tuesday, December 15, 2020",layout:"blog",toc:!0};export default class extends a{constructor(a){super(),s(this,a,null,y,t,{})}}export{b as metadata};
