import{X as e,w as t,c as a,S as r,i,s as o,P as s,x as n,y as l,z as h,Q as c,R as u,A as f,B as d,C as m,I as p,Y as g,O as v,h as b,t as w,j as y,k,l as I,m as E,g as A,n as x,o as P,f as $,p as j,r as C}from"./client.997d51b2.js";import"./Sidebar.f2d4d8c4.js";import{B as D}from"./blog.b32f8ab3.js";import{f as H,s as z,t as S,l as B,e as R,a as T,b as F,c as O,d as G}from"./line.b837d817.js";var U=/^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i,L=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,M=/\s|\uFEFF|\xA0/,W=/\r?\n[\x20\x09]+/g,N=/[;,"]/,Y=/[;,"]|\s/,V=/^[!#$%&'*+\-\.^_`|~\da-zA-Z]+$/,q=1,Q=2,_=4;function J(e){return e.replace(L,"")}function X(e){return M.test(e)}function Z(e,t){for(;X(e[t]);)t++;return t}function K(e){return Y.test(e)||!V.test(e)}var ee=function(){function r(e){a(this,r),this.refs=[],e&&this.parse(e)}return e(r,[{key:"rel",value:function(e){for(var t=[],a=e.toLowerCase(),r=0;r<this.refs.length;r++)this.refs[r].rel.toLowerCase()===a&&t.push(this.refs[r]);return t}},{key:"get",value:function(e,t){e=e.toLowerCase();for(var a=[],r=0;r<this.refs.length;r++)this.refs[r][e]===t&&a.push(this.refs[r]);return a}},{key:"set",value:function(e){return this.refs.push(e),this}},{key:"has",value:function(e,t){e=e.toLowerCase();for(var a=0;a<this.refs.length;a++)if(this.refs[a][e]===t)return!0;return!1}},{key:"parse",value:function(e,a){e=J(e=(a=a||0)?e.slice(a):e).replace(W,"");for(var i,o=q,s=e.length,n=(a=0,null);a<s;)if(o===q){if(X(e[a])){a++;continue}if("<"!==e[a])throw new Error('Unexpected character "'+e[a]+'" at offset '+a);var l;if(null!=n&&(null!=n.rel?(l=this.refs).push.apply(l,t(r.expandRelations(n))):this.refs.push(n)),-1===(u=e.indexOf(">",a)))throw new Error("Expected end of URI delimiter at offset "+a);n={uri:e.slice(a+1,u)},a=u,o=Q,a++}else if(o===Q){if(X(e[a])){a++;continue}if(";"===e[a])o=_,a++;else{if(","!==e[a])throw new Error('Unexpected character "'+e[a]+'" at offset '+a);o=q,a++}}else{if(o!==_)throw new Error('Unknown parser state "'+o+'"');if(";"===e[a]||X(e[a])){a++;continue}if(-1===(u=e.indexOf("=",a)))throw new Error("Expected attribute delimiter at offset "+a);var h=J(e.slice(a,u)).toLowerCase(),c="";if('"'===e[a=Z(e,a=u+1)])for(a++;a<s;){if('"'===e[a]){a++;break}"\\"===e[a]&&a++,c+=e[a],a++}else{for(var u=a+1;!N.test(e[u])&&u<s;)u++;c=e.slice(a,u),a=u}switch(n[h]&&r.isSingleOccurenceAttr(h)||("*"===h[h.length-1]?n[h]=r.parseExtendedValue(c):(c="type"===h?c.toLowerCase():c,null!=n[h]?Array.isArray(n[h])?n[h].push(c):n[h]=[n[h],c]:n[h]=c)),e[a]){case",":o=q;break;case";":o=_}a++}null!=n&&(null!=n.rel?(i=this.refs).push.apply(i,t(r.expandRelations(n))):this.refs.push(n));return n=null,this}},{key:"toString",value:function(){for(var e=[],t="",a=null,i=0;i<this.refs.length;i++)a=this.refs[i],t=Object.keys(this.refs[i]).reduce((function(e,t){return"uri"===t?e:e+"; "+r.formatAttribute(t,a[t])}),"<"+a.uri+">"),e.push(t);return e.join(", ")}}]),r}();ee.isCompatibleEncoding=function(e){return U.test(e)},ee.parse=function(e,t){return(new ee).parse(e,t)},ee.isSingleOccurenceAttr=function(e){return"rel"===e||"type"===e||"media"===e||"title"===e||"title*"===e},ee.isTokenAttr=function(e){return"rel"===e||"type"===e||"anchor"===e},ee.escapeQuotes=function(e){return e.replace(/"/g,'\\"')},ee.expandRelations=function(e){return e.rel.split(" ").map((function(t){var a=Object.assign({},e);return a.rel=t,a}))},ee.parseExtendedValue=function(e){var t=/([^']+)?(?:'([^']+)')?(.+)/.exec(e);return{language:t[2].toLowerCase(),encoding:ee.isCompatibleEncoding(t[1])?null:t[1].toLowerCase(),value:ee.isCompatibleEncoding(t[1])?decodeURIComponent(t[3]):t[3]}},ee.formatExtendedAttribute=function(e,t){var a=(t.encoding||"utf-8").toUpperCase();return e+"="+a+"'"+(t.language||"en")+"'"+(Buffer.isBuffer(t.value)&&ee.isCompatibleEncoding(a)?t.value.toString(a):Buffer.isBuffer(t.value)?t.value.toString("hex").replace(/[0-9a-f]{2}/gi,"%$1"):encodeURIComponent(t.value))},ee.formatAttribute=function(e,t){return Array.isArray(t)?t.map((function(t){return ee.formatAttribute(e,t)})).join("; "):"*"===e[e.length-1]||"string"!=typeof t?ee.formatExtendedAttribute(e,t):(ee.isTokenAttr(e)?t=K(t)?'"'+ee.escapeQuotes(t)+'"':ee.escapeQuotes(t):K(t)&&(t='"'+(t=(t=encodeURIComponent(t)).replace(/%20/g," ").replace(/%2C/g,",").replace(/%3B/g,";"))+'"'),e+"="+t)};var te=ee;function ae(e){let t,a,r,i,o,s,n,l,h,c,u,f,d,m,p,g,v,D,H,z,S,B,R,T,F,O,G,U,L,M,W,N,Y,V,q,Q,_,J,X,Z,K,ee,te,ae,re,ie,oe,se,ne,le,he,ce,ue,fe,de,me,pe,ge,ve,be,we,ye,ke,Ie,Ee,Ae,xe,Pe,$e,je,Ce,De,He=Math.round(e[1]/e[2])+"";return{c(){t=b("section"),a=b("h3"),r=b("span"),i=w(e[1]),o=w(" commits over "),s=b("span"),n=w(e[2]),l=w(" days. An average of "),h=b("span"),c=w(He),u=w(" commits per day (D3)"),f=y(),d=b("div"),m=b("div"),p=y(),g=b("h2"),v=w("What’s this?"),D=y(),H=b("p"),z=w("In an ongoing attempt to learn just a bit more about data visualization, I decided to start tracking my github pushes over time. The publicly available "),S=b("a"),B=w("Github API"),R=w(" gave me an opportunity to do that. The default pagination of the API also gave me an opportunity to learn how to make multiple API calls based on the first response. I learned a little about using "),T=b("code"),F=w("Promise.all()"),O=w(", which I’ll be using again because coupling it with "),G=b("code"),U=w("async/await"),L=w(" makes using fetch much more predictable."),M=y(),W=b("h2"),N=w("What would make this better?"),Y=y(),V=b("h3"),q=w("Server-side fetching"),Q=y(),_=b("p"),J=w("At the moment all of the fetching is done client-side, which means I can’t include my GitHub token in the code. This limits the dataset to the last fourteen days (at least I think it does). If I were to move the API calls to the server I think I would be able to return a larger dataset safely (i.e. I wouldn’t be flashing my Github token all over the internet)."),X=y(),Z=b("h3"),K=w("A more elaborate visualization"),ee=y(),te=b("p"),ae=w("GitHub includes a lot more information in the user events data that’s returned from the API. I could feasably make a visualization of all of the different kinds of events over the returned time period. If I were to try a different kind of visualization I could include more detailed data, for example commit messages etc."),re=y(),ie=b("h2"),oe=w("What’s next?"),se=y(),ne=b("p"),le=w("I have a lot to learn about D3. It’s not the kind of (massive) library someone just picks up in a week or so. "),he=b("a"),ce=w("Mike Bostock"),ue=w(" and all of the D3 contributors have spent well over a decade adding to and refining the library and it’s widely considered to be the granddaddy of all web-based data-visualization. It’s not an easy library, by any means, but mastering it (or, at least, becoming somewhat proficient in its use,) is a prerequisite for any serious work in data visualization on the web."),fe=y(),de=b("p"),me=w("Interestingly, both Mike Bostock and "),pe=b("a"),ge=w("Rich Harris"),ve=w(" have been employed as graphics editors at the "),be=b("a"),we=w("New York Times"),ye=w(". Rich Harris currently works at the Times, while also developing "),ke=b("a"),Ie=w("Svelte"),Ee=w(". Mike Bostock is a former graphics editor there."),Ae=y(),xe=b("p"),Pe=w("I’ll write more about the process of fetching, curing, and rendering this data. For now, I’ll just leave a link to a great tutorial for creating a basic line chart in D3."),$e=y(),je=b("p"),Ce=b("a"),De=w("How to draw a simple line chart"),this.h()},l(b){t=k(b,"SECTION",{class:!0});var w=I(t);a=k(w,"H3",{class:!0});var y=I(a);r=k(y,"SPAN",{class:!0});var P=I(r);i=E(P,e[1]),P.forEach(A),o=E(y," commits over "),s=k(y,"SPAN",{class:!0});var $=I(s);n=E($,e[2]),$.forEach(A),l=E(y," days. An average of "),h=k(y,"SPAN",{class:!0});var j=I(h);c=E(j,He),j.forEach(A),u=E(y," commits per day (D3)"),y.forEach(A),f=x(w),d=k(w,"DIV",{class:!0});var C=I(d);m=k(C,"DIV",{class:!0}),I(m).forEach(A),C.forEach(A),w.forEach(A),p=x(b),g=k(b,"H2",{id:!0});var ze=I(g);v=E(ze,"What’s this?"),ze.forEach(A),D=x(b),H=k(b,"P",{});var Se=I(H);z=E(Se,"In an ongoing attempt to learn just a bit more about data visualization, I decided to start tracking my github pushes over time. The publicly available "),S=k(Se,"A",{href:!0,rel:!0});var Be=I(S);B=E(Be,"Github API"),Be.forEach(A),R=E(Se," gave me an opportunity to do that. The default pagination of the API also gave me an opportunity to learn how to make multiple API calls based on the first response. I learned a little about using "),T=k(Se,"CODE",{});var Re=I(T);F=E(Re,"Promise.all()"),Re.forEach(A),O=E(Se,", which I’ll be using again because coupling it with "),G=k(Se,"CODE",{});var Te=I(G);U=E(Te,"async/await"),Te.forEach(A),L=E(Se," makes using fetch much more predictable."),Se.forEach(A),M=x(b),W=k(b,"H2",{id:!0});var Fe=I(W);N=E(Fe,"What would make this better?"),Fe.forEach(A),Y=x(b),V=k(b,"H3",{id:!0});var Oe=I(V);q=E(Oe,"Server-side fetching"),Oe.forEach(A),Q=x(b),_=k(b,"P",{});var Ge=I(_);J=E(Ge,"At the moment all of the fetching is done client-side, which means I can’t include my GitHub token in the code. This limits the dataset to the last fourteen days (at least I think it does). If I were to move the API calls to the server I think I would be able to return a larger dataset safely (i.e. I wouldn’t be flashing my Github token all over the internet)."),Ge.forEach(A),X=x(b),Z=k(b,"H3",{id:!0});var Ue=I(Z);K=E(Ue,"A more elaborate visualization"),Ue.forEach(A),ee=x(b),te=k(b,"P",{});var Le=I(te);ae=E(Le,"GitHub includes a lot more information in the user events data that’s returned from the API. I could feasably make a visualization of all of the different kinds of events over the returned time period. If I were to try a different kind of visualization I could include more detailed data, for example commit messages etc."),Le.forEach(A),re=x(b),ie=k(b,"H2",{id:!0});var Me=I(ie);oe=E(Me,"What’s next?"),Me.forEach(A),se=x(b),ne=k(b,"P",{});var We=I(ne);le=E(We,"I have a lot to learn about D3. It’s not the kind of (massive) library someone just picks up in a week or so. "),he=k(We,"A",{href:!0,rel:!0});var Ne=I(he);ce=E(Ne,"Mike Bostock"),Ne.forEach(A),ue=E(We," and all of the D3 contributors have spent well over a decade adding to and refining the library and it’s widely considered to be the granddaddy of all web-based data-visualization. It’s not an easy library, by any means, but mastering it (or, at least, becoming somewhat proficient in its use,) is a prerequisite for any serious work in data visualization on the web."),We.forEach(A),fe=x(b),de=k(b,"P",{});var Ye=I(de);me=E(Ye,"Interestingly, both Mike Bostock and "),pe=k(Ye,"A",{href:!0,rel:!0});var Ve=I(pe);ge=E(Ve,"Rich Harris"),Ve.forEach(A),ve=E(Ye," have been employed as graphics editors at the "),be=k(Ye,"A",{href:!0,rel:!0});var qe=I(be);we=E(qe,"New York Times"),qe.forEach(A),ye=E(Ye,". Rich Harris currently works at the Times, while also developing "),ke=k(Ye,"A",{href:!0,rel:!0});var Qe=I(ke);Ie=E(Qe,"Svelte"),Qe.forEach(A),Ee=E(Ye,". Mike Bostock is a former graphics editor there."),Ye.forEach(A),Ae=x(b),xe=k(b,"P",{});var _e=I(xe);Pe=E(_e,"I’ll write more about the process of fetching, curing, and rendering this data. For now, I’ll just leave a link to a great tutorial for creating a basic line chart in D3."),_e.forEach(A),$e=x(b),je=k(b,"P",{});var Je=I(je);Ce=k(Je,"A",{href:!0,rel:!0});var Xe=I(Ce);De=E(Xe,"How to draw a simple line chart"),Xe.forEach(A),Je.forEach(A),this.h()},h(){P(r,"class","highlight svelte-wdjgav"),P(s,"class","highlight svelte-wdjgav"),P(h,"class","highlight svelte-wdjgav"),P(a,"class","viz-header"),P(m,"class","lc-chart svelte-wdjgav"),P(d,"class","lc-wrapper"),P(t,"class","commits"),P(g,"id","whats-this"),P(S,"href","https://docs.github.com/en/free-pro-team@latest/rest"),P(S,"rel","nofollow"),P(W,"id","what-would-make-this-better"),P(V,"id","server-side-fetching"),P(Z,"id","a-more-elaborate-visualization"),P(ie,"id","whats-next"),P(he,"href","https://observablehq.com/@mbostock"),P(he,"rel","nofollow"),P(pe,"href","https://twitter.com/Rich_Harris"),P(pe,"rel","nofollow"),P(be,"href","https://twitter.com/nytgraphics"),P(be,"rel","nofollow"),P(ke,"href","http://svelte.dev"),P(ke,"rel","nofollow"),P(Ce,"href","https://observablehq.com/@jeantimex/how-to-draw-a-basic-line-chart"),P(Ce,"rel","nofollow")},m(b,w){$(b,t,w),j(t,a),j(a,r),j(r,i),j(a,o),j(a,s),j(s,n),j(a,l),j(a,h),j(h,c),j(a,u),j(t,f),j(t,d),j(d,m),e[4](m),$(b,p,w),$(b,g,w),j(g,v),$(b,D,w),$(b,H,w),j(H,z),j(H,S),j(S,B),j(H,R),j(H,T),j(T,F),j(H,O),j(H,G),j(G,U),j(H,L),$(b,M,w),$(b,W,w),j(W,N),$(b,Y,w),$(b,V,w),j(V,q),$(b,Q,w),$(b,_,w),j(_,J),$(b,X,w),$(b,Z,w),j(Z,K),$(b,ee,w),$(b,te,w),j(te,ae),$(b,re,w),$(b,ie,w),j(ie,oe),$(b,se,w),$(b,ne,w),j(ne,le),j(ne,he),j(he,ce),j(ne,ue),$(b,fe,w),$(b,de,w),j(de,me),j(de,pe),j(pe,ge),j(de,ve),j(de,be),j(be,we),j(de,ye),j(de,ke),j(ke,Ie),j(de,Ee),$(b,Ae,w),$(b,xe,w),j(xe,Pe),$(b,$e,w),$(b,je,w),j(je,Ce),j(Ce,De)},p(e,t){2&t&&C(i,e[1]),4&t&&C(n,e[2]),6&t&&He!==(He=Math.round(e[1]/e[2])+"")&&C(c,He)},d(a){a&&A(t),e[4](null),a&&A(p),a&&A(g),a&&A(D),a&&A(H),a&&A(M),a&&A(W),a&&A(Y),a&&A(V),a&&A(Q),a&&A(_),a&&A(X),a&&A(Z),a&&A(ee),a&&A(te),a&&A(re),a&&A(ie),a&&A(se),a&&A(ne),a&&A(fe),a&&A(de),a&&A(Ae),a&&A(xe),a&&A($e),a&&A(je)}}}function re(e){let t,a;const r=[ie];let i={$$slots:{default:[ae]},$$scope:{ctx:e}};for(let e=0;e<r.length;e+=1)i=s(i,r[e]);return t=new D({props:i}),{c(){n(t.$$.fragment)},l(e){l(t.$$.fragment,e)},m(e,r){h(t,e,r),a=!0},p(e,[a]){const i=0&a?c(r,[u(ie)]):{};8199&a&&(i.$$scope={dirty:a,ctx:e}),t.$set(i)},i(e){a||(f(t.$$.fragment,e),a=!0)},o(e){d(t.$$.fragment,e),a=!1},d(e){m(t,e)}}}const ie={layout:"blog",title:"Visualizing Pushes to GitHub with D3",subtitle:"Simple line charts with D3",description:"My Github push actions over the past 14 days, visualized with D3",date:"Sunday, December 6, 2020",author:"Jeff Caldwell"};function oe(e,t,a){let{repoData:r}=t;let i;async function o(e){let t=[];var r=[];const o=await fetch(e);200!==o.status&&console.error(o.status,o.message);const c=o.headers;if(c.has("link")){const e=c.get("link");te.parse(e).refs.forEach((e=>{r.push(fetch(e.uri))}))}(await o.json()).forEach((e=>t.push(e))),Promise.all(r).then((e=>Promise.all(e.map((e=>e.json()))).then((e=>{e.forEach((e=>{e.forEach((e=>{t.push(e)}))})),async function(e){let t=e.filter((e=>"PushEvent"===e.type)).map((e=>(e.payload.commits.map((e=>({message:e.message,commitUrl:e.url}))),{id:e.id,date:new Date(e.created_at).toLocaleDateString(),repoUrl:e.repo.url,repoName:e.repo.name,commits:e.payload.commits}))).reduce(((e,t)=>{const a=t.date;return e[a]||(e[a]=[]),e[a].push(t),e}),{});const r=Object.entries(t).map((e=>({date:e[0],commits:e[1]})));s=[...r],function(e){const t=z(i),a={height:600,width:1200,margin:{top:16,right:16,bottom:32,left:32}};a.boundedWidth=a.width-(a.margin.left+a.margin.right),a.boundedHeight=a.height-(a.margin.top+a.margin.bottom);const r=S("%m/%d/%Y"),o=e=>e.commits.length,s=e=>r(e.date),n=t.append("svg").attr("viewBox",`0 0 ${a.width} ${a.height}`),l=(n.append("rect").attr("fill","none").attr("width",a.width).attr("height",a.height),n.append("g").style("transform",`translate(${a.margin.left}px, ${a.margin.top}px)`)),h=B().domain(R(e,o)).range([a.boundedHeight,0]),c=T().domain(R(e,s)).range([0,a.boundedWidth]),u=F().x((e=>c(s(e)))).y((e=>h(o(e)))),f=(l.append("g").attr("class","grid-lines").selectAll("line").data(h.ticks()).join("line").attr("x1",0).attr("x2",a.width-(a.margin.right+a.margin.left)).attr("y1",(e=>h(e))).attr("y2",(e=>h(e))).attr("stroke","#2d3b52"),l.append("path").attr("d",u(e)).attr("stroke","#ffbb28").attr("fill","none").attr("stroke-width",2),O().scale(h)),d=G().scale(c);l.append("g").call(f),l.append("g").call(d).style("transform",`translateY(${a.boundedHeight}px)`)}(s),function(e){const t=S("%m/%d/%Y");n=e.map((e=>({date:t(e.date),commits:e.commits.length}))),n.map((e=>{a(1,l+=e.commits),a(2,h+=1)}))}(s)}(t)})))).catch((e=>console.error(e)))}H("%b. %e");let s,n,l,h;return p((async()=>{await o("https://api.github.com/users/nemo-omen/events?per_page=100&username=fa79888b427358f739166bf1ccfa40939fbfb79f"),await g()})),e.$$set=e=>{"repoData"in e&&a(3,r=e.repoData)},s=[],n=[],a(1,l=0),a(2,h=0),[i,l,h,r,function(e){v[e?"unshift":"push"]((()=>{i=e,a(0,i)}))}]}export default class extends r{constructor(e){super(),i(this,e,oe,re,o,{repoData:3})}}export{ie as metadata};
